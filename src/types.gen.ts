// This file is auto-generated by @hey-api/openapi-ts

export type AccessSubnet = {
    readonly uuid: string;
    inet: string;
    description?: string;
    customer: string;
};

export type AccessSubnetRequest = {
    inet: string;
    description?: string;
    customer: string;
};

export type AccountNameGenerationPolicyEnum = 'project_slug';

export type AdminAnnouncement = {
    readonly uuid?: string;
    description?: string;
    active_from?: string;
    active_to?: string;
    readonly is_active?: boolean;
    type?: AdminAnnouncementTypeEnum;
    readonly created?: string;
    readonly maintenance_uuid?: string;
    readonly maintenance_name?: string;
    readonly maintenance_type?: string;
    readonly maintenance_state?: string;
    readonly maintenance_scheduled_start?: string;
    readonly maintenance_scheduled_end?: string;
    readonly maintenance_service_provider?: string;
    readonly maintenance_affected_offerings?: Array<{
        uuid?: string;
        name?: string;
        impact_level?: string;
        impact_level_display?: string;
        impact_description?: string;
    }>;
};

export type AdminAnnouncementRequest = {
    description?: string;
    active_from: string;
    active_to: string;
    type?: AdminAnnouncementTypeEnum;
};

export type AdminAnnouncementTypeEnum = 'information' | 'warning' | 'danger';

export type AgreementTypeEnum = 'TOS' | 'PP';

export type AllocationTimeEnum = 'on_decision' | 'fixed_date';

export type Answer = {
    readonly uuid: string;
    readonly question_description: string;
    readonly question_type: string;
    readonly question_required: boolean;
    /**
     * Flexible answer storage for different question types
     */
    answer_data?: unknown;
    /**
     * Internal flag - this answer requires additional review
     */
    readonly requires_review: boolean;
    readonly user: number;
    readonly user_name: string;
    readonly created: string;
    readonly modified: string;
};

export type AnswerSubmitRequest = {
    question_uuid: string;
    answer_data: unknown;
};

export type AnswerSubmitResponse = {
    detail: string;
    completion: ChecklistCompletion;
};

export type Attachment = {
    readonly url?: string;
    readonly uuid?: string;
    issue?: string;
    readonly issue_key?: string;
    readonly created?: string;
    file?: string;
    readonly mime_type?: string;
    readonly file_size?: number;
    readonly file_name?: string;
    readonly backend_id?: string;
    readonly destroy_is_available?: boolean;
};

export type AttachmentRequest = {
    issue: string;
    file: Blob | File;
};

export type AuthResult = {
    readonly uuid: string;
    readonly token: string;
    phone: string;
    /**
     * This message will be shown to user.
     */
    readonly message: string;
    state: AuthResultStateEnum;
    readonly error_message: string;
    /**
     * Cancellation details.
     */
    readonly details: string;
};

export type AuthResultRequest = {
    phone: string;
};

export type AuthResultStateEnum = 'Scheduled' | 'Processing' | 'OK' | 'Canceled' | 'Erred';

export type AuthResultUuidRequest = {
    /**
     * UUID of the authentication result.
     */
    uuid: string;
};

export type AuthToken = {
    readonly url: string;
    readonly created: string;
    user: string;
    readonly user_first_name: string;
    readonly user_last_name: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    readonly user_is_active: boolean;
    /**
     * Token lifetime in seconds.
     */
    readonly user_token_lifetime: number | null;
};

export type AwsImage = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    region: AwsRegion;
};

export type AwsInstance = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly start_time?: string | null;
    /**
     * Number of cores in a VM
     */
    readonly cores?: number;
    /**
     * Memory size in MiB
     */
    readonly ram?: number;
    /**
     * Disk size in MiB
     */
    readonly disk?: number;
    /**
     * Minimum memory size in MiB
     */
    readonly min_ram?: number;
    /**
     * Minimum disk size in MiB
     */
    readonly min_disk?: number;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    readonly external_ips?: Array<string>;
    readonly internal_ips?: Array<string>;
    readonly latitude?: number | null;
    readonly longitude?: number | null;
    readonly key_name?: string;
    readonly key_fingerprint?: string;
    readonly image_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AwsInstanceRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    ssh_public_key?: string;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    region: string;
    image: string;
    size: string;
};

export type AwsInstanceResize = {
    size: string;
};

export type AwsInstanceResizeRequest = {
    size: string;
};

export type AwsRegion = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type AwsSize = {
    readonly url: string;
    readonly uuid: string;
    readonly name: string;
    /**
     * Number of cores in a VM
     */
    cores: number;
    /**
     * Memory size in MiB
     */
    ram: number;
    /**
     * Disk size in MiB
     */
    disk: number;
    readonly regions: Array<AwsRegion>;
    readonly description: string;
};

export type AwsVolume = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    /**
     * Size of volume in gigabytes
     */
    size?: number;
    volume_type?: VolumeTypeEnum;
    readonly device?: string | null;
    readonly instance?: string | null;
    readonly runtime_state?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AwsVolumeAttach = {
    instance: string;
    /**
     * The device name for attachment. For example, use /dev/sd[f-p] for Linux instances.
     */
    device: string;
};

export type AwsVolumeAttachRequest = {
    instance: string;
    /**
     * The device name for attachment. For example, use /dev/sd[f-p] for Linux instances.
     */
    device: string;
};

export type AwsVolumeRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    /**
     * Size of volume in gigabytes
     */
    size: number;
    region: string;
    volume_type: VolumeTypeEnum;
};

export type AzureImage = {
    readonly url: string;
    readonly uuid: string;
    publisher: string;
    name: string;
    sku: string;
    version: string;
};

export type AzureLocation = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    latitude?: number | null;
    longitude?: number | null;
};

export type AzurePublicIp = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    location?: string;
    resource_group?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AzurePublicIpRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    location: string;
    resource_group: string;
};

export type AzureResourceGroup = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    location?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AzureSize = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    max_data_disk_count: number;
    memory_in_mb: number;
    number_of_cores: number;
    os_disk_size_in_mb: number;
    resource_disk_size_in_mb: number;
};

export type AzureSqlDatabase = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    server?: string;
    charset?: string | null;
    collation?: string | null;
    readonly resource_group_name?: string;
    readonly location_name?: string;
    readonly server_name?: string;
    readonly server_uuid?: string;
    readonly server_marketplace_uuid?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AzureSqlDatabaseCreate = {
    name: string;
    description?: string;
};

export type AzureSqlDatabaseCreateRequest = {
    name: string;
    description?: string;
};

export type AzureSqlDatabaseRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    server: string;
    charset?: string | null;
    collation?: string | null;
};

export type AzureSqlServer = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly resource_group?: string;
    readonly username?: string;
    readonly password?: string;
    storage_mb?: number | null;
    readonly fqdn?: string | null;
    readonly resource_group_name?: string;
    readonly location_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AzureSqlServerRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    location: string;
    storage_mb?: number | null;
};

export type AzureVirtualMachine = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly start_time?: string | null;
    /**
     * Number of cores in a VM
     */
    readonly cores?: number;
    /**
     * Memory size in MiB
     */
    readonly ram?: number;
    /**
     * Disk size in MiB
     */
    readonly disk?: number;
    /**
     * Minimum memory size in MiB
     */
    readonly min_ram?: number;
    /**
     * Minimum disk size in MiB
     */
    readonly min_disk?: number;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    readonly external_ips?: Array<string>;
    readonly internal_ips?: Array<string>;
    readonly latitude?: number | null;
    readonly longitude?: number | null;
    readonly key_name?: string;
    readonly key_fingerprint?: string;
    readonly image_name?: string;
    image?: string;
    size?: string;
    readonly runtime_state?: string;
    readonly resource_group?: string;
    readonly username?: string;
    readonly password?: string;
    readonly resource_group_name?: string;
    readonly location_name?: string;
    readonly size_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type AzureVirtualMachineRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    ssh_public_key?: string | null;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    image: string;
    size: string;
    location: string;
};

export type BackendIdRequest = {
    backend_id?: string;
};

export type BackendMetadata = {
    readonly state?: string;
    readonly runtime_state?: string;
    readonly action?: string;
    readonly instance_name?: string | null;
};

export type BackendResource = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    readonly created: string;
    readonly modified: string;
    project: string;
    readonly project_name: string;
    readonly project_url: string;
    offering: string;
    readonly offering_name: string;
    readonly offering_url: string;
    backend_id?: string;
    backend_metadata?: unknown;
};

export type BackendResourceImportRequest = {
    plan?: string;
};

export type BackendResourceReq = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    /**
     * Time when request processing started
     */
    readonly started: string | null;
    /**
     * Time when request processing finished
     */
    readonly finished: string | null;
    state: BackendResourceReqStateEnum;
    offering: string;
    readonly offering_name: string;
    readonly offering_url: string;
    readonly error_message: string;
    readonly error_traceback: string;
};

export type BackendResourceReqRequest = {
    offering: string;
};

export type BackendResourceReqStateEnum = 'Sent' | 'Processing' | 'Done' | 'Erred';

export type BackendResourceRequest = {
    name: string;
    project: string;
    offering: string;
    backend_id?: string;
    backend_metadata?: unknown;
};

export type BackendResourceRequestSetErredRequest = {
    error_message?: string;
    error_traceback?: string;
};

export type BaseComponentUsage = {
    readonly uuid: string;
    readonly created: string;
    description?: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    readonly type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    readonly name: string;
    /**
     * Unit of measurement, for example, GB.
     */
    readonly measured_unit: string;
    usage?: string;
    date: string;
    /**
     * Reported value is reused every month until changed.
     */
    recurring?: boolean;
};

export type BaseProviderPlan = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    readonly is_active?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    readonly init_price?: number;
    readonly switch_price?: number;
    backend_id?: string;
    readonly organization_groups?: Array<OrganizationGroup>;
    readonly prices?: {
        [key: string]: number;
    };
    readonly future_prices?: {
        [key: string]: number;
    };
    readonly quotas?: {
        [key: string]: number;
    };
    readonly resources_count?: number;
    readonly plan_type?: string;
    readonly minimal_price?: number;
};

export type BaseProviderPlanRequest = {
    name: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    backend_id?: string;
};

export type BasePublicPlan = {
    url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    readonly is_active?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    readonly init_price?: number;
    readonly switch_price?: number;
    backend_id?: string;
    readonly organization_groups?: Array<OrganizationGroup>;
    readonly prices?: {
        [key: string]: number;
    };
    readonly future_prices?: {
        [key: string]: number;
    };
    readonly quotas?: {
        [key: string]: number;
    };
    readonly resources_count?: number;
    readonly plan_type?: string;
    readonly minimal_price?: number;
};

export type BasePublicPlanRequest = {
    url: string;
    name: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    backend_id?: string;
};

export type BasicCustomer = {
    readonly uuid: string;
    name: string;
};

export type BasicUser = {
    readonly url?: string;
    readonly uuid?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username?: string;
    readonly full_name?: string;
    native_name?: string;
    /**
     * Email address
     */
    email?: string;
    image?: string | null;
};

export type BillingTypeEnum = 'fixed' | 'usage' | 'limit' | 'one' | 'few';

export type BillingUnit = 'month' | 'quarter' | 'half_month' | 'day' | 'hour' | 'quantity';

export type BlankEnum = '';

export type Booking = {
    readonly created_by_full_name: string | null;
    start: string;
    end: string;
};

export type BookingResource = {
    offering?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly offering_description?: string;
    readonly offering_image?: string;
    readonly offering_thumbnail?: string;
    readonly offering_type?: string;
    readonly offering_terms_of_service?: string;
    /**
     * Accessible to all customers.
     */
    readonly offering_shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    readonly offering_billable?: boolean;
    /**
     * Public data used by specific plugin, such as storage mode for OpenStack.
     */
    readonly offering_plugin_options?: unknown;
    readonly provider_name?: string;
    readonly provider_uuid?: string;
    readonly category_title?: string;
    readonly category_uuid?: string;
    readonly category_icon?: string;
    plan?: string;
    plan_unit?: BillingUnit | null;
    readonly plan_name?: string | null;
    readonly plan_uuid?: string | null;
    readonly plan_description?: string | null;
    readonly attributes?: {
        [key: string]: unknown;
    };
    readonly limits?: {
        [key: string]: number;
    };
    readonly uuid?: string;
    readonly created?: string;
    readonly modified?: string;
    readonly url?: string;
    readonly scope?: string;
    readonly description?: string;
    state?: ResourceState;
    readonly resource_uuid?: string | null;
    readonly backend_id?: string;
    readonly effective_id?: string;
    readonly resource_type?: string | null;
    readonly project?: string;
    readonly project_uuid?: string;
    readonly project_name?: string;
    readonly project_description?: string;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    readonly project_end_date?: string | null;
    readonly project_end_date_requested_by?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    readonly offering_slug?: string;
    readonly parent_offering_uuid?: string;
    readonly parent_offering_name?: string;
    readonly parent_offering_slug?: string;
    readonly parent_uuid?: string;
    readonly parent_name?: string;
    backend_metadata?: BackendMetadata;
    readonly is_usage_based?: boolean;
    readonly is_limit_based?: boolean;
    name?: string;
    readonly slug?: string;
    readonly current_usages?: {
        [key: string]: number;
    };
    readonly can_terminate?: boolean;
    readonly report?: Array<ReportSection>;
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
    readonly end_date_requested_by?: string | null;
    readonly username?: string | null;
    readonly limit_usage?: {
        [key: string]: number;
    };
    downscaled?: boolean;
    readonly restrict_member_access?: boolean;
    paused?: boolean;
    readonly endpoints?: Array<NestedEndpoint>;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly offering_customer_uuid?: string;
    readonly options?: unknown;
    readonly available_actions?: Array<string>;
    readonly last_sync?: string;
    order_in_progress?: OrderDetails | null;
    creation_order?: OrderDetails | null;
    readonly service_settings_uuid?: string;
    readonly project_slug?: string;
    readonly customer_slug?: string;
    readonly created_by?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly created_by_username?: string;
    readonly created_by_full_name?: string;
    readonly consumer_reviewed_by?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly consumer_reviewed_by_username?: string;
    readonly consumer_reviewed_by_full_name?: string;
    readonly slots?: Array<BookingSlot>;
};

export type BookingSlot = {
    start?: string;
    end?: string;
    backend_id?: string;
};

export type BroadcastMessage = {
    readonly uuid?: string;
    readonly created?: string;
    subject?: string;
    body?: string;
    query?: unknown;
    readonly author_full_name?: string;
    readonly emails?: unknown;
    state?: BroadcastMessageStateEnum;
    send_at?: string | null;
};

export type BroadcastMessageRequest = {
    subject: string;
    body: string;
    query: unknown;
    send_at?: string | null;
};

export type BroadcastMessageStateEnum = 'DRAFT' | 'SCHEDULED' | 'SENT';

export type CallAttachDocumentsRequest = {
    documents: Array<Blob | File>;
    description?: string;
};

export type CallComplianceOverview = {
    readonly checklist: {
        [key: string]: unknown;
    } | null;
    readonly proposals: Array<unknown>;
};

export type CallComplianceReviewRequest = {
    proposal_uuid: string;
    review_notes?: string;
};

export type CallDetachDocumentsRequest = {
    documents: Array<string>;
};

export type CallDocument = {
    readonly uuid?: string;
    /**
     * Documentation for call for proposals.
     */
    file?: string | null;
    readonly file_name?: string;
    readonly file_size?: number;
    description?: string;
    readonly created?: string;
};

export type CallDocumentRequest = {
    /**
     * Documentation for call for proposals.
     */
    file?: (Blob | File) | null;
    description?: string;
};

export type CallManagingOrganisation = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    description?: string;
    customer: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
    readonly customer_image: string;
    readonly customer_abbreviation: string;
    readonly customer_native_name: string;
    readonly customer_country: string;
    image?: string | null;
};

export type CallManagingOrganisationRequest = {
    description?: string;
    customer: string;
    image?: (Blob | File) | null;
};

export type CallManagingOrganisationStat = {
    readonly open_calls: number;
    readonly active_rounds: number;
    readonly accepted_proposals: number;
    readonly pending_proposals: number;
    readonly pending_review: number;
    readonly rounds_closing_in_one_week: number;
    readonly calls_closing_in_one_week: number;
    readonly offering_requests_pending: number;
};

export type CallResourceTemplate = {
    readonly uuid?: string;
    readonly url?: string;
    name?: string;
    description?: string;
    attributes?: unknown;
    limits?: unknown;
    /**
     * If True, every proposal must include this resource type
     */
    is_required?: boolean;
    requested_offering?: string;
    readonly requested_offering_name?: string;
    readonly requested_offering_uuid?: string;
    requested_offering_plan?: BasePublicPlan;
    readonly created_by?: string | null;
    readonly created_by_name?: string;
    readonly created?: string;
};

export type CallResourceTemplateRequest = {
    name: string;
    description?: string;
    attributes?: unknown;
    limits?: unknown;
    /**
     * If True, every proposal must include this resource type
     */
    is_required?: boolean;
    requested_offering: string;
};

export type CallRound = {
    readonly url: string;
    readonly uuid: string;
    start_time: string;
    cutoff_time: string;
    readonly call_uuid: string;
    readonly call_name: string;
    status: StatusEnum;
};

export type CallStates = 'draft' | 'active' | 'archived';

export type Campaign = {
    readonly uuid: string;
    name: string;
    readonly url: string;
    /**
     * Starting from this date, the campaign is active.
     */
    start_date: string;
    /**
     * The last day the campaign is active.
     */
    end_date: string;
    /**
     * If coupon is empty, campaign is available to all users.
     */
    coupon?: string;
    discount_type: DiscountTypeEnum;
    discount: number;
    stock?: number | null;
    description?: string;
    /**
     * How many months in a row should the related service (when activated) get special deal (0 for indefinitely until active)
     */
    months?: number;
    auto_apply?: boolean;
    readonly state: string;
    service_provider: string;
    readonly offerings: Array<CampaignOffering>;
    required_offerings?: Array<string>;
};

export type CampaignOffering = {
    readonly uuid: string;
    name: string;
};

export type CampaignRequest = {
    name: string;
    /**
     * Starting from this date, the campaign is active.
     */
    start_date: string;
    /**
     * The last day the campaign is active.
     */
    end_date: string;
    /**
     * If coupon is empty, campaign is available to all users.
     */
    coupon?: string;
    discount_type: DiscountTypeEnum;
    discount: number;
    stock?: number | null;
    description?: string;
    /**
     * How many months in a row should the related service (when activated) get special deal (0 for indefinitely until active)
     */
    months?: number;
    auto_apply?: boolean;
    service_provider: string;
    offerings: Array<string>;
    required_offerings?: Array<string>;
};

export type CategoryColumn = {
    readonly uuid: string;
    /**
     * Index allows to reorder columns.
     */
    index: number;
    /**
     * Title is rendered as column header.
     */
    title: string;
    /**
     * Resource attribute is rendered as table cell.
     */
    attribute?: string;
    /**
     * Widget field allows to customise table cell rendering.
     */
    widget?: WidgetEnum | BlankEnum | NullEnum | null;
    category: string;
};

export type CategoryColumnRequest = {
    /**
     * Index allows to reorder columns.
     */
    index: number;
    /**
     * Title is rendered as column header.
     */
    title: string;
    /**
     * Resource attribute is rendered as table cell.
     */
    attribute?: string;
    /**
     * Widget field allows to customise table cell rendering.
     */
    widget?: WidgetEnum | BlankEnum | NullEnum | null;
    category: string;
};

export type CategoryComponent = {
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type?: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name?: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
};

export type CategoryComponentRequest = {
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
};

export type CategoryComponentUsage = {
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    readonly name?: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    readonly type?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    readonly measured_unit?: string;
    readonly category_title?: string;
    readonly category_uuid?: string;
    date?: string;
    reported_usage?: number | null;
    fixed_usage?: number | null;
    scope?: string;
};

export type CategoryComponents = {
    readonly uuid: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    category: CategorySerializerForForNestedFields;
};

export type CategoryComponentsRequest = {
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    category: CategorySerializerForForNestedFieldsRequest;
};

export type CategoryGroup = {
    readonly url?: string;
    readonly uuid?: string;
    title?: string;
    description?: string;
    icon?: string | null;
};

export type CategoryGroupRequest = {
    title: string;
    description?: string;
    icon?: (Blob | File) | null;
};

export type CategoryHelpArticle = {
    title?: string | null;
    url?: string;
};

export type CategoryHelpArticleRequest = {
    title?: string | null;
    url: string;
};

export type CategoryHelpArticles = {
    title?: string | null;
    url: string;
    categories: Array<CategorySerializerForForNestedFields>;
};

export type CategoryHelpArticlesRequest = {
    title?: string | null;
    url: string;
    categories: Array<CategorySerializerForForNestedFieldsRequest>;
};

export type CategorySerializerForForNestedFields = {
    readonly url: string;
    readonly uuid: string;
    title: string;
};

export type CategorySerializerForForNestedFieldsRequest = {
    title: string;
};

export type Checklist = {
    readonly uuid: string;
    readonly url: string;
    name: string;
    description?: string;
    /**
     * Type of compliance this checklist addresses
     */
    checklist_type?: ChecklistTypeEnum;
    readonly questions_count: number;
    readonly category_name: string;
    readonly category_uuid: string;
    /**
     * Category of the checklist
     */
    category?: string | null;
};

export type ChecklistCategory = {
    readonly uuid: string;
    icon?: string | null;
    readonly url: string;
    name: string;
    description?: string;
    readonly checklists_count: number;
};

export type ChecklistCategoryRequest = {
    icon?: (Blob | File) | null;
    name: string;
    description?: string;
};

export type ChecklistCompletion = {
    readonly uuid: string;
    /**
     * Whether all required questions have been answered
     */
    readonly is_completed: boolean;
    readonly completion_percentage: number;
    readonly unanswered_required_questions: Array<unknown>;
    readonly checklist_name: string;
    readonly checklist_description: string;
    readonly created: string;
    readonly modified: string;
};

export type ChecklistCompletionReviewer = {
    readonly uuid: string;
    /**
     * Whether all required questions have been answered
     */
    readonly is_completed: boolean;
    readonly completion_percentage: number;
    readonly unanswered_required_questions: Array<unknown>;
    readonly checklist_name: string;
    readonly checklist_description: string;
    readonly created: string;
    readonly modified: string;
    /**
     * Whether any answers triggered review requirements
     */
    readonly requires_review: boolean;
    /**
     * User who reviewed the checklist completion
     */
    reviewed_by?: number | null;
    readonly reviewed_by_name: string;
    reviewed_at?: string | null;
    /**
     * Notes from the reviewer
     */
    review_notes?: string;
    readonly review_trigger_summary: Array<unknown>;
};

export type ChecklistOperators = 'equals' | 'not_equals' | 'contains' | 'in' | 'not_in';

export type ChecklistRequest = {
    name: string;
    description?: string;
    /**
     * Type of compliance this checklist addresses
     */
    checklist_type?: ChecklistTypeEnum;
    /**
     * Category of the checklist
     */
    category?: string | null;
};

export type ChecklistResponse = {
    readonly checklist: {
        [key: string]: unknown;
    };
    completion: ChecklistCompletion;
    questions: Array<QuestionWithAnswer>;
};

export type ChecklistReviewerResponse = {
    readonly checklist: {
        [key: string]: unknown;
    };
    completion: ChecklistCompletionReviewer;
    questions: Array<QuestionWithAnswerReviewer>;
};

export type ChecklistTypeEnum = 'project_compliance' | 'proposal_compliance' | 'offering_compliance' | 'project_metadata';

export type ClusterSecurityGroup = {
    readonly uuid: string;
    readonly name: string;
    readonly description: string;
    rules: Array<RancherClusterSecurityGroupRule>;
};

export type ClusterSecurityGroupRequest = {
    rules: Array<RancherClusterSecurityGroupRuleRequest>;
};

export type Comment = {
    readonly url: string;
    readonly uuid: string;
    readonly issue: string;
    readonly issue_key: string;
    description: string;
    is_public?: boolean;
    readonly author_name: string;
    readonly author_uuid: string;
    readonly author_user: string;
    /**
     * Email address
     */
    readonly author_email: string;
    readonly backend_id: string | null;
    remote_id?: string | null;
    readonly created: string;
    readonly update_is_available: boolean;
    readonly destroy_is_available: boolean;
};

export type CommentRequest = {
    description: string;
    is_public?: boolean;
};

export type ComponentStats = {
    readonly type: string;
    readonly name: string;
    readonly description: string;
    readonly measured_unit: string;
    readonly billing_type: string;
    readonly usage: number;
    readonly limit_usage: number;
    readonly limit: number;
    readonly offering_name: string;
    readonly offering_uuid: string;
};

export type ComponentUsage = {
    readonly uuid?: string;
    readonly created?: string;
    description?: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    readonly type?: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    readonly name?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    readonly measured_unit?: string;
    readonly usage?: number;
    date?: string;
    /**
     * Reported value is reused every month until changed.
     */
    recurring?: boolean;
    readonly resource_name?: string;
    readonly resource_uuid?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    billing_period?: string;
    modified_by?: number | null;
};

export type ComponentUsageCreateRequest = {
    usages: Array<ComponentUsageItemRequest>;
    plan_period?: string;
    resource?: string;
};

export type ComponentUsageItemRequest = {
    type: string;
    amount: string;
    description?: string;
    recurring?: boolean;
};

export type ComponentUsagesPerMonthStats = {
    usage: string;
    offering_uuid: string;
    component_type: string;
    readonly offering_country: string;
    readonly organization_group_name: string;
    readonly organization_group_uuid: string;
    month: number;
    year: number;
};

export type ComponentUsagesPerProject = {
    project_uuid: string;
    component_type: string;
    readonly usage: number;
};

export type ComponentUsagesStats = {
    usage: string;
    offering_uuid: string;
    component_type: string;
    readonly offering_country: string;
    readonly organization_group_name: string;
    readonly organization_group_uuid: string;
};

export type ComponentUserUsage = {
    readonly uuid?: string;
    user?: string;
    username?: string;
    component_usage?: string;
    readonly usage?: number;
    /**
     * Unit of measurement, for example, GB.
     */
    readonly measured_unit?: string;
    description?: string;
    readonly created?: string;
    readonly modified?: string;
    backend_id?: string;
    readonly resource_name?: string;
    readonly resource_uuid?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    readonly component_type?: string;
    readonly date?: string;
    readonly billing_period?: string;
};

export type ComponentUserUsageCreateRequest = {
    usage?: string;
    username: string;
    user?: string;
};

export type ComponentUserUsageLimit = {
    readonly url: string;
    readonly uuid: string;
    resource: string;
    component: string;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    readonly component_type: string;
    user: string;
    limit?: string;
};

export type ComponentUserUsageLimitRequest = {
    resource: string;
    component: string;
    user: string;
    limit?: string;
};

export type ComponentsUsageStats = {
    readonly components: Array<ComponentStats>;
};

export type ConfirmEmailRequestRequest = {
    code: string;
};

export type ConsoleUrl = {
    readonly url: string;
};

export type ConstanceSettings = {
    SITE_NAME?: string;
    SITE_DESCRIPTION?: string;
    HOMEPORT_URL?: string;
    RANCHER_USERNAME_INPUT_LABEL?: string;
    SITE_ADDRESS?: string;
    SITE_EMAIL?: string;
    SITE_PHONE?: string;
    CURRENCY_NAME?: string;
    THUMBNAIL_SIZE?: string;
    ANONYMOUS_USER_CAN_VIEW_OFFERINGS?: boolean;
    ANONYMOUS_USER_CAN_VIEW_PLANS?: boolean;
    NOTIFY_STAFF_ABOUT_APPROVALS?: boolean;
    NOTIFY_ABOUT_RESOURCE_CHANGE?: boolean;
    DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE?: boolean;
    MARKETPLACE_LANDING_PAGE?: string;
    ENABLE_STALE_RESOURCE_NOTIFICATIONS?: boolean;
    TELEMETRY_URL?: string;
    TELEMETRY_VERSION?: number;
    SCRIPT_RUN_MODE?: string;
    DOCKER_CLIENT?: string;
    DOCKER_RUN_OPTIONS?: string;
    DOCKER_SCRIPT_DIR?: string;
    DOCKER_REMOVE_CONTAINER?: boolean;
    DOCKER_IMAGES?: string;
    DOCKER_VOLUME_NAME?: string;
    K8S_NAMESPACE?: string;
    K8S_CONFIG_PATH?: string;
    K8S_JOB_TIMEOUT?: number;
    ENABLE_STRICT_CHECK_ACCEPTING_INVITATION?: boolean;
    INVITATION_DISABLE_MULTIPLE_ROLES?: boolean;
    DEFAULT_IDP?: string;
    DOCS_URL?: string;
    SHORT_PAGE_TITLE?: string;
    FULL_PAGE_TITLE?: string;
    BRAND_COLOR?: string;
    HERO_LINK_LABEL?: string;
    HERO_LINK_URL?: string;
    SUPPORT_PORTAL_URL?: string;
    COMMON_FOOTER_TEXT?: string;
    COMMON_FOOTER_HTML?: string;
    LANGUAGE_CHOICES?: string;
    DISABLE_DARK_THEME?: boolean;
    POWERED_BY_LOGO?: string | null;
    HERO_IMAGE?: string | null;
    MARKETPLACE_HERO_IMAGE?: string | null;
    CALL_MANAGEMENT_HERO_IMAGE?: string | null;
    SIDEBAR_LOGO?: string | null;
    SIDEBAR_LOGO_DARK?: string | null;
    SIDEBAR_LOGO_MOBILE?: string | null;
    SIDEBAR_STYLE?: string;
    SITE_LOGO?: string | null;
    LOGIN_LOGO?: string | null;
    FAVICON?: string | null;
    OFFERING_LOGO_PLACEHOLDER?: string | null;
    WALDUR_SUPPORT_ENABLED?: boolean;
    WALDUR_SUPPORT_ACTIVE_BACKEND_TYPE?: string;
    WALDUR_SUPPORT_DISPLAY_REQUEST_TYPE?: boolean;
    ATLASSIAN_USE_OLD_API?: boolean;
    ATLASSIAN_USE_TEENAGE_API?: boolean;
    ATLASSIAN_USE_AUTOMATIC_REQUEST_MAPPING?: boolean;
    ATLASSIAN_MAP_WALDUR_USERS_TO_SERVICEDESK_AGENTS?: boolean;
    ATLASSIAN_STRANGE_SETTING?: number;
    ATLASSIAN_API_URL?: string;
    ATLASSIAN_USERNAME?: string;
    ATLASSIAN_PASSWORD?: string;
    ATLASSIAN_EMAIL?: string;
    ATLASSIAN_TOKEN?: string;
    ATLASSIAN_VERIFY_SSL?: boolean;
    ATLASSIAN_PROJECT_ID?: string;
    ATLASSIAN_SHARED_USERNAME?: boolean;
    ATLASSIAN_CUSTOM_ISSUE_FIELD_MAPPING_ENABLED?: boolean;
    ATLASSIAN_DEFAULT_OFFERING_ISSUE_TYPE?: string;
    ATLASSIAN_EXCLUDED_ATTACHMENT_TYPES?: string;
    ATLASSIAN_PULL_PRIORITIES?: boolean;
    ATLASSIAN_ISSUE_TYPES?: string;
    ATLASSIAN_DESCRIPTION_TEMPLATE?: string;
    ATLASSIAN_SUMMARY_TEMPLATE?: string;
    ATLASSIAN_AFFECTED_RESOURCE_FIELD?: string;
    ATLASSIAN_IMPACT_FIELD?: string;
    ATLASSIAN_ORGANISATION_FIELD?: string;
    ATLASSIAN_RESOLUTION_SLA_FIELD?: string;
    ATLASSIAN_PROJECT_FIELD?: string;
    ATLASSIAN_REPORTER_FIELD?: string;
    ATLASSIAN_CALLER_FIELD?: string;
    ATLASSIAN_SLA_FIELD?: string;
    ATLASSIAN_LINKED_ISSUE_TYPE?: string;
    ATLASSIAN_SATISFACTION_FIELD?: string;
    ATLASSIAN_REQUEST_FEEDBACK_FIELD?: string;
    ATLASSIAN_TEMPLATE_FIELD?: string;
    ZAMMAD_API_URL?: string;
    ZAMMAD_TOKEN?: string;
    ZAMMAD_GROUP?: string;
    ZAMMAD_ARTICLE_TYPE?: string;
    ZAMMAD_COMMENT_MARKER?: string;
    ZAMMAD_COMMENT_PREFIX?: string;
    ZAMMAD_COMMENT_COOLDOWN_DURATION?: number;
    SMAX_API_URL?: string;
    SMAX_TENANT_ID?: string;
    SMAX_LOGIN?: string;
    SMAX_PASSWORD?: string;
    SMAX_ORGANISATION_FIELD?: string;
    SMAX_PROJECT_FIELD?: string;
    SMAX_AFFECTED_RESOURCE_FIELD?: string;
    SMAX_TIMES_TO_PULL?: number;
    SMAX_SECONDS_TO_WAIT?: number;
    SMAX_CREATION_SOURCE_NAME?: string;
    SMAX_REQUESTS_OFFERING?: string;
    SMAX_VERIFY_SSL?: boolean;
    ENABLE_MOCK_SERVICE_ACCOUNT_BACKEND?: boolean;
    PROPOSAL_REVIEW_DURATION?: number;
    USER_TABLE_COLUMNS?: string;
    AUTO_APPROVE_USER_TOS?: boolean;
    FREEIPA_ENABLED?: boolean;
    FREEIPA_HOSTNAME?: string;
    FREEIPA_USERNAME?: string;
    FREEIPA_PASSWORD?: string;
    FREEIPA_VERIFY_SSL?: boolean;
    FREEIPA_USERNAME_PREFIX?: string;
    FREEIPA_GROUPNAME_PREFIX?: string;
    FREEIPA_BLACKLISTED_USERNAMES?: Array<string>;
    FREEIPA_GROUP_SYNCHRONIZATION_ENABLED?: boolean;
    KEYCLOAK_ICON?: string | null;
    COUNTRIES?: Array<string>;
    OIDC_AUTH_URL?: string;
    OIDC_INTROSPECTION_URL?: string;
    OIDC_CLIENT_ID?: string;
    OIDC_CLIENT_SECRET?: string;
    OIDC_USER_FIELD?: string;
    OIDC_CACHE_TIMEOUT?: number;
    DEACTIVATE_USER_IF_NO_ROLES?: boolean;
    MAINTENANCE_ANNOUNCEMENT_NOTIFY_BEFORE_MINUTES?: number;
    MAINTENANCE_ANNOUNCEMENT_NOTIFY_SYSTEM?: Array<string>;
};

export type ConstanceSettingsRequest = {
    SITE_NAME?: string;
    SITE_DESCRIPTION?: string;
    HOMEPORT_URL?: string;
    RANCHER_USERNAME_INPUT_LABEL?: string;
    SITE_ADDRESS?: string;
    SITE_EMAIL?: string;
    SITE_PHONE?: string;
    CURRENCY_NAME?: string;
    THUMBNAIL_SIZE?: string;
    ANONYMOUS_USER_CAN_VIEW_OFFERINGS?: boolean;
    ANONYMOUS_USER_CAN_VIEW_PLANS?: boolean;
    NOTIFY_STAFF_ABOUT_APPROVALS?: boolean;
    NOTIFY_ABOUT_RESOURCE_CHANGE?: boolean;
    DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE?: boolean;
    MARKETPLACE_LANDING_PAGE?: string;
    ENABLE_STALE_RESOURCE_NOTIFICATIONS?: boolean;
    TELEMETRY_URL?: string;
    TELEMETRY_VERSION?: number;
    SCRIPT_RUN_MODE?: string;
    DOCKER_CLIENT?: string;
    DOCKER_RUN_OPTIONS?: string;
    DOCKER_SCRIPT_DIR?: string;
    DOCKER_REMOVE_CONTAINER?: boolean;
    DOCKER_IMAGES?: string;
    DOCKER_VOLUME_NAME?: string;
    K8S_NAMESPACE?: string;
    K8S_CONFIG_PATH?: string;
    K8S_JOB_TIMEOUT?: number;
    ENABLE_STRICT_CHECK_ACCEPTING_INVITATION?: boolean;
    INVITATION_DISABLE_MULTIPLE_ROLES?: boolean;
    DEFAULT_IDP?: string;
    DOCS_URL?: string;
    SHORT_PAGE_TITLE?: string;
    FULL_PAGE_TITLE?: string;
    BRAND_COLOR?: string;
    HERO_LINK_LABEL?: string;
    HERO_LINK_URL?: string;
    SUPPORT_PORTAL_URL?: string;
    COMMON_FOOTER_TEXT?: string;
    COMMON_FOOTER_HTML?: string;
    LANGUAGE_CHOICES?: string;
    DISABLE_DARK_THEME?: boolean;
    POWERED_BY_LOGO?: (Blob | File) | null;
    HERO_IMAGE?: (Blob | File) | null;
    MARKETPLACE_HERO_IMAGE?: (Blob | File) | null;
    CALL_MANAGEMENT_HERO_IMAGE?: (Blob | File) | null;
    SIDEBAR_LOGO?: (Blob | File) | null;
    SIDEBAR_LOGO_DARK?: (Blob | File) | null;
    SIDEBAR_LOGO_MOBILE?: (Blob | File) | null;
    SIDEBAR_STYLE?: string;
    SITE_LOGO?: (Blob | File) | null;
    LOGIN_LOGO?: (Blob | File) | null;
    FAVICON?: (Blob | File) | null;
    OFFERING_LOGO_PLACEHOLDER?: (Blob | File) | null;
    WALDUR_SUPPORT_ENABLED?: boolean;
    WALDUR_SUPPORT_ACTIVE_BACKEND_TYPE?: string;
    WALDUR_SUPPORT_DISPLAY_REQUEST_TYPE?: boolean;
    ATLASSIAN_USE_OLD_API?: boolean;
    ATLASSIAN_USE_TEENAGE_API?: boolean;
    ATLASSIAN_USE_AUTOMATIC_REQUEST_MAPPING?: boolean;
    ATLASSIAN_MAP_WALDUR_USERS_TO_SERVICEDESK_AGENTS?: boolean;
    ATLASSIAN_STRANGE_SETTING?: number;
    ATLASSIAN_API_URL?: string;
    ATLASSIAN_USERNAME?: string;
    ATLASSIAN_PASSWORD?: string;
    ATLASSIAN_EMAIL?: string;
    ATLASSIAN_TOKEN?: string;
    ATLASSIAN_VERIFY_SSL?: boolean;
    ATLASSIAN_PROJECT_ID?: string;
    ATLASSIAN_SHARED_USERNAME?: boolean;
    ATLASSIAN_CUSTOM_ISSUE_FIELD_MAPPING_ENABLED?: boolean;
    ATLASSIAN_DEFAULT_OFFERING_ISSUE_TYPE?: string;
    ATLASSIAN_EXCLUDED_ATTACHMENT_TYPES?: string;
    ATLASSIAN_PULL_PRIORITIES?: boolean;
    ATLASSIAN_ISSUE_TYPES?: string;
    ATLASSIAN_DESCRIPTION_TEMPLATE?: string;
    ATLASSIAN_SUMMARY_TEMPLATE?: string;
    ATLASSIAN_AFFECTED_RESOURCE_FIELD?: string;
    ATLASSIAN_IMPACT_FIELD?: string;
    ATLASSIAN_ORGANISATION_FIELD?: string;
    ATLASSIAN_RESOLUTION_SLA_FIELD?: string;
    ATLASSIAN_PROJECT_FIELD?: string;
    ATLASSIAN_REPORTER_FIELD?: string;
    ATLASSIAN_CALLER_FIELD?: string;
    ATLASSIAN_SLA_FIELD?: string;
    ATLASSIAN_LINKED_ISSUE_TYPE?: string;
    ATLASSIAN_SATISFACTION_FIELD?: string;
    ATLASSIAN_REQUEST_FEEDBACK_FIELD?: string;
    ATLASSIAN_TEMPLATE_FIELD?: string;
    ZAMMAD_API_URL?: string;
    ZAMMAD_TOKEN?: string;
    ZAMMAD_GROUP?: string;
    ZAMMAD_ARTICLE_TYPE?: string;
    ZAMMAD_COMMENT_MARKER?: string;
    ZAMMAD_COMMENT_PREFIX?: string;
    ZAMMAD_COMMENT_COOLDOWN_DURATION?: number;
    SMAX_API_URL?: string;
    SMAX_TENANT_ID?: string;
    SMAX_LOGIN?: string;
    SMAX_PASSWORD?: string;
    SMAX_ORGANISATION_FIELD?: string;
    SMAX_PROJECT_FIELD?: string;
    SMAX_AFFECTED_RESOURCE_FIELD?: string;
    SMAX_TIMES_TO_PULL?: number;
    SMAX_SECONDS_TO_WAIT?: number;
    SMAX_CREATION_SOURCE_NAME?: string;
    SMAX_REQUESTS_OFFERING?: string;
    SMAX_VERIFY_SSL?: boolean;
    ENABLE_MOCK_SERVICE_ACCOUNT_BACKEND?: boolean;
    PROPOSAL_REVIEW_DURATION?: number;
    USER_TABLE_COLUMNS?: string;
    AUTO_APPROVE_USER_TOS?: boolean;
    FREEIPA_ENABLED?: boolean;
    FREEIPA_HOSTNAME?: string;
    FREEIPA_USERNAME?: string;
    FREEIPA_PASSWORD?: string;
    FREEIPA_VERIFY_SSL?: boolean;
    FREEIPA_USERNAME_PREFIX?: string;
    FREEIPA_GROUPNAME_PREFIX?: string;
    FREEIPA_BLACKLISTED_USERNAMES?: Array<string>;
    FREEIPA_GROUP_SYNCHRONIZATION_ENABLED?: boolean;
    KEYCLOAK_ICON?: (Blob | File) | null;
    COUNTRIES?: Array<string>;
    OIDC_AUTH_URL?: string;
    OIDC_INTROSPECTION_URL?: string;
    OIDC_CLIENT_ID?: string;
    OIDC_CLIENT_SECRET?: string;
    OIDC_USER_FIELD?: string;
    OIDC_CACHE_TIMEOUT?: number;
    DEACTIVATE_USER_IF_NO_ROLES?: boolean;
    MAINTENANCE_ANNOUNCEMENT_NOTIFY_BEFORE_MINUTES?: number;
    MAINTENANCE_ANNOUNCEMENT_NOTIFY_SYSTEM?: Array<string>;
};

export type ContainerFormatEnum = 'bare' | 'ovf' | 'aki' | 'ami' | 'ari';

export type CoreAuthToken = {
    readonly token: string;
};

export type CoreStates = 'CREATION_SCHEDULED' | 'CREATING' | 'UPDATE_SCHEDULED' | 'UPDATING' | 'DELETION_SCHEDULED' | 'DELETING' | 'OK' | 'ERRED';

export type CostsForPeriod = {
    readonly total_price: string;
    readonly start_date: string;
    readonly end_date: string;
};

export type CountProjectsOfServiceProviders = {
    readonly service_provider_uuid: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly customer_organization_group_uuid: string;
    readonly customer_organization_group_name: string;
    readonly count: number;
};

export type CountProjectsOfServiceProvidersGroupedByOecd = {
    readonly service_provider_uuid: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly customer_organization_group_uuid: string;
    readonly customer_organization_group_name: string;
    readonly count: number;
    readonly oecd_fos_2007_name: string;
};

export type CountStats = {
    readonly name: string;
    readonly uuid: string;
    readonly count: number;
};

export type CountUniqueUsersConnectedWithActiveResourcesOfServiceProvider = {
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly count_users: number;
};

export type CountUsersOfServiceProviders = {
    readonly service_provider_uuid: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly customer_organization_group_uuid: string;
    readonly customer_organization_group_name: string;
    readonly count: number;
};

export type Country = {
    readonly label: string;
    readonly value: string;
};

export type CountryEnum = 'AL' | 'AT' | 'BE' | 'BG' | 'BA' | 'CH' | 'CY' | 'CZ' | 'DE' | 'DK' | 'ES' | 'EE' | 'FI' | 'FR' | 'GB' | 'GE' | 'GR' | 'HR' | 'HU' | 'IE' | 'IS' | 'IT' | 'LT' | 'LU' | 'LV' | 'MC' | 'MK' | 'MT' | 'NL' | 'NO' | 'PL' | 'PT' | 'RO' | 'RS' | 'SK' | 'SI' | 'SE' | 'UA' | 'EU';

export type CreateAttachmentsRequest = {
    attachments: Array<Blob | File>;
};

export type CreateCustomerCredit = {
    readonly uuid: string;
    readonly url: string;
    value?: string;
    customer: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
    readonly customer_slug: string;
    offerings?: Array<string | null>;
    end_date?: string | null;
    expected_consumption?: string;
    readonly minimal_consumption: number;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
    readonly allocated_to_projects: number;
    readonly consumption_last_month: number;
};

export type CreateCustomerCreditRequest = {
    value?: string;
    customer: string;
    offerings?: Array<string | null>;
    end_date?: string | null;
    expected_consumption?: string;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type CreateFeedback = {
    readonly uuid: string;
    readonly issue: string;
    comment?: string;
    evaluation: number;
};

export type CreateFeedbackRequest = {
    comment?: string;
    evaluation: number;
    token: string;
};

export type CreateRouter = {
    readonly url: string;
    readonly uuid: string;
    /**
     * OpenStack tenant this router belongs to
     */
    tenant: string;
    name: string;
    readonly project: string;
    readonly service_settings: string;
};

export type CreateRouterRequest = {
    /**
     * OpenStack tenant this router belongs to
     */
    tenant: string;
    name: string;
};

export type Customer = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    readonly display_name?: string;
    /**
     * Organization identifier in another application.
     */
    backend_id?: string;
    image?: string | null;
    readonly blocked?: boolean;
    readonly archived?: boolean;
    readonly default_tax_percent?: string;
    /**
     * Start date of accounting
     */
    readonly accounting_start_date?: string;
    readonly projects_count?: number;
    /**
     * External ID of the sponsor covering the costs
     */
    readonly sponsor_number?: number | null;
    readonly country_name?: string;
    /**
     * Maximum number of service accounts allowed
     */
    readonly max_service_accounts?: number | null;
    name?: string;
    readonly slug?: string;
    native_name?: string;
    abbreviation?: string;
    contact_details?: string;
    readonly agreement_number?: string;
    /**
     * Email address
     */
    email?: string;
    phone_number?: string;
    /**
     * Enter a comma separated list of IPv4 or IPv6 CIDR addresses from where connection to self-service is allowed.
     */
    readonly access_subnets?: string;
    registration_code?: string;
    homepage?: string;
    readonly domain?: string;
    /**
     * VAT number
     */
    vat_code?: string;
    postal?: string;
    address?: string;
    bank_name?: string;
    latitude?: number | null;
    longitude?: number | null;
    bank_account?: string;
    country?: CountryEnum | BlankEnum;
    readonly payment_profiles?: Array<PaymentProfile>;
    readonly customer_credit?: number | null;
    readonly customer_unallocated_credit?: number | null;
    readonly is_service_provider?: boolean;
    readonly service_provider?: string | null;
    readonly service_provider_uuid?: string | null;
    readonly call_managing_organization_uuid?: string | null;
    billing_price_estimate?: NestedPriceEstimate;
};

export type CustomerCredit = {
    readonly uuid: string;
    readonly url: string;
    value?: string;
    customer: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
    readonly customer_slug: string;
    readonly offerings: Array<NestedProviderOffering>;
    end_date?: string | null;
    expected_consumption?: string;
    readonly minimal_consumption: number;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
    readonly allocated_to_projects: number;
    readonly consumption_last_month: number;
};

export type CustomerCreditConsumption = {
    readonly date: string;
    readonly price: string;
};

export type CustomerCreditRequest = {
    value?: string;
    customer: string;
    end_date?: string | null;
    expected_consumption?: string;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type CustomerDetails = {
    name?: string;
    address?: string;
    country?: string;
    readonly country_name?: string | null;
    /**
     * Email address
     */
    email?: string;
    postal?: string;
    phone_number?: string;
    bank_name?: string;
    bank_account?: string;
    /**
     * VAT number
     */
    vat_code?: string;
};

export type CustomerEstimatedCostPolicy = {
    readonly uuid: string;
    readonly url: string;
    scope: string;
    readonly scope_name: string;
    readonly scope_uuid: string;
    actions: string;
    readonly created: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly has_fired: boolean;
    readonly fired_datetime: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
    readonly period_name: string;
    readonly customer_credit: number;
    billing_price_estimate: NestedPriceEstimate;
};

export type CustomerEstimatedCostPolicyRequest = {
    scope: string;
    actions: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
};

export type CustomerIndustryFlagStats = {
    readonly name: string;
    readonly uuid: string;
    readonly count: number;
    readonly abbreviation: string;
    is_industry: string;
};

export type CustomerMemberCount = {
    readonly uuid: string;
    readonly name: string;
    readonly abbreviation: string;
    readonly count: number;
    readonly has_resources: boolean;
};

export type CustomerOecdCodeStats = {
    readonly name: string;
    readonly uuid: string;
    readonly count: number;
    readonly abbreviation: string;
    oecd: string;
};

export type CustomerPermissionReview = {
    readonly url: string;
    readonly uuid: string;
    readonly reviewer_full_name: string | null;
    readonly reviewer_uuid: string | null;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly is_pending: boolean;
    readonly created: string;
    readonly closed: string | null;
};

export type CustomerQuotas = {
    readonly customer_name: string;
    readonly customer_abbreviation: string;
    readonly value: number;
};

export type CustomerRequest = {
    /**
     * Organization identifier in another application.
     */
    backend_id?: string;
    image?: (Blob | File) | null;
    name: string;
    native_name?: string;
    abbreviation?: string;
    contact_details?: string;
    /**
     * Email address
     */
    email?: string;
    phone_number?: string;
    registration_code?: string;
    homepage?: string;
    /**
     * VAT number
     */
    vat_code?: string;
    postal?: string;
    address?: string;
    bank_name?: string;
    latitude?: number | null;
    longitude?: number | null;
    bank_account?: string;
    country?: CountryEnum | BlankEnum;
};

export type CustomerServiceAccount = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    username?: string;
    description?: string;
    readonly error_message: string;
    error_traceback?: string;
    readonly token: string | null;
    email?: string;
    readonly expires_at: string | null;
    preferred_identifier?: string;
    customer: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
};

export type CustomerServiceAccountRequest = {
    username?: string;
    description?: string;
    error_traceback?: string;
    email?: string;
    preferred_identifier?: string;
    customer: string;
};

export type CustomerUser = {
    readonly url?: string;
    readonly uuid?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username?: string;
    readonly full_name?: string;
    /**
     * Email address
     */
    email?: string;
    readonly role_name?: string | null;
    readonly projects?: Array<NestedProjectPermission>;
    readonly expiration_time?: string | null;
    image?: string | null;
};

export type DataVolume = {
    size: number;
    volume_type?: string | null;
    filesystem?: string;
    mount_point: string;
};

export type DataVolumeRequest = {
    size: number;
    volume_type?: string | null;
    filesystem?: string;
    mount_point: string;
};

export type DecidingEntityEnum = 'by_call_manager' | 'automatic';

export type DeleteAttachmentsRequest = {
    attachment_ids: Array<string>;
};

export type DetailState = {
    readonly detail: string;
    readonly state: string;
};

export type DigitalOceanDroplet = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly start_time?: string | null;
    /**
     * Number of cores in a VM
     */
    readonly cores?: number;
    /**
     * Memory size in MiB
     */
    readonly ram?: number;
    /**
     * Disk size in MiB
     */
    readonly disk?: number;
    /**
     * Minimum memory size in MiB
     */
    readonly min_ram?: number;
    /**
     * Minimum disk size in MiB
     */
    readonly min_disk?: number;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    readonly external_ips?: Array<string>;
    readonly internal_ips?: Array<string>;
    readonly latitude?: number | null;
    readonly longitude?: number | null;
    readonly key_name?: string;
    readonly key_fingerprint?: string;
    readonly image_name?: string;
    readonly runtime_state?: string;
    readonly region_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type DigitalOceanDropletRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    ssh_public_key?: string;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    region: string;
    image: string;
    size: string;
};

export type DigitalOceanDropletResize = {
    disk: boolean;
};

export type DigitalOceanDropletResizeRequest = {
    size: string;
    disk: boolean;
};

export type DigitalOceanImage = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    distribution: string;
    type: string;
    readonly regions: Array<DigitalOceanRegion>;
    /**
     * Is image provided by DigitalOcean
     */
    is_official?: boolean;
    created_at?: string | null;
    /**
     * Minimum disk required for a size to use this image
     */
    min_disk_size?: number | null;
};

export type DigitalOceanRegion = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type DigitalOceanSize = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    /**
     * Number of cores in a VM
     */
    cores: number;
    /**
     * Memory size in MiB
     */
    ram: number;
    /**
     * Disk size in MiB
     */
    disk: number;
    /**
     * Amount of transfer bandwidth in MiB
     */
    transfer: number;
    readonly regions: Array<DigitalOceanRegion>;
};

export type DirectionEnum = 'ingress' | 'egress';

export type DiscountTypeEnum = 'discount' | 'special_price';

export type DiskFormatEnum = 'qcow2' | 'raw' | 'vhd' | 'vmdk' | 'vdi' | 'iso' | 'aki' | 'ami' | 'ari';

export type DryRun = {
    readonly url: string;
    readonly uuid: string;
    readonly order_attributes: unknown;
    readonly order_type: string;
    order_offering?: string | null;
    state: DryRunStateEnum;
    readonly get_state_display: string;
    readonly output: string;
    readonly created: string;
};

export type DryRunRequest = {
    plan?: string | null;
    type?: DryRunTypeEnum;
    attributes?: unknown;
    order_offering?: string | null;
};

export type DryRunStateEnum = 1 | 2 | 3 | 4;

export type DryRunTypeEnum = 'Create' | 'Update' | 'Terminate' | 'Pull';

export type EmailHook = {
    readonly url: string;
    readonly uuid: string;
    is_active?: boolean;
    readonly author_uuid: string;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    readonly created: string;
    readonly modified: string;
    readonly hook_type: string;
    readonly author_fullname: string;
    readonly author_username: string;
    readonly author_email: string;
    email: string;
};

export type EmailHookRequest = {
    is_active?: boolean;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    email: string;
};

export type EmailLog = {
    readonly uuid: string;
    readonly url: string;
    readonly sent_at: string;
    subject: string;
    body: string;
    emails: Array<string>;
};

export type EndpointUuid = {
    uuid: string;
};

export type EndpointUuidRequest = {
    uuid: string;
};

export type EthertypeEnum = 'IPv4' | 'IPv6';

export type Event = {
    readonly uuid?: string;
    readonly created?: string;
    event_type?: string;
    message?: string;
    readonly context?: unknown;
};

export type EventGroupsEnum = 'access_subnets' | 'auth' | 'call' | 'credits' | 'customers' | 'invoices' | 'offering_accounting' | 'permissions' | 'projects' | 'proposal' | 'providers' | 'resources' | 'review' | 'ssh' | 'support' | 'users';

export type EventStats = {
    readonly year: number;
    readonly month: number;
    readonly count: number;
};

export type EventSubscription = {
    readonly uuid: string;
    readonly url: string;
    description?: string;
    readonly user: string;
    readonly user_uuid: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    readonly user_full_name: string;
    observable_objects?: unknown;
    readonly created: string;
    readonly modified: string;
    readonly source_ip: string | null;
};

export type EventSubscriptionRequest = {
    description?: string;
    observable_objects?: unknown;
};

export type EventTypesEnum = 'access_subnet_creation_succeeded' | 'access_subnet_deletion_succeeded' | 'access_subnet_update_succeeded' | 'allowed_offerings_have_been_updated' | 'attachment_created' | 'attachment_deleted' | 'attachment_updated' | 'auth_logged_in_with_saml2' | 'auth_logged_in_with_username' | 'auth_logged_in_with_oauth' | 'auth_logged_out' | 'auth_logged_out_with_saml2' | 'auth_login_failed_with_username' | 'block_creation_of_new_resources' | 'block_modification_of_existing_resources' | 'call_document_added' | 'call_document_removed' | 'create_of_credit_by_staff' | 'custom_notification' | 'customer_creation_succeeded' | 'customer_deletion_succeeded' | 'customer_update_succeeded' | 'droplet_resize_scheduled' | 'droplet_resize_succeeded' | 'freeipa_profile_created' | 'freeipa_profile_deleted' | 'freeipa_profile_disabled' | 'freeipa_profile_enabled' | 'invoice_canceled' | 'invoice_created' | 'invoice_item_created' | 'invoice_item_deleted' | 'invoice_item_updated' | 'invoice_paid' | 'issue_creation_succeeded' | 'issue_deletion_succeeded' | 'issue_update_succeeded' | 'marketplace_offering_component_created' | 'marketplace_offering_component_deleted' | 'marketplace_offering_component_updated' | 'marketplace_offering_created' | 'marketplace_offering_role_created' | 'marketplace_offering_role_deleted' | 'marketplace_offering_role_updated' | 'marketplace_offering_updated' | 'marketplace_offering_user_created' | 'marketplace_offering_user_updated' | 'marketplace_offering_user_deleted' | 'marketplace_offering_user_restriction_updated' | 'marketplace_order_approved' | 'marketplace_order_completed' | 'marketplace_order_created' | 'marketplace_order_failed' | 'marketplace_order_rejected' | 'marketplace_order_terminated' | 'marketplace_order_unlinked' | 'marketplace_plan_archived' | 'marketplace_plan_component_current_price_updated' | 'marketplace_plan_component_future_price_updated' | 'marketplace_plan_component_quota_updated' | 'marketplace_plan_created' | 'marketplace_plan_updated' | 'marketplace_plan_deleted' | 'marketplace_resource_create_canceled' | 'marketplace_resource_create_failed' | 'marketplace_resource_create_requested' | 'marketplace_resource_create_succeeded' | 'marketplace_resource_downscaled' | 'marketplace_resource_erred_on_backend' | 'marketplace_resource_paused' | 'marketplace_resource_terminate_canceled' | 'marketplace_resource_terminate_failed' | 'marketplace_resource_terminate_requested' | 'marketplace_resource_terminate_succeeded' | 'marketplace_resource_unlinked' | 'marketplace_resource_update_canceled' | 'marketplace_resource_update_end_date_succeeded' | 'marketplace_resource_update_failed' | 'marketplace_resource_update_limits_failed' | 'marketplace_resource_update_limits_succeeded' | 'marketplace_resource_update_requested' | 'marketplace_resource_update_succeeded' | 'marketplace_resource_user_created' | 'marketplace_resource_user_deleted' | 'notify_external_user' | 'notify_organization_owners' | 'notify_project_team' | 'openstack_floating_ip_attached' | 'openstack_floating_ip_connected' | 'openstack_floating_ip_description_updated' | 'openstack_floating_ip_detached' | 'openstack_floating_ip_disconnected' | 'openstack_network_cleaned' | 'openstack_network_created' | 'openstack_network_deleted' | 'openstack_network_imported' | 'openstack_network_pulled' | 'openstack_network_updated' | 'openstack_port_cleaned' | 'openstack_port_created' | 'openstack_port_deleted' | 'openstack_port_imported' | 'openstack_port_pulled' | 'openstack_port_updated' | 'openstack_router_updated' | 'openstack_security_group_cleaned' | 'openstack_security_group_created' | 'openstack_security_group_deleted' | 'openstack_security_group_imported' | 'openstack_security_group_pulled' | 'openstack_security_group_rule_cleaned' | 'openstack_security_group_rule_created' | 'openstack_security_group_rule_deleted' | 'openstack_security_group_rule_imported' | 'openstack_security_group_rule_updated' | 'openstack_security_group_updated' | 'openstack_security_group_added_remotely' | 'openstack_security_group_removed_remotely' | 'openstack_security_group_added_locally' | 'openstack_security_group_removed_locally' | 'openstack_server_group_cleaned' | 'openstack_server_group_created' | 'openstack_server_group_deleted' | 'openstack_server_group_imported' | 'openstack_server_group_pulled' | 'openstack_subnet_cleaned' | 'openstack_subnet_created' | 'openstack_subnet_deleted' | 'openstack_subnet_imported' | 'openstack_subnet_pulled' | 'openstack_subnet_updated' | 'openstack_tenant_quota_limit_updated' | 'payment_added' | 'payment_created' | 'payment_removed' | 'policy_notification' | 'project_creation_succeeded' | 'project_deletion_succeeded' | 'project_deletion_triggered' | 'project_update_request_approved' | 'project_update_request_created' | 'project_update_request_rejected' | 'project_update_succeeded' | 'proposal_canceled' | 'proposal_document_added' | 'proposal_document_removed' | 'query_executed' | 'reduction_of_customer_credit' | 'reduction_of_customer_credit_due_to_minimal_consumption' | 'reduction_of_customer_expected_consumption' | 'reduction_of_project_credit' | 'reduction_of_project_credit_due_to_minimal_consumption' | 'reduction_of_project_expected_consumption' | 'request_downscaling' | 'request_pausing' | 'resource_assign_floating_ip_failed' | 'resource_assign_floating_ip_scheduled' | 'resource_assign_floating_ip_succeeded' | 'resource_attach_failed' | 'resource_attach_scheduled' | 'resource_attach_succeeded' | 'resource_backup_creation_failed' | 'resource_backup_creation_scheduled' | 'resource_backup_creation_succeeded' | 'resource_backup_deletion_failed' | 'resource_backup_deletion_scheduled' | 'resource_backup_deletion_succeeded' | 'resource_backup_restoration_failed' | 'resource_backup_restoration_scheduled' | 'resource_backup_restoration_succeeded' | 'resource_change_flavor_failed' | 'resource_change_flavor_scheduled' | 'resource_change_flavor_succeeded' | 'resource_creation_failed' | 'resource_creation_scheduled' | 'resource_creation_succeeded' | 'resource_deletion_failed' | 'resource_deletion_scheduled' | 'resource_deletion_succeeded' | 'resource_detach_failed' | 'resource_detach_scheduled' | 'resource_detach_succeeded' | 'resource_extend_failed' | 'resource_extend_scheduled' | 'resource_extend_succeeded' | 'resource_extend_volume_failed' | 'resource_extend_volume_scheduled' | 'resource_extend_volume_succeeded' | 'resource_import_succeeded' | 'resource_pull_failed' | 'resource_pull_scheduled' | 'resource_pull_succeeded' | 'resource_restart_failed' | 'resource_restart_scheduled' | 'resource_restart_succeeded' | 'resource_retype_failed' | 'resource_retype_scheduled' | 'resource_retype_succeeded' | 'resource_robot_account_created' | 'resource_robot_account_deleted' | 'resource_robot_account_state_changed' | 'resource_robot_account_updated' | 'resource_start_failed' | 'resource_start_scheduled' | 'resource_start_succeeded' | 'resource_stop_failed' | 'resource_stop_scheduled' | 'resource_stop_succeeded' | 'resource_unassign_floating_ip_failed' | 'resource_unassign_floating_ip_scheduled' | 'resource_unassign_floating_ip_succeeded' | 'resource_update_allowed_address_pairs_failed' | 'resource_update_allowed_address_pairs_scheduled' | 'resource_update_allowed_address_pairs_succeeded' | 'resource_update_floating_ips_failed' | 'resource_update_floating_ips_scheduled' | 'resource_update_floating_ips_succeeded' | 'resource_update_ports_failed' | 'resource_update_ports_scheduled' | 'resource_update_ports_succeeded' | 'resource_update_security_groups_failed' | 'resource_update_security_groups_scheduled' | 'resource_update_security_groups_succeeded' | 'resource_update_succeeded' | 'restrict_members' | 'review_canceled' | 'role_granted' | 'role_revoked' | 'role_updated' | 'roll_back_customer_credit' | 'roll_back_project_credit' | 'service_account_created' | 'service_account_deleted' | 'service_account_updated' | 'set_to_zero_overdue_credit' | 'ssh_key_creation_succeeded' | 'ssh_key_deletion_succeeded' | 'terminate_resources' | 'token_created' | 'token_lifetime_updated' | 'update_of_credit_by_staff' | 'user_activated' | 'user_creation_succeeded' | 'user_deactivated' | 'user_deactivated_no_roles' | 'user_deletion_succeeded' | 'user_details_update_succeeded' | 'user_has_been_created_by_staff' | 'user_password_updated' | 'user_password_updated_by_staff' | 'user_update_succeeded';

export type ExecutionStateEnum = 'Scheduled' | 'Processing' | 'OK' | 'Erred';

export type ExternalLink = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    link: string;
    image?: string | null;
    readonly created: string;
    readonly modified: string;
};

export type ExternalLinkRequest = {
    name: string;
    description?: string;
    link: string;
    image?: (Blob | File) | null;
};

export type Feedback = {
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    state: CoreStates;
    evaluation: number;
    comment?: string;
    readonly issue_uuid: string;
    readonly user_full_name: string;
    readonly issue_key: string;
    readonly issue_summary: string;
};

export type FinancialReport = {
    name: string;
    readonly uuid: string;
    abbreviation?: string;
    readonly created: string;
    /**
     * Start date of accounting
     */
    accounting_start_date?: string;
    registration_code?: string;
    agreement_number?: string;
    readonly payment_profiles: Array<PaymentProfile>;
    billing_price_estimate: NestedPriceEstimate;
};

export type FinancialReportEmailRequest = {
    emails: Array<string>;
    year: number;
    month: number;
};

export type Fingerprint = {
    readonly md5?: string;
    readonly sha256?: string;
    readonly sha512?: string;
};

export type FirecrestJob = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    runtime_state?: string;
    /**
     * Batch script file
     */
    file?: string;
    /**
     * Reference to user which submitted job
     */
    readonly user?: string | null;
    readonly user_uuid?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username?: string | null;
    /**
     * Job output
     */
    readonly report?: unknown;
};

export type FirecrestJobRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    runtime_state?: string;
    /**
     * Batch script file
     */
    file: Blob | File;
};

export type FreeipaProfile = {
    readonly uuid: string;
    /**
     * Letters, numbers and ./+/-/_ characters
     */
    username: string;
    /**
     * Indicates when the user has agreed with the policy.
     */
    agreement_date?: string;
    /**
     * Active
     */
    readonly is_active: boolean;
    readonly user: string;
    readonly user_uuid: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    readonly user_full_name: string;
};

export type FreeipaProfileRequest = {
    /**
     * Letters, numbers and ./+/-/_ characters
     */
    username: string;
    /**
     * Indicates when the user has agreed with the policy.
     */
    agreement_date?: string;
};

export type GoogleCalendar = {
    backend_id?: string | null;
    public?: boolean;
    readonly http_link?: string;
};

export type GoogleCredentials = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    description?: string;
    customer?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    readonly customer_image?: string;
    readonly customer_abbreviation?: string;
    readonly customer_slug?: string;
    readonly customer_native_name?: string;
    readonly customer_country?: string;
    image?: string | null;
    readonly organization_groups?: Array<OrganizationGroup>;
    readonly offering_count?: number;
    readonly calendar_token?: string;
    readonly calendar_refresh_token?: string;
    readonly google_auth_url?: string;
};

export type GroupInvitation = {
    readonly scope_uuid: string;
    readonly scope_name: string;
    readonly scope_type: string | null;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly role_name: string;
    readonly role_description: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly url: string;
    readonly uuid: string;
    role: string;
    readonly created: string;
    readonly expires: string;
    readonly is_active: boolean;
    /**
     * Allow non-authenticated users to see and accept this invitation. Only staff can create public invitations.
     */
    is_public?: boolean;
    /**
     * Create project and grant project permissions instead of customer permissions
     */
    auto_create_project?: boolean;
    /**
     * Template for project name. Supports {username}, {email}, {full_name} variables
     */
    project_name_template?: string | null;
    project_role?: string | null;
    user_affiliations?: unknown;
    user_email_patterns?: unknown;
    readonly scope_image: string | null;
};

export type GroupInvitationRequest = {
    role: string;
    scope: string;
    /**
     * Allow non-authenticated users to see and accept this invitation. Only staff can create public invitations.
     */
    is_public?: boolean;
    /**
     * Create project and grant project permissions instead of customer permissions
     */
    auto_create_project?: boolean;
    /**
     * Template for project name. Supports {username}, {email}, {full_name} variables
     */
    project_name_template?: string | null;
    project_role?: string | null;
    user_affiliations?: unknown;
    user_email_patterns?: unknown;
};

export type GuestOsEnum = 'DOS' | 'WIN_31' | 'WIN_95' | 'WIN_98' | 'WIN_ME' | 'WIN_NT' | 'WIN_2000_PRO' | 'WIN_2000_SERV' | 'WIN_2000_ADV_SERV' | 'WIN_XP_HOME' | 'WIN_XP_PRO' | 'WIN_XP_PRO_64' | 'WIN_NET_WEB' | 'WIN_NET_STANDARD' | 'WIN_NET_ENTERPRISE' | 'WIN_NET_DATACENTER' | 'WIN_NET_BUSINESS' | 'WIN_NET_STANDARD_64' | 'WIN_NET_ENTERPRISE_64' | 'WIN_LONGHORN' | 'WIN_LONGHORN_64' | 'WIN_NET_DATACENTER_64' | 'WIN_VISTA' | 'WIN_VISTA_64' | 'WINDOWS_7' | 'WINDOWS_7_64' | 'WINDOWS_7_SERVER_64' | 'WINDOWS_8' | 'WINDOWS_8_64' | 'WINDOWS_8_SERVER_64' | 'WINDOWS_9' | 'WINDOWS_9_64' | 'WINDOWS_9_SERVER_64' | 'WINDOWS_HYPERV' | 'FREEBSD' | 'FREEBSD_64' | 'REDHAT' | 'RHEL_2' | 'RHEL_3' | 'RHEL_3_64' | 'RHEL_4' | 'RHEL_4_64' | 'RHEL_5' | 'RHEL_5_64' | 'RHEL_6' | 'RHEL_6_64' | 'RHEL_7' | 'RHEL_7_64' | 'CENTOS' | 'CENTOS_64' | 'CENTOS_6' | 'CENTOS_6_64' | 'CENTOS_7' | 'CENTOS_7_64' | 'ORACLE_LINUX' | 'ORACLE_LINUX_64' | 'ORACLE_LINUX_6' | 'ORACLE_LINUX_6_64' | 'ORACLE_LINUX_7' | 'ORACLE_LINUX_7_64' | 'SUSE' | 'SUSE_64' | 'SLES' | 'SLES_64' | 'SLES_10' | 'SLES_10_64' | 'SLES_11' | 'SLES_11_64' | 'SLES_12' | 'SLES_12_64' | 'NLD_9' | 'OES' | 'SJDS' | 'MANDRAKE' | 'MANDRIVA' | 'MANDRIVA_64' | 'TURBO_LINUX' | 'TURBO_LINUX_64' | 'UBUNTU' | 'UBUNTU_64' | 'DEBIAN_4' | 'DEBIAN_4_64' | 'DEBIAN_5' | 'DEBIAN_5_64' | 'DEBIAN_6' | 'DEBIAN_6_64' | 'DEBIAN_7' | 'DEBIAN_7_64' | 'DEBIAN_8' | 'DEBIAN_8_64' | 'DEBIAN_9' | 'DEBIAN_9_64' | 'DEBIAN_10' | 'DEBIAN_10_64' | 'ASIANUX_3' | 'ASIANUX_3_64' | 'ASIANUX_4' | 'ASIANUX_4_64' | 'ASIANUX_5_64' | 'ASIANUX_7_64' | 'OPENSUSE' | 'OPENSUSE_64' | 'FEDORA' | 'FEDORA_64' | 'COREOS_64' | 'VMWARE_PHOTON_64' | 'OTHER_24X_LINUX' | 'OTHER_24X_LINUX_64' | 'OTHER_26X_LINUX' | 'OTHER_26X_LINUX_64' | 'OTHER_3X_LINUX' | 'OTHER_3X_LINUX_64' | 'OTHER_LINUX' | 'GENERIC_LINUX' | 'OTHER_LINUX_64' | 'SOLARIS_6' | 'SOLARIS_7' | 'SOLARIS_8' | 'SOLARIS_9' | 'SOLARIS_10' | 'SOLARIS_10_64' | 'SOLARIS_11_64' | 'OS2' | 'ECOMSTATION' | 'ECOMSTATION_2' | 'NETWARE_4' | 'NETWARE_5' | 'NETWARE_6' | 'OPENSERVER_5' | 'OPENSERVER_6' | 'UNIXWARE_7' | 'DARWIN' | 'DARWIN_64' | 'DARWIN_10' | 'DARWIN_10_64' | 'DARWIN_11' | 'DARWIN_11_64' | 'DARWIN_12_64' | 'DARWIN_13_64' | 'DARWIN_14_64' | 'DARWIN_15_64' | 'DARWIN_16_64' | 'VMKERNEL' | 'VMKERNEL_5' | 'VMKERNEL_6' | 'VMKERNEL_65' | 'OTHER' | 'OTHER_64';

export type GuestPowerStateEnum = 'RUNNING' | 'SHUTTING_DOWN' | 'RESETTING' | 'STANDBY' | 'NOT_RUNNING' | 'UNAVAILABLE';

export type IpMapping = {
    /**
     * Floating IP
     */
    floating_ip?: string;
    /**
     * External IP
     */
    external_ip?: string;
};

export type IpMappingRequest = {
    /**
     * Floating IP
     */
    floating_ip: string;
    /**
     * External IP
     */
    external_ip: string;
};

export type IdentityProvider = {
    provider: string;
    is_active?: boolean;
    /**
     * ID of application used for OAuth authentication.
     */
    client_id: string;
    verify_ssl?: boolean;
    enable_post_logout_redirect?: boolean;
    enable_pkce?: boolean;
    /**
     * The endpoint for endpoint discovery.
     */
    discovery_url: string;
    /**
     * The endpoint for fetching user info.
     */
    readonly userinfo_url: string;
    /**
     * The endpoint for obtaining auth token.
     */
    readonly token_url: string;
    /**
     * The endpoint for authorization request flow.
     */
    readonly auth_url: string;
    /**
     * The endpoint used to redirect after sign-out.
     */
    readonly logout_url: string;
    /**
     * Human-readable identity provider is label.
     */
    label: string;
    /**
     * The endpoint for user details management.
     */
    management_url?: string;
    protected_fields?: unknown;
    /**
     * Space-separated list of scopes to request during authentication.
     */
    extra_scope?: string | null;
};

export type IdentityProviderRequest = {
    provider: string;
    is_active?: boolean;
    /**
     * ID of application used for OAuth authentication.
     */
    client_id: string;
    verify_ssl?: boolean;
    enable_post_logout_redirect?: boolean;
    enable_pkce?: boolean;
    /**
     * The endpoint for endpoint discovery.
     */
    discovery_url: string;
    /**
     * Human-readable identity provider is label.
     */
    label: string;
    /**
     * The endpoint for user details management.
     */
    management_url?: string;
    protected_fields?: unknown;
    /**
     * Space-separated list of scopes to request during authentication.
     */
    extra_scope?: string | null;
};

export type ImageCreateRequest = {
    name: string;
    min_ram?: number;
    min_disk?: number;
    disk_format?: DiskFormatEnum;
    container_format?: ContainerFormatEnum;
    visibility?: VisibilityEnum;
};

export type ImageCreateResponse = {
    image_id: string;
    name: string;
    status: string;
    upload_url: string;
};

export type ImageUploadResponse = {
    status: string;
    message: string;
};

export type ImpactLevelDisplayEnum = 'No impact' | 'Degraded performance' | 'Partial outage' | 'Full outage';

export type ImpactLevelEnum = 1 | 2 | 3 | 4;

export type ImportResourceRequest = {
    backend_id: string;
    project: string;
    plan?: string;
    additional_details?: unknown;
};

export type ImportableResource = {
    backend_id: string;
    name: string;
    type: string;
    description: string;
};

export type InstanceFlavorChangeRequest = {
    /**
     * The new flavor to use for the instance. Flavor change can only be done when instance is stopped.
     */
    flavor: string;
};

export type IntegrationStatus = {
    readonly agent_type?: string;
    readonly status?: string;
    /**
     * Time of latest backend request
     */
    readonly last_request_timestamp?: string | null;
};

export type IntegrationStatusDetails = {
    readonly status: string;
    /**
     * Time of latest backend request
     */
    readonly last_request_timestamp: string | null;
    offering: string;
    readonly url: string;
};

export type Invitation = {
    readonly scope_uuid: string;
    readonly scope_name: string;
    readonly scope_type: string | null;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly role_name: string;
    readonly role_description: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly url: string;
    readonly uuid: string;
    role: string;
    readonly created: string;
    readonly expires: string;
    full_name?: string;
    native_name?: string;
    phone_number?: string;
    organization?: string;
    job_title?: string;
    /**
     * Invitation link will be sent to this email. Note that user can accept invitation with different email.
     */
    email: string;
    /**
     * Civil number of invited user. If civil number is not defined any user can accept invitation.
     */
    civil_number?: string;
    state: InvitationStateEnum;
    readonly error_message: string;
    extra_invitation_text?: string;
    execution_state: ExecutionStateEnum;
};

export type InvitationCheck = {
    email: string;
    civil_number_required?: boolean;
};

export type InvitationRequest = {
    role: string;
    scope: string;
    full_name?: string;
    native_name?: string;
    phone_number?: string;
    organization?: string;
    job_title?: string;
    /**
     * Invitation link will be sent to this email. Note that user can accept invitation with different email.
     */
    email: string;
    /**
     * Civil number of invited user. If civil number is not defined any user can accept invitation.
     */
    civil_number?: string;
    extra_invitation_text?: string;
};

export type InvitationState = 'project' | 'requested' | 'rejected' | 'pending' | 'accepted' | 'canceled' | 'expired';

export type InvitationStateEnum = 'project' | 'requested' | 'rejected' | 'pending' | 'accepted' | 'canceled' | 'expired';

export type Invoice = {
    readonly url?: string;
    readonly uuid?: string;
    readonly number?: number;
    /**
     * Organization
     */
    customer?: string;
    price?: string;
    tax?: string;
    total?: string;
    state?: InvoiceStateEnum;
    year?: number;
    month?: number;
    issuer_details?: CustomerDetails;
    /**
     * Date then invoice moved from state pending to created.
     */
    invoice_date?: string | null;
    due_date?: string;
    customer_details?: CustomerDetails;
    readonly items?: Array<InvoiceItem>;
    backend_id?: string;
    /**
     * URL for initiating payment via payment gateway.
     */
    payment_url?: string;
    /**
     * Reference number associated with the invoice.
     */
    reference_number?: string;
    readonly compensations?: number;
    readonly incurred_costs?: number;
};

export type InvoiceCost = {
    readonly price: number;
    readonly year: number;
    readonly month: number;
};

export type InvoiceGrowth = {
    readonly periods: Array<string>;
    readonly total_periods: Array<number>;
    readonly other_periods: Array<number>;
    customer_periods: Array<InvoiceGrowthCustomerPeriod>;
};

export type InvoiceGrowthCustomerPeriod = {
    readonly name: string;
    readonly periods: Array<number>;
};

export type InvoiceItem = {
    readonly uuid?: string;
    readonly url?: string;
    name?: string;
    readonly price?: number;
    tax?: string;
    total?: string;
    unit_price?: string;
    unit?: BillingUnit;
    readonly factor?: number;
    readonly measured_unit?: string;
    /**
     * Date and time when item usage has started.
     */
    start?: string;
    /**
     * Date and time when item usage has ended.
     */
    end?: string;
    article_code?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    quantity?: string;
    details?: InvoiceItemDetails;
    resource?: string | null;
    readonly resource_uuid?: string;
    readonly resource_name?: string;
    readonly billing_type?: string;
    readonly backend_uuid?: string | null;
    readonly credit?: boolean;
};

export type InvoiceItemCompensation = {
    offering_component_name: string;
};

export type InvoiceItemCompensationRequest = {
    offering_component_name: string;
};

export type InvoiceItemDetail = {
    invoice: string;
    resource?: string | null;
    readonly uuid: string;
    article_code?: string;
    unit_price?: string;
    unit?: BillingUnit;
    quantity?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    name?: string;
    /**
     * Date and time when item usage has started.
     */
    start?: string;
    /**
     * Date and time when item usage has ended.
     */
    end?: string;
    /**
     * Stores data about scope
     */
    details?: unknown;
};

export type InvoiceItemDetails = {
    resource_name?: string;
    resource_uuid?: string;
    plan_name?: string;
    plan_uuid?: string;
    offering_type?: string;
    offering_name?: string;
    offering_uuid?: string;
    service_provider_name?: string;
    service_provider_uuid?: string;
    plan_component_id?: number;
    offering_component_type?: string;
    offering_component_name?: string;
    resource_limit_periods?: Array<ResourceLimitPeriod>;
};

export type InvoiceItemMigrateTo = {
    invoice: string;
};

export type InvoiceItemMigrateToRequest = {
    invoice: string;
};

export type InvoiceItemTotalPrice = {
    total_price: string;
};

export type InvoiceItemUpdate = {
    article_code?: string;
    quantity?: string;
    unit_price?: string;
    /**
     * Date and time when item usage has started.
     */
    start?: string;
    /**
     * Date and time when item usage has ended.
     */
    end?: string;
};

export type InvoiceItemUpdateRequest = {
    article_code?: string;
    quantity?: string;
    unit_price?: string;
    /**
     * Date and time when item usage has started.
     */
    start?: string;
    /**
     * Date and time when item usage has ended.
     */
    end?: string;
};

export type InvoiceStateEnum = 'pending' | 'created' | 'paid' | 'canceled';

export type InvoiceStatsOffering = {
    readonly offering_name: string;
    readonly aggregated_price: number;
    readonly aggregated_tax: number;
    readonly aggregated_total: number;
    readonly service_category_title: string;
    readonly service_provider_name: string;
    readonly service_provider_uuid: string;
};

export type Issue = {
    readonly url: string;
    readonly uuid: string;
    type?: IssueTypeEnum;
    readonly key: string;
    readonly backend_id: string | null;
    readonly backend_name: string | null;
    remote_id?: string | null;
    /**
     * Link to issue in support system.
     */
    readonly link: string;
    summary: string;
    description?: string;
    readonly status: string;
    readonly resolution: string;
    priority?: string;
    caller?: string | null;
    readonly caller_uuid: string | null;
    readonly caller_full_name: string | null;
    readonly reporter: string;
    readonly reporter_uuid: string | null;
    readonly reporter_name: string | null;
    assignee?: string | null;
    readonly assignee_uuid: string | null;
    readonly assignee_name: string | null;
    /**
     * Organization
     */
    customer?: string | null;
    readonly customer_uuid: string | null;
    readonly customer_name: string | null;
    project?: string | null;
    readonly project_uuid: string | null;
    readonly project_name: string | null;
    resource?: string;
    readonly resource_type: string;
    readonly resource_name: string;
    readonly created: string;
    readonly modified: string;
    readonly first_response_sla: string | null;
    template?: string | null;
    feedback: NestedFeedback | null;
    readonly resolved: boolean | null;
    readonly update_is_available: boolean;
    readonly destroy_is_available: boolean;
    readonly add_comment_is_available: boolean;
    readonly add_attachment_is_available: boolean;
};

export type IssueReference = {
    readonly key?: string;
    readonly uuid?: string;
};

export type IssueRequest = {
    type?: IssueTypeEnum;
    remote_id?: string | null;
    summary: string;
    description?: string;
    priority?: string;
    caller?: string | null;
    assignee?: string | null;
    /**
     * Organization
     */
    customer?: string | null;
    project?: string | null;
    resource?: string;
    /**
     * Set true if issue is created by regular user via portal.
     */
    is_reported_manually?: boolean;
    template?: string | null;
};

export type IssueTypeEnum = 'Informational' | 'Service Request' | 'Change Request' | 'Incident';

export type JiraChangelog = {
    items: Array<unknown>;
};

export type JiraChangelogRequest = {
    items: Array<unknown>;
};

export type JiraComment = {
    id: string;
};

export type JiraCommentRequest = {
    id: string;
};

export type JiraIssue = {
    key: string;
    fields: JiraIssueFields;
};

export type JiraIssueFields = {
    project: JiraIssueProject;
    comment?: {
        [key: string]: unknown;
    };
};

export type JiraIssueFieldsRequest = {
    project: JiraIssueProjectRequest;
    comment?: {
        [key: string]: unknown;
    };
};

export type JiraIssueProject = {
    id: string;
    name: string;
    key: string;
};

export type JiraIssueProjectRequest = {
    id: string;
    name: string;
    key: string;
};

export type JiraIssueRequest = {
    key: string;
    fields: JiraIssueFieldsRequest;
};

export type KeycloakGroup = {
    readonly uuid: string;
    readonly url: string;
    /**
     * Group name
     */
    readonly name: string;
    readonly backend_id: string;
    readonly scope_type: string;
    /**
     * UUID of the cluster or project
     */
    scope_uuid: string;
    /**
     * Get the name of the cluster or project
     */
    readonly scope_name: string | null;
    role: string;
    readonly created: string;
    readonly modified: string;
};

export type KeycloakUserGroupMembership = {
    readonly uuid: string;
    readonly url: string;
    /**
     * Keycloak user username
     */
    username: string;
    /**
     * User's email for notifications
     */
    email: string;
    readonly first_name: string;
    readonly last_name: string;
    readonly group: string;
    readonly group_name: string;
    readonly group_role: string;
    readonly group_scope_type: string;
    /**
     * Get the name of the cluster or project
     */
    readonly group_scope_name: string | null;
    state: KeycloakUserGroupMembershipState;
    readonly created: string;
    readonly modified: string;
    readonly last_checked: string;
    readonly error_message: string;
    readonly error_traceback: string;
};

export type KeycloakUserGroupMembershipRequest = {
    /**
     * Keycloak user username
     */
    username: string;
    /**
     * User's email for notifications
     */
    email: string;
    /**
     * UUID of a cluster or a project in Rancher
     */
    scope_uuid: string;
    role: string;
};

export type KeycloakUserGroupMembershipState = 'pending' | 'active';

export type LexisLink = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    readonly robot_account: string;
    readonly robot_account_username: string;
    readonly robot_account_type: string;
    readonly state: string;
    readonly resource_uuid: string;
    readonly resource_name: string;
    readonly resource_type: string;
    readonly resource_backend_id: string;
    readonly resource_end_date: string;
    readonly project_uuid: string;
    readonly project_name: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    heappe_project_id?: number | null;
};

export type LexisLinkCreateRequest = {
    resource: string;
};

export type LexisLinkRequest = {
    heappe_project_id?: number | null;
};

export type LimitPeriodEnum = 'month' | 'quarterly' | 'annual' | 'total';

export type LinkOpenstackRequest = {
    instance: string;
};

export type LinkToInvoice = {
    invoice: string;
};

export type LinkToInvoiceRequest = {
    invoice: string;
};

export type Logout = {
    readonly logout_url: string;
};

export type MaintenanceActionResponse = {
    /**
     * Response message describing the action result
     */
    detail: string;
};

export type MaintenanceAnnouncement = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Optional reference to an external maintenance tracker
     */
    external_reference_url?: string;
    state: MaintenanceAnnouncementStateEnum;
    /**
     * When the maintenance is scheduled to begin
     */
    scheduled_start: string;
    /**
     * When the maintenance is scheduled to complete
     */
    scheduled_end: string;
    /**
     * When the maintenance actually began
     */
    readonly actual_start: string | null;
    /**
     * When the maintenance actually completed
     */
    readonly actual_end: string | null;
    /**
     * Service provider announcing the maintenance
     */
    service_provider: string;
    readonly created_by: string | null;
    readonly affected_offerings: Array<MaintenanceAnnouncementOffering>;
    readonly service_provider_name: string;
};

export type MaintenanceAnnouncementOffering = {
    readonly url: string;
    readonly uuid: string;
    maintenance: string;
    offering: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    impact_level_display: ImpactLevelDisplayEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
    readonly offering_name: string;
};

export type MaintenanceAnnouncementOfferingRequest = {
    maintenance: string;
    offering: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
};

export type MaintenanceAnnouncementOfferingTemplate = {
    readonly url: string;
    readonly uuid: string;
    maintenance_template: string;
    offering: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
};

export type MaintenanceAnnouncementOfferingTemplateRequest = {
    maintenance_template: string;
    offering: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
};

export type MaintenanceAnnouncementRequest = {
    name: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Optional reference to an external maintenance tracker
     */
    external_reference_url?: string;
    /**
     * When the maintenance is scheduled to begin
     */
    scheduled_start: string;
    /**
     * When the maintenance is scheduled to complete
     */
    scheduled_end: string;
    /**
     * Service provider announcing the maintenance
     */
    service_provider: string;
};

export type MaintenanceAnnouncementStateEnum = 'Draft' | 'Scheduled' | 'In progress' | 'Completed' | 'Cancelled';

export type MaintenanceAnnouncementTemplate = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Service provider announcing the maintenance
     */
    service_provider: string;
    readonly affected_offerings: Array<MaintenanceAnnouncementOffering>;
};

export type MaintenanceAnnouncementTemplateRequest = {
    name: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Service provider announcing the maintenance
     */
    service_provider: string;
};

export type MaintenanceTypeEnum = 1 | 2 | 3 | 4 | 5;

export type Mapping = {
    volume_types?: Array<VolumeTypeMapping>;
    subnets?: Array<SubNetMapping>;
    skip_connection_extnet?: boolean;
    sync_instance_ports?: boolean;
    networks?: Array<string>;
};

export type MappingRequest = {
    volume_types?: Array<VolumeTypeMappingRequest>;
    subnets?: Array<SubNetMappingRequest>;
    skip_connection_extnet?: boolean;
    sync_instance_ports?: boolean;
    networks?: Array<string>;
};

export type MarketplaceCategory = {
    readonly url?: string;
    readonly uuid?: string;
    title?: string;
    description?: string;
    icon?: string | null;
    /**
     * Set to "true" if this category is for OpenStack VM. Only one category can have "true" value.
     */
    default_vm_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Volume. Only one category can have "true" value.
     */
    default_volume_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Tenant. Only one category can have "true" value.
     */
    default_tenant_category?: boolean;
    readonly offering_count?: number;
    readonly available_offerings_count?: number;
    readonly sections?: Array<NestedSection>;
    readonly columns?: Array<NestedColumn>;
    readonly components?: Array<CategoryComponent>;
    readonly articles?: Array<CategoryHelpArticle>;
    group?: string | null;
};

export type MarketplaceCategoryRequest = {
    title: string;
    description?: string;
    icon?: (Blob | File) | null;
    /**
     * Set to "true" if this category is for OpenStack VM. Only one category can have "true" value.
     */
    default_vm_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Volume. Only one category can have "true" value.
     */
    default_volume_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Tenant. Only one category can have "true" value.
     */
    default_tenant_category?: boolean;
    group?: string | null;
};

export type MarketplaceCustomerStats = {
    readonly name: string;
    readonly uuid: string;
    readonly count: number;
    readonly abbreviation: string;
};

export type MarketplaceProviderCustomer = {
    readonly uuid?: string;
    name?: string;
    slug?: string;
    abbreviation?: string;
    phone_number?: string;
    /**
     * Email address
     */
    email?: string;
    readonly payment_profiles?: Array<PaymentProfile>;
    billing_price_estimate?: NestedPriceEstimate;
    readonly projects_count?: number;
    readonly users_count?: number;
    readonly projects?: Array<ProviderProject>;
    readonly users?: Array<ProviderUser>;
};

export type MarketplaceProviderCustomerProject = {
    readonly uuid?: string;
    name?: string;
    description?: string;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    end_date?: string | null;
    readonly resources_count?: number;
    readonly users_count?: number;
    billing_price_estimate?: NestedPriceEstimate;
};

export type MarketplaceServiceProviderUser = {
    readonly uuid?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username?: string;
    readonly full_name?: string;
    first_name?: string;
    last_name?: string;
    organization?: string;
    /**
     * Email address
     */
    email?: string;
    phone_number?: string;
    readonly projects_count?: number;
    /**
     * Indicates what registration method was used.
     */
    registration_method?: string;
    /**
     * Person's affiliation within organization such as student, faculty, staff.
     */
    affiliations?: unknown;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
};

export type MergedPluginOptions = {
    /**
     * If set to True, an order can be processed without approval
     */
    auto_approve_remote_orders?: boolean;
    /**
     * Service provider can create offering user
     */
    service_provider_can_create_offering_user?: boolean;
    /**
     * Maximum resource termination offset in days
     */
    max_resource_termination_offset_in_days?: number;
    /**
     * If set, it will be used as a default resource termination offset in days
     */
    default_resource_termination_offset_in_days?: number;
    /**
     * If set to True, resource termination date is required
     */
    is_resource_termination_date_required?: boolean;
    /**
     * If set, it will be used as a latest date for resource termination
     */
    latest_date_for_resource_termination?: string;
    /**
     * Skip approval of public offering belonging to the same organization under which the request is done
     */
    auto_approve_in_service_provider_projects?: boolean;
    /**
     * If set to True, it will be possible to downscale resources
     */
    supports_downscaling?: boolean;
    /**
     * If set to True, it will be possible to pause resources
     */
    supports_pausing?: boolean;
    /**
     * Minimal team count required for provisioning of resources
     */
    minimal_team_count_for_provisioning?: number;
    /**
     * Required user role in a project for provisioning of resources
     */
    required_team_role_for_provisioning?: string;
    /**
     * If set, it will be used as a default MTU for the first network in a tenant
     */
    default_internal_network_mtu?: number;
    /**
     * Default limit for number of instances in OpenStack tenant
     */
    max_instances?: number;
    /**
     * Default limit for number of volumes in OpenStack tenant
     */
    max_volumes?: number;
    /**
     * Storage mode for OpenStack offering
     */
    storage_mode?: StorageModeEnum;
    /**
     * Default limit for snapshot size in GB
     */
    snapshot_size_limit_gb?: number;
    /**
     * HEAppE cluster id
     */
    heappe_cluster_id?: string;
    /**
     * HEAppE local base path
     */
    heappe_local_base_path?: string;
    /**
     * HEAppE url
     */
    heappe_url?: string;
    /**
     * HEAppE username
     */
    heappe_username?: string;
    /**
     * GLAuth homedir prefix
     */
    homedir_prefix?: string;
    /**
     * GLAuth initial primary group number
     */
    initial_primarygroup_number?: number;
    /**
     * GLAuth initial uidnumber
     */
    initial_uidnumber?: number;
    /**
     * GLAuth initial usergroup number
     */
    initial_usergroup_number?: number;
    /**
     * GLAuth prefix for anonymized usernames
     */
    username_anonymized_prefix?: string;
    /**
     * GLAuth username generation policy
     */
    username_generation_policy?: UsernameGenerationPolicyEnum;
    /**
     * Enable issues for membership changes
     */
    enable_issues_for_membership_changes?: boolean;
    /**
     * Regular expression to limit flavors list
     */
    flavors_regex?: string;
    /**
     * List of UUID of OpenStack offerings where tenant can be created
     */
    openstack_offering_uuid_list?: Array<string>;
    managed_rancher_server_flavor_name?: string;
    managed_rancher_server_system_volume_size_gb?: number;
    managed_rancher_server_system_volume_type_name?: string;
    managed_rancher_server_data_volume_size_gb?: number;
    managed_rancher_server_data_volume_type_name?: string;
    managed_rancher_worker_system_volume_size_gb?: number;
    managed_rancher_worker_system_volume_type_name?: string;
    managed_rancher_load_balancer_flavor_name?: string;
    managed_rancher_load_balancer_system_volume_size_gb?: number;
    managed_rancher_load_balancer_system_volume_type_name?: string;
    managed_rancher_load_balancer_data_volume_size_gb?: number;
    managed_rancher_load_balancer_data_volume_type_name?: string;
    /**
     * Max number of vCPUs for tenants
     */
    managed_rancher_tenant_max_cpu?: number;
    /**
     * Max number of RAM for tenants (GB)
     */
    managed_rancher_tenant_max_ram?: number;
    /**
     * Max size of disk space for tenants (GB)
     */
    managed_rancher_tenant_max_disk?: number;
    /**
     * Slurm account name generation policy
     */
    account_name_generation_policy?: AccountNameGenerationPolicyEnum | NullEnum | null;
};

export type MergedPluginOptionsRequest = {
    /**
     * If set to True, an order can be processed without approval
     */
    auto_approve_remote_orders?: boolean;
    /**
     * Service provider can create offering user
     */
    service_provider_can_create_offering_user?: boolean;
    /**
     * Maximum resource termination offset in days
     */
    max_resource_termination_offset_in_days?: number;
    /**
     * If set, it will be used as a default resource termination offset in days
     */
    default_resource_termination_offset_in_days?: number;
    /**
     * If set to True, resource termination date is required
     */
    is_resource_termination_date_required?: boolean;
    /**
     * If set, it will be used as a latest date for resource termination
     */
    latest_date_for_resource_termination?: string;
    /**
     * Skip approval of public offering belonging to the same organization under which the request is done
     */
    auto_approve_in_service_provider_projects?: boolean;
    /**
     * If set to True, it will be possible to downscale resources
     */
    supports_downscaling?: boolean;
    /**
     * If set to True, it will be possible to pause resources
     */
    supports_pausing?: boolean;
    /**
     * Minimal team count required for provisioning of resources
     */
    minimal_team_count_for_provisioning?: number;
    /**
     * Required user role in a project for provisioning of resources
     */
    required_team_role_for_provisioning?: string;
    /**
     * If set, it will be used as a default MTU for the first network in a tenant
     */
    default_internal_network_mtu?: number;
    /**
     * Default limit for number of instances in OpenStack tenant
     */
    max_instances?: number;
    /**
     * Default limit for number of volumes in OpenStack tenant
     */
    max_volumes?: number;
    /**
     * Storage mode for OpenStack offering
     */
    storage_mode?: StorageModeEnum;
    /**
     * Default limit for snapshot size in GB
     */
    snapshot_size_limit_gb?: number;
    /**
     * HEAppE cluster id
     */
    heappe_cluster_id?: string;
    /**
     * HEAppE local base path
     */
    heappe_local_base_path?: string;
    /**
     * HEAppE url
     */
    heappe_url?: string;
    /**
     * HEAppE username
     */
    heappe_username?: string;
    /**
     * GLAuth homedir prefix
     */
    homedir_prefix?: string;
    /**
     * GLAuth initial primary group number
     */
    initial_primarygroup_number?: number;
    /**
     * GLAuth initial uidnumber
     */
    initial_uidnumber?: number;
    /**
     * GLAuth initial usergroup number
     */
    initial_usergroup_number?: number;
    /**
     * GLAuth prefix for anonymized usernames
     */
    username_anonymized_prefix?: string;
    /**
     * GLAuth username generation policy
     */
    username_generation_policy?: UsernameGenerationPolicyEnum;
    /**
     * Enable issues for membership changes
     */
    enable_issues_for_membership_changes?: boolean;
    /**
     * Regular expression to limit flavors list
     */
    flavors_regex?: string;
    /**
     * List of UUID of OpenStack offerings where tenant can be created
     */
    openstack_offering_uuid_list?: Array<string>;
    managed_rancher_server_flavor_name?: string;
    managed_rancher_server_system_volume_size_gb?: number;
    managed_rancher_server_system_volume_type_name?: string;
    managed_rancher_server_data_volume_size_gb?: number;
    managed_rancher_server_data_volume_type_name?: string;
    managed_rancher_worker_system_volume_size_gb?: number;
    managed_rancher_worker_system_volume_type_name?: string;
    managed_rancher_load_balancer_flavor_name?: string;
    managed_rancher_load_balancer_system_volume_size_gb?: number;
    managed_rancher_load_balancer_system_volume_type_name?: string;
    managed_rancher_load_balancer_data_volume_size_gb?: number;
    managed_rancher_load_balancer_data_volume_type_name?: string;
    /**
     * Max number of vCPUs for tenants
     */
    managed_rancher_tenant_max_cpu?: number;
    /**
     * Max number of RAM for tenants (GB)
     */
    managed_rancher_tenant_max_ram?: number;
    /**
     * Max size of disk space for tenants (GB)
     */
    managed_rancher_tenant_max_disk?: number;
    /**
     * Slurm account name generation policy
     */
    account_name_generation_policy?: AccountNameGenerationPolicyEnum | NullEnum | null;
};

export type MergedSecretOptions = {
    /**
     * HEAppE cluster password
     */
    heappe_cluster_password?: string;
    /**
     * HEAppE password
     */
    heappe_password?: string;
    /**
     * OpenStack IPv4 external IP mapping
     */
    ipv4_external_ip_mapping?: Array<IpMapping>;
    openstack_api_tls_certificate?: string;
    /**
     * Default value for new subnets DNS name servers. Should be defined as list.
     */
    dns_nameservers?: Array<string>;
    /**
     * GLAuth shared user password
     */
    shared_user_password?: string;
    /**
     * Template confirmation comment
     */
    template_confirmation_comment?: string;
    /**
     * Script language: Python or Bash
     */
    language?: string;
    /**
     * Script environment variables
     */
    environ?: unknown;
    /**
     * Script for resource creation
     */
    create?: string;
    /**
     * Script for resource termination
     */
    terminate?: string;
    /**
     * Script for resource update
     */
    update?: string;
    /**
     * Script for regular resource pull
     */
    pull?: string;
    /**
     * API URL
     */
    api_url?: string;
    /**
     * Waldur access token
     */
    token?: string;
    /**
     * Organization UUID
     */
    customer_uuid?: string;
    /**
     * Rancher server URL
     */
    backend_url?: string;
    /**
     * Rancher access key
     */
    username?: string;
    /**
     * Rancher secret key
     */
    password?: string;
    cloud_init_template?: string;
    managed_rancher_load_balancer_cloud_init_template?: string;
    /**
     * Host of the Vault server
     */
    vault_host?: string;
    /**
     * Port of the Vault server
     */
    vault_port?: number;
    /**
     * Token for the Vault server
     */
    vault_token?: string;
    /**
     * Whether to verify the Vault server certificate
     */
    vault_tls_verify?: boolean;
    /**
     * URL of the Keycloak server
     */
    keycloak_url?: string;
    /**
     * Keycloak realm for Rancher
     */
    keycloak_realm?: string;
    /**
     * Keycloak user realm for auth
     */
    keycloak_user_realm?: string;
    /**
     * Username of the Keycloak integration user
     */
    keycloak_username?: string;
    /**
     * Password of the Keycloak integration user
     */
    keycloak_password?: string;
    /**
     * Frequency in minutes for syncing Keycloak users
     */
    keycloak_sync_frequency?: number;
    /**
     * Indicates whether verify SSL certificates
     */
    keycloak_ssl_verify?: boolean;
    /**
     * Namespace where ArgoCD is deployed
     */
    argocd_k8s_namespace?: string;
    /**
     * Kubeconfig with access to namespace where ArgoCD is deployed
     */
    argocd_k8s_kubeconfig?: string;
    /**
     * Base image name
     */
    base_image_name?: string;
    /**
     * URL of a private registry for a cluster
     */
    private_registry_url?: string;
    /**
     * Username for accessing a private registry
     */
    private_registry_user?: string;
    /**
     * Password for accessing a private registry
     */
    private_registry_password?: string;
    /**
     * Kubernetes version
     */
    k8s_version?: string;
    /**
     * OpenStack disk driver for Rancher nodes
     */
    node_disk_driver?: NodeDiskDriverEnum;
};

export type MergedSecretOptionsRequest = {
    /**
     * HEAppE cluster password
     */
    heappe_cluster_password?: string;
    /**
     * HEAppE password
     */
    heappe_password?: string;
    /**
     * OpenStack IPv4 external IP mapping
     */
    ipv4_external_ip_mapping?: Array<IpMappingRequest>;
    openstack_api_tls_certificate?: string;
    /**
     * Default value for new subnets DNS name servers. Should be defined as list.
     */
    dns_nameservers?: Array<string>;
    /**
     * GLAuth shared user password
     */
    shared_user_password?: string;
    /**
     * Template confirmation comment
     */
    template_confirmation_comment?: string;
    /**
     * Script language: Python or Bash
     */
    language?: string;
    /**
     * Script environment variables
     */
    environ?: unknown;
    /**
     * Script for resource creation
     */
    create?: string;
    /**
     * Script for resource termination
     */
    terminate?: string;
    /**
     * Script for resource update
     */
    update?: string;
    /**
     * Script for regular resource pull
     */
    pull?: string;
    /**
     * API URL
     */
    api_url?: string;
    /**
     * Waldur access token
     */
    token?: string;
    /**
     * Organization UUID
     */
    customer_uuid?: string;
    /**
     * Rancher server URL
     */
    backend_url?: string;
    /**
     * Rancher access key
     */
    username?: string;
    /**
     * Rancher secret key
     */
    password?: string;
    cloud_init_template?: string;
    managed_rancher_load_balancer_cloud_init_template?: string;
    /**
     * Host of the Vault server
     */
    vault_host?: string;
    /**
     * Port of the Vault server
     */
    vault_port?: number;
    /**
     * Token for the Vault server
     */
    vault_token?: string;
    /**
     * Whether to verify the Vault server certificate
     */
    vault_tls_verify?: boolean;
    /**
     * URL of the Keycloak server
     */
    keycloak_url?: string;
    /**
     * Keycloak realm for Rancher
     */
    keycloak_realm?: string;
    /**
     * Keycloak user realm for auth
     */
    keycloak_user_realm?: string;
    /**
     * Username of the Keycloak integration user
     */
    keycloak_username?: string;
    /**
     * Password of the Keycloak integration user
     */
    keycloak_password?: string;
    /**
     * Frequency in minutes for syncing Keycloak users
     */
    keycloak_sync_frequency?: number;
    /**
     * Indicates whether verify SSL certificates
     */
    keycloak_ssl_verify?: boolean;
    /**
     * Namespace where ArgoCD is deployed
     */
    argocd_k8s_namespace?: string;
    /**
     * Kubeconfig with access to namespace where ArgoCD is deployed
     */
    argocd_k8s_kubeconfig?: string;
    /**
     * Base image name
     */
    base_image_name?: string;
    /**
     * URL of a private registry for a cluster
     */
    private_registry_url?: string;
    /**
     * Username for accessing a private registry
     */
    private_registry_user?: string;
    /**
     * Password for accessing a private registry
     */
    private_registry_password?: string;
    /**
     * Kubernetes version
     */
    k8s_version?: string;
    /**
     * OpenStack disk driver for Rancher nodes
     */
    node_disk_driver?: NodeDiskDriverEnum;
};

export type MessageTemplate = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    subject: string;
    body: string;
};

export type MessageTemplateRequest = {
    name: string;
    subject: string;
    body: string;
};

export type MigrationCreate = {
    mappings?: Mapping;
    src_resource: string;
};

export type MigrationCreateRequest = {
    name?: string;
    description?: string;
    mappings?: MappingRequest;
    src_resource: string;
    dst_offering: string;
    dst_plan: string;
};

export type MigrationDetails = {
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    mappings: Mapping;
    readonly created_by_uuid: string;
    readonly created_by_full_name: string;
    readonly src_offering_uuid: string;
    readonly src_offering_name: string;
    readonly dst_offering_uuid: string;
    readonly dst_offering_name: string;
    readonly src_resource_uuid: string;
    readonly src_resource_name: string;
    readonly dst_resource_uuid: string;
    readonly dst_resource_name: string;
    readonly dst_resource_state: string;
    readonly state: string;
    error_message?: string;
    error_traceback?: string;
};

export type MigrationDetailsRequest = {
    mappings: MappingRequest;
    error_message?: string;
    error_traceback?: string;
};

export type MinimalConsumptionLogicEnum = 'fixed' | 'linear';

export type MoveOfferingRequest = {
    customer: string;
    preserve_permissions: boolean;
};

export type MoveProjectRequest = {
    customer: string;
    preserve_permissions: boolean;
};

export type NameUuid = {
    readonly name: string;
    readonly uuid: string;
};

export type NestedAttribute = {
    key?: string;
    title?: string;
    type?: NestedAttributeTypeEnum;
    options?: Array<NestedAttributeOption>;
    /**
     * A value must be provided for the attribute.
     */
    required?: boolean;
    default?: unknown;
};

export type NestedAttributeOption = {
    key?: string;
    title?: string;
};

export type NestedAttributeOptionRequest = {
    key: string;
    title: string;
};

export type NestedAttributeRequest = {
    key: string;
    title: string;
    type: NestedAttributeTypeEnum;
    options: Array<NestedAttributeOptionRequest>;
    /**
     * A value must be provided for the attribute.
     */
    required?: boolean;
    default?: unknown;
};

export type NestedAttributeTypeEnum = 'boolean' | 'string' | 'text' | 'integer' | 'choice' | 'list';

export type NestedCampaign = {
    readonly uuid?: string;
    name?: string;
    /**
     * Starting from this date, the campaign is active.
     */
    start_date?: string;
    /**
     * The last day the campaign is active.
     */
    end_date?: string;
    discount_type?: DiscountTypeEnum;
    discount?: number;
    stock?: number | null;
    description?: string;
    /**
     * How many months in a row should the related service (when activated) get special deal (0 for indefinitely until active)
     */
    months?: number;
    service_provider?: string;
};

export type NestedColumn = {
    readonly uuid?: string;
    /**
     * Index allows to reorder columns.
     */
    index?: number;
    /**
     * Title is rendered as column header.
     */
    title?: string;
    /**
     * Resource attribute is rendered as table cell.
     */
    attribute?: string;
    /**
     * Widget field allows to customise table cell rendering.
     */
    widget?: WidgetEnum | BlankEnum | NullEnum | null;
};

export type NestedColumnRequest = {
    /**
     * Index allows to reorder columns.
     */
    index: number;
    /**
     * Title is rendered as column header.
     */
    title: string;
    /**
     * Resource attribute is rendered as table cell.
     */
    attribute?: string;
    /**
     * Widget field allows to customise table cell rendering.
     */
    widget?: WidgetEnum | BlankEnum | NullEnum | null;
};

export type NestedEndpoint = {
    readonly uuid?: string;
    name?: string;
    url?: string;
};

export type NestedEndpointRequest = {
    name: string;
    url: string;
};

export type NestedFeedback = {
    readonly evaluation: number;
    readonly evaluation_number: number;
    comment?: string;
    readonly state: string;
};

export type NestedFeedbackRequest = {
    comment?: string;
};

export type NestedOfferingComponentLimit = {
    type: string;
    limit: number;
};

export type NestedOfferingComponentLimitRequest = {
    type: string;
    limit: number;
};

export type NestedOfferingFile = {
    name?: string;
    readonly created?: string;
    file?: string;
};

export type NestedOfferingFileRequest = {
    name: string;
    file: Blob | File;
};

export type NestedPriceEstimate = {
    readonly total?: string;
    readonly current?: string;
    readonly tax?: string;
    readonly tax_current?: string;
};

export type NestedProject = {
    readonly uuid: string;
    readonly url: string;
};

export type NestedProjectPermission = {
    readonly url?: string;
    readonly uuid?: string;
    readonly name?: string;
    readonly role_name?: string;
    expiration_time?: string | null;
};

export type NestedProviderOffering = {
    readonly uuid: string;
    readonly url: string;
    type: string;
    name: string;
};

export type NestedProviderOfferingRequest = {
    type: string;
    name: string;
};

export type NestedPublicOffering = {
    readonly uuid: string;
    readonly url: string;
    type: string;
    name: string;
};

export type NestedPublicOfferingRequest = {
    type: string;
    name: string;
};

export type NestedRemoteLocalCategory = {
    local_category: string;
    remote_category: string;
    readonly local_category_name: string;
    readonly local_category_uuid: string;
    remote_category_name?: string;
};

export type NestedRemoteLocalCategoryRequest = {
    local_category: string;
    remote_category: string;
    remote_category_name?: string;
};

export type NestedRequestedOffering = {
    readonly uuid?: string;
    state?: RequestedOfferingStates;
    offering?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly provider_name?: string;
    readonly category_uuid?: string;
    readonly category_name?: string;
    readonly call_managing_organisation?: string;
    attributes?: unknown;
    plan?: string | null;
    plan_details?: BasePublicPlan;
    options?: OfferingOptions;
    readonly components?: Array<OfferingComponent>;
    readonly created?: string;
};

export type NestedRequestedOfferingRequest = {
    offering: string;
    attributes?: unknown;
    plan?: string | null;
};

export type NestedRole = {
    readonly uuid?: string;
    name?: string;
    readonly url?: string;
};

export type NestedRoleRequest = {
    name: string;
};

export type NestedRound = {
    readonly uuid?: string;
    readonly name?: string;
    start_time?: string;
    cutoff_time?: string;
    status?: StatusEnum;
    review_strategy?: ReviewStrategyEnum;
    deciding_entity?: DecidingEntityEnum;
    allocation_time?: AllocationTimeEnum;
    allocation_date?: string | null;
    minimal_average_scoring?: string | null;
    review_duration_in_days?: number | null;
    minimum_number_of_reviewers?: number | null;
};

export type NestedRoundRequest = {
    start_time: string;
    cutoff_time: string;
    review_strategy?: ReviewStrategyEnum;
    deciding_entity?: DecidingEntityEnum;
    allocation_time?: AllocationTimeEnum;
    allocation_date?: string | null;
    minimal_average_scoring?: string | null;
    review_duration_in_days?: number | null;
    minimum_number_of_reviewers?: number | null;
};

export type NestedScreenshot = {
    name?: string;
    readonly uuid?: string;
    description?: string;
    image?: string;
    readonly thumbnail?: string | null;
    readonly created?: string;
};

export type NestedScreenshotRequest = {
    name: string;
    description?: string;
    image: Blob | File;
};

export type NestedSection = {
    key?: string;
    title?: string;
    readonly attributes?: Array<NestedAttribute>;
    /**
     * Whether section is rendered as a separate tab.
     */
    is_standalone?: boolean;
};

export type NestedSectionRequest = {
    key: string;
    title: string;
    /**
     * Whether section is rendered as a separate tab.
     */
    is_standalone?: boolean;
};

export type NetworkRbacPolicy = {
    readonly url?: string;
    readonly uuid?: string;
    readonly network?: string;
    readonly network_name?: string;
    target_tenant?: string;
    readonly target_tenant_name?: string;
    readonly backend_id?: string;
    /**
     * Type of access granted - either shared access or external network access
     */
    policy_type?: PolicyTypeEnum;
    readonly created?: string;
};

export type NetworkRbacPolicyRequest = {
    target_tenant: string;
    /**
     * Type of access granted - either shared access or external network access
     */
    policy_type?: PolicyTypeEnum;
};

export type NodeDiskDriverEnum = 'sd' | 'vd';

export type Notification = {
    readonly uuid: string;
    readonly url: string;
    key: string;
    description?: string;
    /**
     * Indicates if notification is enabled or disabled
     */
    readonly enabled: boolean;
    readonly created: string;
    readonly templates: Array<NotificationTemplateDetailSerializers>;
};

export type NotificationRequest = {
    key: string;
    description?: string;
};

export type NotificationTemplateDetailSerializers = {
    readonly uuid: string;
    readonly url: string;
    /**
     * Example: 'flatpages/default.html'
     */
    path: string;
    name: string;
    readonly content: string;
    readonly original_content: string | null;
    readonly is_content_overridden: boolean;
};

export type NotificationTemplateDetailSerializersRequest = {
    /**
     * Example: 'flatpages/default.html'
     */
    path: string;
    name: string;
};

export type NotificationTemplateUpdateSerializersRequest = {
    content: string;
};

export type NullEnum = unknown;

export type ObtainAuthTokenRequest = {
    username: string;
    password: string;
};

export type OecdFos2007CodeEnum = '1.1' | '1.2' | '1.3' | '1.4' | '1.5' | '1.6' | '1.7' | '2.1' | '2.2' | '2.3' | '2.4' | '2.5' | '2.6' | '2.7' | '2.8' | '2.9' | '2.10' | '2.11' | '2.12' | '3.1' | '3.2' | '3.3' | '3.4' | '3.5' | '4.1' | '4.2' | '4.3' | '4.4' | '4.5' | '5.1' | '5.2' | '5.3' | '5.4' | '5.5' | '5.6' | '5.7' | '5.8' | '5.9' | '6.1' | '6.2' | '6.3' | '6.4' | '6.5';

export type Offering = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    name?: string;
    readonly slug?: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    readonly endpoints?: Array<NestedEndpoint>;
    readonly roles?: Array<NestedRole>;
    customer?: string | null;
    readonly customer_uuid?: string | null;
    readonly customer_name?: string | null;
    readonly project?: string | null;
    readonly project_uuid?: string | null;
    readonly project_name?: string | null;
    category?: string;
    readonly category_uuid?: string;
    readonly category_title?: string;
    readonly attributes?: {
        [key: string]: unknown;
    };
    options?: OfferingOptions;
    resource_options?: OfferingOptions;
    readonly components?: Array<OfferingComponent>;
    plugin_options?: MergedPluginOptions;
    state?: OfferingState;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: string | null;
    readonly order_count?: number;
    readonly plans?: Array<BasePublicPlan>;
    readonly screenshots?: Array<NestedScreenshot>;
    type?: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    readonly scope?: string;
    readonly scope_uuid?: string | null;
    readonly scope_name?: string | null;
    scope_state?: CoreStates | null;
    readonly scope_error_message?: string | null;
    readonly files?: Array<NestedOfferingFile>;
    readonly quotas?: Array<Quota>;
    readonly paused_reason?: string;
    datacite_doi?: string;
    /**
     * Number of citations of a DOI
     */
    readonly citation_count?: number;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    readonly organization_groups?: Array<OrganizationGroup>;
    image?: string | null;
    readonly total_customers?: number | null;
    readonly total_cost?: number | null;
    readonly total_cost_estimated?: number | null;
    readonly parent_description?: string | null;
    readonly parent_uuid?: string | null;
    readonly parent_name?: string | null;
    backend_metadata?: unknown;
    readonly has_compliance_requirements?: boolean;
    googlecalendar?: GoogleCalendar;
};

export type OfferingBackendMetadataRequest = {
    backend_metadata?: unknown;
};

export type OfferingComponent = {
    readonly uuid?: string;
    billing_type?: BillingTypeEnum;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type?: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name?: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    /**
     * The conversion factor from backend units to measured_unit
     */
    unit_factor?: number;
    limit_period?: LimitPeriodEnum | BlankEnum | NullEnum | null;
    limit_amount?: number | null;
    article_code?: string;
    max_value?: number | null;
    min_value?: number | null;
    max_available_limit?: number | null;
    is_boolean?: boolean;
    default_limit?: number | null;
    readonly factor?: number | null;
    readonly is_builtin?: boolean;
};

export type OfferingComponentLimit = {
    min: number;
    max: number;
    max_available_limit: number;
};

export type OfferingComponentLimitRequest = {
    min: number;
    max: number;
    max_available_limit: number;
};

export type OfferingComponentRequest = {
    billing_type: BillingTypeEnum;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    /**
     * The conversion factor from backend units to measured_unit
     */
    unit_factor?: number;
    limit_period?: LimitPeriodEnum | BlankEnum | NullEnum | null;
    limit_amount?: number | null;
    article_code?: string;
    max_value?: number | null;
    min_value?: number | null;
    max_available_limit?: number | null;
    is_boolean?: boolean;
    default_limit?: number | null;
};

export type OfferingComponentStat = {
    readonly period: string;
    readonly billing_period: string;
    readonly date: string;
    readonly usage: number;
    readonly description: string;
    readonly measured_unit: string;
    readonly type: string;
    readonly name: string;
};

export type OfferingCost = {
    offering_uuid: string;
    cost: number;
};

export type OfferingCountryStats = {
    country: string;
    count: number;
};

export type OfferingCreate = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    name: string;
    readonly slug: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    readonly endpoints: Array<NestedEndpoint>;
    readonly roles: Array<NestedRole>;
    customer?: string | null;
    readonly customer_uuid: string | null;
    readonly customer_name: string | null;
    readonly project: string | null;
    readonly project_uuid: string | null;
    readonly project_name: string | null;
    category: string;
    readonly category_uuid: string;
    readonly category_title: string;
    attributes?: unknown;
    options?: OfferingOptions;
    resource_options?: OfferingOptions;
    components?: Array<OfferingComponent>;
    plugin_options: MergedPluginOptions;
    secret_options: MergedSecretOptions;
    readonly service_attributes: {
        [key: string]: unknown;
    };
    state: OfferingState;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: string | null;
    readonly order_count: number;
    plans?: Array<BaseProviderPlan>;
    readonly screenshots: Array<NestedScreenshot>;
    type: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    readonly scope: string;
    readonly scope_uuid: string | null;
    readonly scope_name: string | null;
    scope_state: CoreStates | null;
    readonly scope_error_message: string | null;
    readonly files: Array<NestedOfferingFile>;
    readonly quotas: Array<Quota>;
    readonly paused_reason: string;
    datacite_doi?: string;
    /**
     * Number of citations of a DOI
     */
    readonly citation_count: number;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    readonly organization_groups: Array<OrganizationGroup>;
    image?: string | null;
    readonly total_customers: number | null;
    readonly total_cost: number | null;
    readonly total_cost_estimated: number | null;
    readonly parent_description: string | null;
    readonly parent_uuid: string | null;
    readonly parent_name: string | null;
    backend_metadata?: unknown;
    readonly has_compliance_requirements: boolean;
};

export type OfferingCreateRequest = {
    name: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    customer?: string | null;
    category: string;
    attributes?: unknown;
    options?: OfferingOptionsRequest;
    resource_options?: OfferingOptionsRequest;
    components?: Array<OfferingComponentRequest>;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: (Blob | File) | null;
    plans?: Array<BaseProviderPlanRequest>;
    type: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    datacite_doi?: string;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    image?: (Blob | File) | null;
    backend_metadata?: unknown;
    limits?: {
        [key: string]: OfferingComponentLimitRequest;
    };
};

export type OfferingDescriptionUpdateRequest = {
    category: string;
};

export type OfferingEstimatedCostPolicy = {
    readonly uuid: string;
    readonly url: string;
    scope: string;
    readonly scope_name: string;
    readonly scope_uuid: string;
    actions: string;
    readonly created: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly has_fired: boolean;
    readonly fired_datetime: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
    readonly period_name: string;
    organization_groups: Array<string>;
};

export type OfferingEstimatedCostPolicyRequest = {
    scope: string;
    actions: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
    organization_groups: Array<string>;
};

export type OfferingFile = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    offering?: string;
    readonly created?: string;
    file?: string;
};

export type OfferingFileRequest = {
    name: string;
    offering: string;
    file: Blob | File;
};

export type OfferingGroups = {
    readonly customer_name: string;
    readonly customer_uuid: string;
    readonly offerings: Array<OfferingReference>;
};

export type OfferingImageRequest = {
    image: Blob | File;
};

export type OfferingIntegrationUpdateRequest = {
    secret_options?: MergedSecretOptionsRequest;
    plugin_options?: MergedPluginOptionsRequest;
    service_attributes?: unknown;
    backend_id?: string;
};

export type OfferingLocationUpdateRequest = {
    latitude: number;
    longitude: number;
};

export type OfferingOptions = {
    order?: Array<string>;
    options?: {
        [key: string]: OptionField;
    };
};

export type OfferingOptionsRequest = {
    order: Array<string>;
    options: {
        [key: string]: OptionFieldRequest;
    };
};

export type OfferingOptionsUpdateRequest = {
    options: OfferingOptionsRequest;
};

export type OfferingOverviewUpdateRequest = {
    name: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    getting_started?: string;
    integration_guide?: string;
};

export type OfferingPauseRequest = {
    paused_reason?: string;
};

export type OfferingPermission = {
    readonly url: string;
    /**
     * ID
     */
    readonly pk: number;
    readonly created: string;
    expiration_time?: string | null;
    readonly created_by: string | null;
    readonly offering: string;
    readonly offering_uuid: string;
    readonly offering_slug: string;
    readonly offering_name: string;
    readonly role: string;
    readonly role_name: string;
    readonly user: string;
    readonly user_full_name: string;
    readonly user_native_name: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    readonly user_uuid: string;
    /**
     * Email address
     */
    readonly user_email: string;
};

export type OfferingReference = {
    readonly offering_name: string;
    readonly offering_uuid: string;
};

export type OfferingReferral = {
    readonly url: string;
    readonly uuid: string;
    readonly scope: string;
    readonly scope_uuid: string;
    pid?: string;
    relation_type?: string;
    resource_type?: string;
    creator?: string;
    publisher?: string;
    published?: string;
    title?: string;
    referral_url?: string;
};

export type OfferingResourceOptionsUpdateRequest = {
    resource_options: OfferingOptionsRequest;
};

export type OfferingState = 'Draft' | 'Active' | 'Paused' | 'Archived';

export type OfferingStats = {
    count: number;
    name: string;
    uuid: string;
    country: string;
};

export type OfferingStatsCounter = {
    category_uuid: string;
    category_title: string;
    service_provider_name: string;
    service_provider_uuid: string;
    count: number;
};

export type OfferingThumbnailRequest = {
    thumbnail: Blob | File;
};

export type OfferingUsagePolicy = {
    readonly uuid: string;
    readonly url: string;
    scope: string;
    readonly scope_name: string;
    readonly scope_uuid: string;
    actions: string;
    readonly created: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly has_fired: boolean;
    readonly fired_datetime: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    organization_groups: Array<string>;
    component_limits_set: Array<NestedOfferingComponentLimit>;
    period?: PeriodEnum;
    readonly period_name: string;
};

export type OfferingUsagePolicyRequest = {
    scope: string;
    actions: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    organization_groups: Array<string>;
    component_limits_set: Array<NestedOfferingComponentLimitRequest>;
    period?: PeriodEnum;
};

export type OfferingUser = {
    readonly url?: string;
    readonly uuid?: string;
    user?: string;
    offering?: string;
    username?: string | null;
    offering_uuid?: string;
    readonly offering_name?: string;
    user_uuid?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username?: string;
    readonly user_full_name?: string;
    /**
     * Email address
     */
    readonly user_email?: string;
    readonly created?: string;
    readonly modified?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    /**
     * Signal to service if the user account is restricted or not
     */
    readonly is_restricted?: boolean;
    state?: OfferingUserStateEnum;
    /**
     * Additional comment for pending states like validation or account linking
     */
    readonly service_provider_comment?: string;
    /**
     * URL link for additional information or actions related to service provider comment
     */
    readonly service_provider_comment_url?: string;
};

export type OfferingUserRequest = {
    user?: string;
    offering?: string;
    username?: string | null;
    offering_uuid?: string;
    user_uuid?: string;
};

export type OfferingUserRole = {
    name: string;
    readonly uuid: string;
    offering: string;
    readonly offering_uuid: string;
    readonly offering_name: string;
};

export type OfferingUserRoleRequest = {
    name: string;
    offering: string;
};

export type OfferingUserServiceProviderComment = {
    service_provider_comment?: string;
    /**
     * URL link for additional information or actions related to service provider comment
     */
    service_provider_comment_url?: string;
};

export type OfferingUserStateEnum = 'Requested' | 'Creating' | 'Pending account linking' | 'Pending additional validation' | 'OK' | 'Requested deletion' | 'Deleting' | 'Deleted' | 'Error creating' | 'Error deleting';

export type OfferingUserStateTransitionRequest = {
    comment?: string;
    comment_url?: string;
};

export type OfferingUserUpdateRestrictionRequest = {
    is_restricted: boolean;
};

export type OpenStackAllowedAddressPair = {
    mac_address?: string;
};

export type OpenStackAllowedAddressPairRequest = {
    ip_address?: string;
    mac_address?: string;
};

export type OpenStackBackendInstance = {
    name: string;
    key_name?: string;
    start_time?: string | null;
    readonly state: string;
    runtime_state?: string;
    readonly created: string;
    /**
     * Instance ID in the OpenStack backend
     */
    backend_id?: string | null;
    readonly availability_zone: string;
    /**
     * Name of the hypervisor hosting this instance
     */
    hypervisor_hostname?: string;
};

export type OpenStackBackendVolumes = {
    name: string;
    description?: string;
    /**
     * Size in MiB
     */
    size: number;
    /**
     * Arbitrary key-value pairs associated with the volume
     */
    metadata?: string;
    /**
     * Volume ID in the OpenStack backend
     */
    backend_id?: string | null;
    readonly type: string;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
    runtime_state?: string;
    readonly state: string;
    readonly availability_zone: string;
};

export type OpenStackBackup = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    /**
     * Guaranteed time of backup retention. If null - keep forever.
     */
    kept_until?: string | null;
    readonly metadata?: unknown;
    /**
     * Instance that this backup is created from
     */
    readonly instance?: string;
    readonly instance_name?: string;
    readonly instance_marketplace_uuid?: string;
    readonly restorations?: Array<OpenStackBackupRestoration>;
    readonly instance_security_groups?: Array<OpenStackNestedSecurityGroup>;
    readonly instance_ports?: Array<OpenStackNestedPort>;
    readonly instance_floating_ips?: Array<OpenStackNestedFloatingIp>;
    readonly tenant_uuid?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackBackupRequest = {
    name: string;
    description?: string;
    /**
     * Guaranteed time of backup retention. If null - keep forever.
     */
    kept_until?: string | null;
};

export type OpenStackBackupRestoration = {
    readonly uuid?: string;
    /**
     * Instance that is being restored from the backup
     */
    readonly instance?: string;
    readonly created?: string;
    /**
     * Flavor to be used for the restored instance. If not specified, original instance flavor will be used
     */
    flavor?: string;
    /**
     * New instance name. Leave blank to use source instance name.
     */
    name?: string;
    /**
     * Floating IPs that will be assigned to the restored instance
     */
    floating_ips?: Array<OpenStackNestedFloatingIp>;
    /**
     * Security groups that will be assigned to the restored instance
     */
    security_groups?: Array<OpenStackNestedSecurityGroup>;
    /**
     * Network ports that will be attached to the restored instance
     */
    ports?: Array<OpenStackNestedPort>;
};

export type OpenStackBackupRestorationRequest = {
    /**
     * Flavor to be used for the restored instance. If not specified, original instance flavor will be used
     */
    flavor: string;
    /**
     * New instance name. Leave blank to use source instance name.
     */
    name?: string;
    /**
     * Floating IPs that will be assigned to the restored instance
     */
    floating_ips?: Array<OpenStackNestedFloatingIpRequest>;
    /**
     * Security groups that will be assigned to the restored instance
     */
    security_groups?: Array<OpenStackNestedSecurityGroupRequest>;
    /**
     * Network ports that will be attached to the restored instance
     */
    ports?: Array<OpenStackNestedPortRequest>;
};

export type OpenStackDataVolume = {
    size: number;
    volume_type?: string | null;
};

export type OpenStackDataVolumeRequest = {
    size: number;
    volume_type?: string | null;
};

export type OpenStackFixedIp = {
    /**
     * IP address to assign to the port
     */
    ip_address?: string;
    /**
     * ID of the subnet in which to assign the IP address
     */
    subnet_id?: string;
};

export type OpenStackFixedIpRequest = {
    /**
     * IP address to assign to the port
     */
    ip_address: string;
    /**
     * ID of the subnet in which to assign the IP address
     */
    subnet_id: string;
};

export type OpenStackFlavor = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    settings?: string;
    /**
     * Number of cores in a VM
     */
    cores?: number;
    /**
     * Memory size in MiB
     */
    ram?: number;
    /**
     * Root disk size in MiB
     */
    disk?: number;
    backend_id?: string;
    readonly display_name?: string;
};

export type OpenStackFloatingIp = {
    readonly url?: string;
    readonly uuid?: string;
    readonly name?: string;
    readonly description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly runtime_state?: string;
    /**
     * The public IPv4 address of the floating IP
     */
    readonly address?: string | null;
    /**
     * ID of network in OpenStack where this floating IP is allocated
     */
    readonly backend_network_id?: string;
    /**
     * OpenStack tenant this floating IP belongs to
     */
    readonly tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    readonly port?: string;
    /**
     * Optional address that maps to floating IP's address in external networks
     */
    readonly external_address?: string | null;
    readonly port_fixed_ips?: Array<OpenStackFixedIp>;
    readonly instance_uuid?: string | null;
    readonly instance_name?: string | null;
    readonly instance_url?: string | null;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackFloatingIpAttachRequest = {
    port: string;
};

export type OpenStackFloatingIpDescriptionUpdateRequest = {
    /**
     * New floating IP description.
     */
    description?: string;
};

export type OpenStackImage = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    /**
     * Minimum disk size in MiB
     */
    min_disk?: number;
    /**
     * Minimum memory size in MiB
     */
    min_ram?: number;
    settings: string;
    backend_id: string;
};

export type OpenStackInstance = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    /**
     * OpenStack provider settings
     */
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * Instance ID in the OpenStack backend
     */
    readonly backend_id?: string | null;
    readonly access_url?: string | null;
    readonly start_time?: string | null;
    /**
     * Number of cores in a VM
     */
    readonly cores?: number;
    /**
     * Memory size in MiB
     */
    readonly ram?: number;
    /**
     * Disk size in MiB
     */
    readonly disk?: number;
    /**
     * Minimum memory size in MiB
     */
    readonly min_ram?: number;
    /**
     * Minimum disk size in MiB
     */
    readonly min_disk?: number;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    readonly external_ips?: Array<string>;
    readonly internal_ips?: Array<string>;
    readonly latitude?: number | null;
    readonly longitude?: number | null;
    readonly key_name?: string;
    readonly key_fingerprint?: string;
    readonly image_name?: string;
    /**
     * Flavor disk size in MiB
     */
    readonly flavor_disk?: number;
    /**
     * Name of the flavor used by this instance
     */
    readonly flavor_name?: string;
    /**
     * List of volumes attached to the instance
     */
    readonly volumes?: Array<OpenStackNestedVolume>;
    /**
     * List of security groups to apply to the instance
     */
    security_groups?: Array<OpenStackNestedSecurityGroup>;
    /**
     * Server group for instance scheduling policy
     */
    server_group?: OpenStackNestedServerGroup | null;
    /**
     * Floating IPs to assign to the instance
     */
    floating_ips?: Array<OpenStackNestedFloatingIp>;
    /**
     * Network ports to attach to the instance
     */
    ports?: Array<OpenStackNestedPort>;
    /**
     * Availability zone where this instance is located
     */
    availability_zone?: string | null;
    /**
     * Name of the availability zone where instance is located
     */
    readonly availability_zone_name?: string;
    /**
     * If True, instance will be connected directly to external network
     */
    connect_directly_to_external_network?: boolean;
    readonly runtime_state?: string;
    readonly action?: string;
    /**
     * Details about ongoing or completed actions
     */
    readonly action_details?: unknown;
    /**
     * UUID of the OpenStack tenant
     */
    readonly tenant_uuid?: string;
    /**
     * Name of the hypervisor hosting this instance
     */
    readonly hypervisor_hostname?: string;
    /**
     * The OpenStack tenant to create the instance in
     */
    tenant?: string;
    readonly external_address?: Array<string>;
    rancher_cluster?: RancherClusterReference | null;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackInstanceAllowedAddressPairsUpdateRequest = {
    /**
     * The subnet to update allowed address pairs for.
     */
    subnet: string;
    /**
     * List of allowed address pairs to set on the port. Each pair should contain 'ip_address' and optional 'mac_address'.
     */
    allowed_address_pairs: Array<OpenStackAllowedAddressPairRequest>;
};

export type OpenStackInstanceAvailabilityZone = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    settings?: string | null;
    /**
     * Indicates whether this availability zone is available for instance provisioning
     */
    available?: boolean;
};

export type OpenStackInstanceFloatingIpsUpdateRequest = {
    floating_ips?: Array<OpenStackNestedFloatingIpRequest>;
};

export type OpenStackInstancePortsUpdateRequest = {
    ports: Array<OpenStackNestedPortRequest>;
};

export type OpenStackInstanceRequest = {
    name: string;
    description?: string;
    /**
     * Volume type for the system volume
     */
    system_volume_type?: string | null;
    /**
     * Volume type for the data volume
     */
    data_volume_type?: string | null;
    /**
     * Additional data volumes to attach to the instance
     */
    data_volumes?: Array<OpenStackDataVolumeRequest>;
};

export type OpenStackInstanceSecurityGroupsUpdateRequest = {
    /**
     * List of security groups to be assigned to the instance.
     */
    security_groups: Array<string>;
};

export type OpenStackNestedFloatingIp = {
    readonly url?: string;
    readonly uuid?: string;
    /**
     * The public IPv4 address of the floating IP
     */
    readonly address?: string | null;
    readonly port_fixed_ips?: Array<OpenStackFixedIp>;
    /**
     * MAC address of the port
     */
    readonly port_mac_address?: string | null;
    subnet?: string;
    readonly subnet_uuid?: string;
    readonly subnet_name?: string;
    readonly subnet_description?: string;
    /**
     * IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
     */
    readonly subnet_cidr?: string;
};

export type OpenStackNestedFloatingIpRequest = {
    subnet: string;
};

export type OpenStackNestedInstance = {
    /**
     * Instance ID in the OpenStack backend
     */
    backend_id?: string | null;
    name?: string;
    readonly uuid?: string;
};

export type OpenStackNestedPort = {
    readonly url?: string;
    fixed_ips?: Array<OpenStackFixedIp>;
    /**
     * MAC address of the port
     */
    readonly mac_address?: string;
    /**
     * Subnet to which this port belongs
     */
    subnet?: string | null;
    readonly subnet_uuid?: string | null;
    readonly subnet_name?: string | null;
    readonly subnet_description?: string | null;
    /**
     * IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
     */
    readonly subnet_cidr?: string | null;
    readonly allowed_address_pairs?: Array<OpenStackAllowedAddressPair>;
    /**
     * ID of device (instance, router etc) to which this port is connected
     */
    readonly device_id?: string | null;
    /**
     * Entity that uses this port (e.g. network:router_interface)
     */
    readonly device_owner?: string | null;
    readonly security_groups?: Array<OpenStackSecurityGroup>;
};

export type OpenStackNestedPortRequest = {
    fixed_ips?: Array<OpenStackFixedIpRequest>;
    /**
     * Subnet to which this port belongs
     */
    subnet?: string | null;
    port?: string;
};

export type OpenStackNestedSecurityGroup = {
    url?: string;
};

export type OpenStackNestedSecurityGroupRequest = {
    url?: string;
};

export type OpenStackNestedServerGroup = {
    readonly url?: string;
    readonly name?: string;
    /**
     * Server group policy determining the rules for scheduling servers in this group
     */
    policy?: PolicyEnum;
    readonly state?: string;
};

export type OpenStackNestedSubNet = {
    readonly uuid?: string;
    name?: string;
    description?: string;
    /**
     * IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
     */
    cidr?: string;
    /**
     * IP address of the gateway for this subnet
     */
    gateway_ip?: string | null;
    readonly allocation_pools?: Array<OpenStackSubNetAllocationPool>;
    /**
     * IP protocol version (4 or 6)
     */
    ip_version?: number;
    /**
     * If True, DHCP service will be enabled on this subnet
     */
    enable_dhcp?: boolean;
};

export type OpenStackNestedSubNetRequest = {
    name: string;
    description?: string;
    /**
     * IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
     */
    cidr?: string;
    /**
     * IP address of the gateway for this subnet
     */
    gateway_ip?: string | null;
    /**
     * IP protocol version (4 or 6)
     */
    ip_version?: number;
    /**
     * If True, DHCP service will be enabled on this subnet
     */
    enable_dhcp?: boolean;
};

export type OpenStackNestedVolume = {
    readonly url?: string;
    readonly uuid?: string;
    readonly name?: string;
    /**
     * Name of the image this volume was created from
     */
    image_name?: string;
    readonly state?: string;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
    /**
     * Size in MiB
     */
    size?: number;
    /**
     * Name of volume as instance device e.g. /dev/vdb.
     */
    device?: string;
    readonly resource_type?: string;
    /**
     * Type of the volume (e.g. SSD, HDD)
     */
    type?: string | null;
    readonly type_name?: string;
    readonly marketplace_resource_uuid?: string | null;
};

export type OpenStackNestedVolumeRequest = {
    /**
     * Name of the image this volume was created from
     */
    image_name?: string;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
    /**
     * Size in MiB
     */
    size: number;
    /**
     * Name of volume as instance device e.g. /dev/vdb.
     */
    device?: string;
    /**
     * Type of the volume (e.g. SSD, HDD)
     */
    type?: string | null;
};

export type OpenStackNetwork = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    /**
     * OpenStack tenant this network belongs to
     */
    readonly tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    /**
     * Defines whether this network is external (public) or internal (private)
     */
    readonly is_external?: boolean;
    /**
     * Network type, such as local, flat, vlan, vxlan, or gre
     */
    readonly type?: string;
    readonly subnets?: Array<OpenStackNestedSubNet>;
    /**
     * The maximum transmission unit (MTU) value to address fragmentation.
     */
    readonly mtu?: number | null;
    readonly rbac_policies?: Array<NetworkRbacPolicy>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackNetworkRequest = {
    name: string;
    description?: string;
};

export type OpenStackPort = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * Port ID in OpenStack
     */
    readonly backend_id?: string | null;
    readonly access_url?: string | null;
    fixed_ips?: Array<OpenStackFixedIp>;
    /**
     * MAC address of the port
     */
    mac_address?: string;
    allowed_address_pairs?: Array<OpenStackAllowedAddressPair>;
    /**
     * OpenStack tenant this port belongs to
     */
    readonly tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    /**
     * Network to which this port belongs
     */
    network?: string | null;
    readonly network_name?: string;
    readonly network_uuid?: string;
    readonly floating_ips?: Array<string>;
    /**
     * ID of device (instance, router etc) to which this port is connected
     */
    readonly device_id?: string | null;
    /**
     * Entity that uses this port (e.g. network:router_interface)
     */
    readonly device_owner?: string | null;
    /**
     * If True, security groups and rules will be applied to this port
     */
    port_security_enabled?: boolean;
    security_groups?: Array<OpenStackPortNestedSecurityGroup>;
    /**
     * Administrative state of the port. If down, port does not forward packets
     */
    readonly admin_state_up?: boolean | null;
    /**
     * Port status in OpenStack (e.g. ACTIVE, DOWN)
     */
    readonly status?: string | null;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackPortIpUpdateRequest = {
    /**
     * The subnet where the new IP address will be allocated
     */
    subnet: string;
    /**
     * The IP address to assign within the subnet
     */
    ip_address: string;
};

export type OpenStackPortNestedSecurityGroup = {
    readonly uuid?: string;
    name?: string;
    readonly url?: string;
};

export type OpenStackPortNestedSecurityGroupRequest = {
    name: string;
};

export type OpenStackPortRequest = {
    name: string;
    description?: string;
    fixed_ips?: Array<OpenStackFixedIpRequest>;
    /**
     * MAC address of the port
     */
    mac_address?: string;
    allowed_address_pairs?: Array<OpenStackAllowedAddressPairRequest>;
    /**
     * Network to which this port belongs
     */
    network?: string | null;
    /**
     * If True, security groups and rules will be applied to this port
     */
    port_security_enabled?: boolean;
    security_groups?: Array<OpenStackPortNestedSecurityGroupRequest>;
};

export type OpenStackRouter = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    error_message?: string;
    error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * Router ID in OpenStack
     */
    backend_id?: string | null;
    readonly access_url?: string | null;
    /**
     * OpenStack tenant this router belongs to
     */
    tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    routes?: Array<OpenStackStaticRoute>;
    readonly fixed_ips?: Array<OpenStackFixedIp>;
    readonly ports?: Array<OpenStackNestedPort>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
    readonly offering_external_ips?: Array<string> | null;
};

export type OpenStackRouterInterfaceRequest = {
    /**
     * The subnet to connect to the router. Either subnet or port must be specified, but not both.
     */
    subnet?: string;
    /**
     * The port to connect to the router. Either subnet or port must be specified, but not both.
     */
    port?: string;
};

export type OpenStackRouterSetRoutes = {
    routes: Array<OpenStackStaticRoute>;
};

export type OpenStackRouterSetRoutesRequest = {
    routes: Array<OpenStackStaticRouteRequest>;
};

export type OpenStackSecurityGroup = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    rules?: Array<OpenStackSecurityGroupRuleCreate>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackSecurityGroupRequest = {
    name: string;
    description?: string;
    rules: Array<OpenStackSecurityGroupRuleCreateRequest>;
};

export type OpenStackSecurityGroupRuleCreate = {
    /**
     * IP protocol version - either 'IPv4' or 'IPv6'
     */
    ethertype?: EthertypeEnum;
    /**
     * Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
     */
    direction?: DirectionEnum;
    /**
     * The network protocol (TCP, UDP, ICMP, or empty for any protocol)
     */
    protocol?: ProtocolEnum | BlankEnum;
    /**
     * Starting port number in the range (1-65535)
     */
    from_port?: number | null;
    /**
     * Ending port number in the range (1-65535)
     */
    to_port?: number | null;
    /**
     * CIDR notation for the source/destination network address range
     */
    cidr?: string | null;
    description?: string;
    readonly remote_group_name?: string;
    readonly remote_group_uuid?: string;
    readonly id?: number;
    /**
     * Remote security group that this rule references, if any
     */
    remote_group?: string | null;
};

export type OpenStackSecurityGroupRuleCreateRequest = {
    /**
     * IP protocol version - either 'IPv4' or 'IPv6'
     */
    ethertype?: EthertypeEnum;
    /**
     * Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
     */
    direction?: DirectionEnum;
    /**
     * The network protocol (TCP, UDP, ICMP, or empty for any protocol)
     */
    protocol?: ProtocolEnum | BlankEnum;
    /**
     * Starting port number in the range (1-65535)
     */
    from_port?: number | null;
    /**
     * Ending port number in the range (1-65535)
     */
    to_port?: number | null;
    /**
     * CIDR notation for the source/destination network address range
     */
    cidr?: string | null;
    description?: string;
    /**
     * Remote security group that this rule references, if any
     */
    remote_group?: string | null;
};

export type OpenStackSecurityGroupRuleUpdateRequest = {
    /**
     * IP protocol version - either 'IPv4' or 'IPv6'
     */
    ethertype?: EthertypeEnum;
    /**
     * Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
     */
    direction?: DirectionEnum;
    /**
     * The network protocol (TCP, UDP, ICMP, or empty for any protocol)
     */
    protocol?: ProtocolEnum | BlankEnum;
    /**
     * Starting port number in the range (1-65535)
     */
    from_port?: number | null;
    /**
     * Ending port number in the range (1-65535)
     */
    to_port?: number | null;
    /**
     * CIDR notation for the source/destination network address range
     */
    cidr?: string | null;
    description?: string;
    /**
     * Remote security group that this rule references, if any
     */
    remote_group?: string | null;
};

export type OpenStackSecurityGroupUpdate = {
    name: string;
    description?: string;
};

export type OpenStackSecurityGroupUpdateRequest = {
    name: string;
    description?: string;
};

export type OpenStackServerGroup = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly tenant?: string;
    readonly tenant_name?: string;
    readonly tenant_uuid?: string;
    /**
     * Server group policy determining the rules for scheduling servers in this group
     */
    policy?: PolicyEnum | BlankEnum;
    readonly display_name?: string;
    readonly instances?: Array<OpenStackNestedInstance>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackServerGroupRequest = {
    name: string;
    description?: string;
    /**
     * Server group policy determining the rules for scheduling servers in this group
     */
    policy?: PolicyEnum | BlankEnum;
};

export type OpenStackSnapshot = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * Snapshot ID in the OpenStack backend
     */
    readonly backend_id?: string | null;
    readonly access_url?: string | null;
    /**
     * Volume from which this snapshot was created
     */
    readonly source_volume?: string | null;
    /**
     * Size in MiB
     */
    readonly size?: number;
    metadata?: unknown;
    readonly runtime_state?: string;
    readonly source_volume_name?: string;
    readonly source_volume_marketplace_uuid?: string;
    readonly action?: string;
    readonly action_details?: unknown;
    readonly restorations?: Array<OpenStackSnapshotRestoration>;
    /**
     * Guaranteed time of snapshot retention. If null - keep forever.
     */
    kept_until?: string | null;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackSnapshotRequest = {
    name: string;
    description?: string;
    metadata?: unknown;
    /**
     * Guaranteed time of snapshot retention. If null - keep forever.
     */
    kept_until?: string | null;
};

export type OpenStackSnapshotRestoration = {
    readonly uuid?: string;
    readonly created?: string;
    /**
     * New volume description.
     */
    description?: string;
    /**
     * Volume that is being restored from the snapshot
     */
    readonly volume?: string;
    readonly volume_name?: string;
    readonly volume_state?: string;
    readonly volume_runtime_state?: string;
    /**
     * Size in MiB
     */
    readonly volume_size?: number;
    /**
     * Name of volume as instance device e.g. /dev/vdb.
     */
    readonly volume_device?: string;
};

export type OpenStackSnapshotRestorationRequest = {
    /**
     * New volume name.
     */
    name: string;
    /**
     * New volume description.
     */
    description?: string;
};

export type OpenStackStaticRoute = {
    destination?: string;
    nexthop?: string;
};

export type OpenStackStaticRouteRequest = {
    destination: string;
    nexthop: string;
};

export type OpenStackSubNet = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly tenant?: string;
    readonly tenant_name?: string;
    /**
     * Network to which this subnet belongs
     */
    readonly network?: string;
    readonly network_name?: string;
    cidr?: string;
    /**
     * IP address of the gateway for this subnet
     */
    gateway_ip?: string | null;
    /**
     * If True, no gateway IP address will be allocated
     */
    disable_gateway?: boolean;
    allocation_pools?: Array<OpenStackSubNetAllocationPool>;
    /**
     * IP protocol version (4 or 6)
     */
    readonly ip_version?: number;
    /**
     * If True, DHCP service will be enabled on this subnet
     */
    readonly enable_dhcp?: boolean;
    dns_nameservers?: Array<string>;
    host_routes?: Array<OpenStackStaticRoute>;
    /**
     * Is subnet connected to the default tenant router.
     */
    readonly is_connected?: boolean;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackSubNetAllocationPool = {
    start?: string;
    end?: string;
};

export type OpenStackSubNetAllocationPoolRequest = {
    start: string;
    end: string;
};

export type OpenStackSubNetRequest = {
    name: string;
    description?: string;
    cidr?: string;
    /**
     * IP address of the gateway for this subnet
     */
    gateway_ip?: string | null;
    /**
     * If True, no gateway IP address will be allocated
     */
    disable_gateway?: boolean;
    allocation_pools?: Array<OpenStackSubNetAllocationPoolRequest>;
    dns_nameservers?: Array<string>;
    host_routes?: Array<OpenStackStaticRouteRequest>;
};

export type OpenStackTenant = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * ID of tenant in the OpenStack backend
     */
    readonly backend_id?: string | null;
    /**
     * Optional availability group. Will be used for all instances provisioned in this tenant
     */
    availability_zone?: string;
    /**
     * ID of internal network in OpenStack tenant
     */
    readonly internal_network_id?: string;
    /**
     * ID of external network connected to OpenStack tenant
     */
    readonly external_network_id?: string;
    readonly quotas?: Array<Quota>;
    /**
     * Volume type name to use when creating volumes.
     */
    default_volume_type_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackTenantChangePasswordRequest = {
    /**
     * New tenant user password.
     */
    user_password: string;
};

export type OpenStackTenantQuota = {
    instances?: number;
    volumes?: number;
    snapshots?: number;
    ram?: number;
    vcpu?: number;
    storage?: number;
    security_group_count?: number;
    security_group_rule_count?: number;
};

export type OpenStackTenantQuotaRequest = {
    instances?: number;
    volumes?: number;
    snapshots?: number;
    ram?: number;
    vcpu?: number;
    storage?: number;
    security_group_count?: number;
    security_group_rule_count?: number;
};

export type OpenStackTenantRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    /**
     * Optional availability group. Will be used for all instances provisioned in this tenant
     */
    availability_zone?: string;
    subnet_cidr?: string;
    /**
     * Volume type name to use when creating volumes.
     */
    default_volume_type_name?: string;
};

export type OpenStackVolume = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    /**
     * Volume ID in the OpenStack backend
     */
    readonly backend_id?: string | null;
    readonly access_url?: string | null;
    /**
     * Snapshot that this volume was created from, if any
     */
    readonly source_snapshot?: string | null;
    /**
     * Size in MiB
     */
    size?: number | null;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
    readonly metadata?: unknown;
    /**
     * Image that this volume was created from, if any
     */
    image?: string | null;
    /**
     * Metadata of the image this volume was created from
     */
    readonly image_metadata?: string;
    /**
     * Name of the image this volume was created from
     */
    readonly image_name?: string;
    /**
     * Type of the volume (e.g. SSD, HDD)
     */
    type?: string | null;
    readonly type_name?: string;
    readonly runtime_state?: string;
    /**
     * Availability zone where this volume is located
     */
    availability_zone?: string | null;
    readonly availability_zone_name?: string;
    /**
     * Name of volume as instance device e.g. /dev/vdb.
     */
    readonly device?: string;
    readonly action?: string;
    readonly action_details?: unknown;
    /**
     * Instance that this volume is attached to, if any
     */
    readonly instance?: string | null;
    readonly instance_name?: string;
    readonly instance_marketplace_uuid?: string;
    tenant?: string;
    readonly tenant_uuid?: string;
    readonly extend_enabled?: boolean;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type OpenStackVolumeAvailabilityZone = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    settings?: string | null;
    available?: boolean;
};

export type OpenStackVolumeExtendRequest = {
    disk_size: number;
};

export type OpenStackVolumeRequest = {
    name: string;
    description?: string;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
};

export type OpenStackVolumeRetypeRequest = {
    type: string;
};

export type OpenStackVolumeType = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    settings: string;
};

export type OptionField = {
    type: OptionFieldTypeEnum;
    label: string;
    help_text?: string;
    required?: boolean;
    choices?: Array<string>;
    default?: string;
    min?: number;
    max?: number;
};

export type OptionFieldRequest = {
    type: OptionFieldTypeEnum;
    label: string;
    help_text?: string;
    required?: boolean;
    choices?: Array<string>;
    default?: string;
    min?: number;
    max?: number;
};

export type OptionFieldTypeEnum = 'boolean' | 'integer' | 'money' | 'string' | 'text' | 'html_text' | 'select_string' | 'select_string_multi' | 'select_openstack_tenant' | 'select_multiple_openstack_tenants' | 'select_openstack_instance' | 'select_multiple_openstack_instances' | 'date' | 'time';

export type OrderCreate = {
    offering: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    readonly offering_description: string;
    readonly offering_image: string;
    readonly offering_thumbnail: string;
    readonly offering_type: string;
    readonly offering_terms_of_service: string;
    /**
     * Accessible to all customers.
     */
    readonly offering_shared: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    readonly offering_billable: boolean;
    /**
     * Public data used by specific plugin, such as storage mode for OpenStack.
     */
    readonly offering_plugin_options: unknown;
    readonly provider_name: string;
    readonly provider_uuid: string;
    readonly category_title: string;
    readonly category_uuid: string;
    readonly category_icon: string;
    plan?: string;
    plan_unit: BillingUnit | null;
    readonly plan_name: string | null;
    readonly plan_uuid: string | null;
    readonly plan_description: string | null;
    attributes?: unknown;
    limits?: {
        [key: string]: number;
    };
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    type?: RequestTypes;
    readonly resource_uuid: string | null;
    readonly resource_type: string | null;
    readonly resource_name: string;
    readonly cost: string | null;
    state: OrderState;
    readonly output: string;
    readonly marketplace_resource_uuid: string;
    readonly error_message: string;
    callback_url?: string | null;
    /**
     * Completion time
     */
    readonly completed_at: string | null;
    readonly url: string;
    readonly created_by: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly created_by_username: string;
    readonly created_by_full_name: string;
    readonly consumer_reviewed_by: string | null;
    readonly consumer_reviewed_at: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly consumer_reviewed_by_username: string | null;
    readonly consumer_reviewed_by_full_name: string | null;
    project: string;
    readonly project_uuid: string;
    readonly project_name: string;
    readonly project_description: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
};

export type OrderCreateRequest = {
    offering: string;
    plan?: string;
    /**
     * Attributes structure depends on the offering type specified in the parent object
     */
    attributes?: AzureVirtualMachineCreateOrderAttributes | AzureSqlServerCreateOrderAttributes | OpenStackTenantCreateOrderAttributes | OpenStackInstanceCreateOrderAttributes | OpenStackVolumeCreateOrderAttributes | MarketplaceRancherCreateOrderAttributes | MarketplaceManagedRancherCreateOrderAttributes | SlurmInvoicesSlurmPackageCreateOrderAttributes | VMwareVirtualMachineCreateOrderAttributes;
    limits?: {
        [key: string]: number;
    };
    type?: RequestTypes;
    accepting_terms_of_service?: boolean;
    callback_url?: string | null;
    project: string;
};

export type OrderDetails = {
    offering?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly offering_description?: string;
    readonly offering_image?: string;
    readonly offering_thumbnail?: string;
    readonly offering_type?: string;
    readonly offering_terms_of_service?: string;
    /**
     * Accessible to all customers.
     */
    readonly offering_shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    readonly offering_billable?: boolean;
    /**
     * Public data used by specific plugin, such as storage mode for OpenStack.
     */
    readonly offering_plugin_options?: unknown;
    readonly provider_name?: string;
    readonly provider_uuid?: string;
    readonly category_title?: string;
    readonly category_uuid?: string;
    readonly category_icon?: string;
    plan?: string;
    plan_unit?: BillingUnit | null;
    readonly plan_name?: string | null;
    readonly plan_uuid?: string | null;
    readonly plan_description?: string | null;
    attributes?: unknown;
    limits?: {
        [key: string]: number;
    };
    readonly uuid?: string;
    readonly created?: string;
    readonly modified?: string;
    type?: RequestTypes;
    readonly resource_uuid?: string | null;
    readonly resource_type?: string | null;
    readonly resource_name?: string;
    readonly cost?: string | null;
    state?: OrderState;
    readonly output?: string;
    readonly marketplace_resource_uuid?: string;
    readonly error_message?: string;
    callback_url?: string | null;
    /**
     * Completion time
     */
    readonly completed_at?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly consumer_reviewed_by?: string | null;
    readonly consumer_reviewed_by_full_name?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly consumer_reviewed_by_username?: string | null;
    readonly consumer_reviewed_at?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly provider_reviewed_by?: string | null;
    readonly provider_reviewed_by_full_name?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly provider_reviewed_by_username?: string | null;
    readonly provider_reviewed_at?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly created_by_username?: string;
    readonly created_by_full_name?: string;
    readonly created_by_civil_number?: string | null;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    readonly customer_slug?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly project_description?: string;
    readonly project_slug?: string;
    readonly old_plan_name?: string | null;
    readonly new_plan_name?: string | null;
    readonly old_plan_uuid?: string | null;
    readonly new_plan_uuid?: string | null;
    readonly old_cost_estimate?: string | null;
    readonly new_cost_estimate?: string | null;
    readonly can_terminate?: boolean;
    readonly fixed_price?: number;
    readonly activation_price?: number;
    readonly termination_comment?: string | null;
    backend_id?: string;
    issue?: IssueReference | null;
};

export type OrderSetStateErredRequest = {
    error_message?: string;
    error_traceback?: string;
};

export type OrderState = 'pending-consumer' | 'pending-provider' | 'pending-project' | 'executing' | 'done' | 'erred' | 'canceled' | 'rejected';

export type OrderUuid = {
    readonly order_uuid: string;
};

export type OrganizationGroup = {
    readonly uuid?: string;
    readonly url?: string;
    name?: string;
    readonly parent_uuid?: string;
    readonly parent_name?: string;
    parent?: string | null;
    readonly customers_count?: number;
};

export type OrganizationGroupRequest = {
    name: string;
    parent?: string | null;
};

export type OrganizationGroupsRequest = {
    organization_groups?: Array<string>;
};

export type PaidRequest = {
    date: string;
    proof?: Blob | File;
};

export type PasswordChangeRequest = {
    new_password: string;
};

export type PatchedAccessSubnetRequest = {
    inet?: string;
    description?: string;
};

export type PatchedAdminAnnouncementRequest = {
    description?: string;
    active_from?: string;
    active_to?: string;
    type?: AdminAnnouncementTypeEnum;
};

export type PatchedAwsInstanceRequest = {
    name?: string;
    description?: string;
};

export type PatchedAzurePublicIpRequest = {
    description?: string;
    location?: string;
    resource_group?: string;
};

export type PatchedAzureSqlDatabaseRequest = {
    description?: string;
    server?: string;
    charset?: string | null;
    collation?: string | null;
};

export type PatchedAzureSqlServerRequest = {
    description?: string;
    location?: string;
    storage_mb?: number | null;
};

export type PatchedAzureVirtualMachineRequest = {
    description?: string;
    location?: string;
};

export type PatchedBroadcastMessageRequest = {
    subject?: string;
    body?: string;
    query?: unknown;
    send_at?: string | null;
};

export type PatchedCallManagingOrganisationRequest = {
    description?: string;
    image?: (Blob | File) | null;
};

export type PatchedCallResourceTemplateRequest = {
    name?: string;
    description?: string;
    attributes?: unknown;
    limits?: unknown;
    /**
     * If True, every proposal must include this resource type
     */
    is_required?: boolean;
    requested_offering?: string;
};

export type PatchedCategoryColumnRequest = {
    /**
     * Index allows to reorder columns.
     */
    index?: number;
    /**
     * Title is rendered as column header.
     */
    title?: string;
    /**
     * Resource attribute is rendered as table cell.
     */
    attribute?: string;
    /**
     * Widget field allows to customise table cell rendering.
     */
    widget?: WidgetEnum | BlankEnum | NullEnum | null;
    category?: string;
};

export type PatchedCategoryComponentsRequest = {
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type?: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name?: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    category?: CategorySerializerForForNestedFieldsRequest;
};

export type PatchedCategoryGroupRequest = {
    title?: string;
    description?: string;
    icon?: (Blob | File) | null;
};

export type PatchedCategoryHelpArticlesRequest = {
    title?: string | null;
    url?: string;
    categories?: Array<CategorySerializerForForNestedFieldsRequest>;
};

export type PatchedChecklistCategoryRequest = {
    icon?: (Blob | File) | null;
    name?: string;
    description?: string;
};

export type PatchedChecklistRequest = {
    name?: string;
    description?: string;
    /**
     * Type of compliance this checklist addresses
     */
    checklist_type?: ChecklistTypeEnum;
    /**
     * Category of the checklist
     */
    category?: string | null;
};

export type PatchedClusterSecurityGroupRequest = {
    rules?: Array<RancherClusterSecurityGroupRuleRequest>;
};

export type PatchedCommentRequest = {
    description?: string;
    is_public?: boolean;
};

export type PatchedComponentUserUsageLimitRequest = {
    resource?: string;
    component?: string;
    user?: string;
    limit?: string;
};

export type PatchedCreateCustomerCreditRequest = {
    value?: string;
    customer?: string;
    offerings?: Array<string | null>;
    end_date?: string | null;
    expected_consumption?: string;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type PatchedCustomerEstimatedCostPolicyRequest = {
    scope?: string;
    actions?: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost?: number;
    period?: PeriodEnum;
};

export type PatchedCustomerRequest = {
    /**
     * Organization identifier in another application.
     */
    backend_id?: string;
    image?: (Blob | File) | null;
    name?: string;
    native_name?: string;
    abbreviation?: string;
    contact_details?: string;
    /**
     * Email address
     */
    email?: string;
    phone_number?: string;
    registration_code?: string;
    homepage?: string;
    /**
     * VAT number
     */
    vat_code?: string;
    postal?: string;
    address?: string;
    bank_name?: string;
    latitude?: number | null;
    longitude?: number | null;
    bank_account?: string;
    country?: CountryEnum | BlankEnum;
};

export type PatchedCustomerServiceAccountRequest = {
    username?: string;
    description?: string;
    error_traceback?: string;
    email?: string;
    preferred_identifier?: string;
    customer?: string;
};

export type PatchedDigitalOceanDropletRequest = {
    name?: string;
    description?: string;
};

export type PatchedEmailHookRequest = {
    is_active?: boolean;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    email?: string;
};

export type PatchedExternalLinkRequest = {
    name?: string;
    description?: string;
    link?: string;
    image?: (Blob | File) | null;
};

export type PatchedFirecrestJobRequest = {
    name?: string;
    description?: string;
    runtime_state?: string;
};

export type PatchedIdentityProviderRequest = {
    provider?: string;
    is_active?: boolean;
    /**
     * ID of application used for OAuth authentication.
     */
    client_id?: string;
    verify_ssl?: boolean;
    enable_post_logout_redirect?: boolean;
    enable_pkce?: boolean;
    /**
     * The endpoint for endpoint discovery.
     */
    discovery_url?: string;
    /**
     * Human-readable identity provider is label.
     */
    label?: string;
    /**
     * The endpoint for user details management.
     */
    management_url?: string;
    protected_fields?: unknown;
    /**
     * Space-separated list of scopes to request during authentication.
     */
    extra_scope?: string | null;
};

export type PatchedInvoiceItemUpdateRequest = {
    article_code?: string;
    quantity?: string;
    unit_price?: string;
    /**
     * Date and time when item usage has started.
     */
    start?: string;
    /**
     * Date and time when item usage has ended.
     */
    end?: string;
};

export type PatchedIssueRequest = {
    summary?: string;
    description?: string;
    assignee?: string | null;
    /**
     * Set true if issue is created by regular user via portal.
     */
    is_reported_manually?: boolean;
};

export type PatchedKeycloakUserGroupMembershipRequest = {
    /**
     * Keycloak user username
     */
    username?: string;
    /**
     * User's email for notifications
     */
    email?: string;
    /**
     * UUID of a cluster or a project in Rancher
     */
    scope_uuid?: string;
    role?: string;
};

export type PatchedLexisLinkRequest = {
    heappe_project_id?: number | null;
};

export type PatchedMaintenanceAnnouncementOfferingRequest = {
    maintenance?: string;
    offering?: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
};

export type PatchedMaintenanceAnnouncementOfferingTemplateRequest = {
    maintenance_template?: string;
    offering?: string;
    /**
     * Expected impact on this offering
     */
    impact_level?: ImpactLevelEnum;
    /**
     * Specific description of how this offering will be affected
     */
    impact_description?: string;
};

export type PatchedMaintenanceAnnouncementRequest = {
    name?: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Optional reference to an external maintenance tracker
     */
    external_reference_url?: string;
    /**
     * When the maintenance is scheduled to begin
     */
    scheduled_start?: string;
    /**
     * When the maintenance is scheduled to complete
     */
    scheduled_end?: string;
    /**
     * Service provider announcing the maintenance
     */
    service_provider?: string;
};

export type PatchedMaintenanceAnnouncementTemplateRequest = {
    name?: string;
    message?: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type?: MaintenanceTypeEnum;
    /**
     * Service provider announcing the maintenance
     */
    service_provider?: string;
};

export type PatchedMarketplaceCategoryRequest = {
    title?: string;
    description?: string;
    icon?: (Blob | File) | null;
    /**
     * Set to "true" if this category is for OpenStack VM. Only one category can have "true" value.
     */
    default_vm_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Volume. Only one category can have "true" value.
     */
    default_volume_category?: boolean;
    /**
     * Set to true if this category is for OpenStack Tenant. Only one category can have "true" value.
     */
    default_tenant_category?: boolean;
    group?: string | null;
};

export type PatchedMessageTemplateRequest = {
    name?: string;
    subject?: string;
    body?: string;
};

export type PatchedMigrationDetailsRequest = {
    mappings?: MappingRequest;
    error_message?: string;
    error_traceback?: string;
};

export type PatchedNotificationRequest = {
    key?: string;
    description?: string;
};

export type PatchedNotificationTemplateDetailSerializersRequest = {
    /**
     * Example: 'flatpages/default.html'
     */
    path?: string;
    name?: string;
};

export type PatchedOfferingEstimatedCostPolicyRequest = {
    scope?: string;
    actions?: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost?: number;
    period?: PeriodEnum;
    organization_groups?: Array<string>;
};

export type PatchedOfferingUsagePolicyRequest = {
    scope?: string;
    actions?: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    organization_groups?: Array<string>;
    component_limits_set?: Array<NestedOfferingComponentLimitRequest>;
    period?: PeriodEnum;
};

export type PatchedOfferingUserRequest = {
    user?: string;
    offering?: string;
    username?: string | null;
    offering_uuid?: string;
    user_uuid?: string;
};

export type PatchedOfferingUserRoleRequest = {
    name?: string;
    offering?: string;
};

export type PatchedOfferingUserServiceProviderCommentRequest = {
    service_provider_comment?: string;
    /**
     * URL link for additional information or actions related to service provider comment
     */
    service_provider_comment_url?: string;
};

export type PatchedOpenStackBackupRequest = {
    name?: string;
    description?: string;
    /**
     * Guaranteed time of backup retention. If null - keep forever.
     */
    kept_until?: string | null;
};

export type PatchedOpenStackInstanceRequest = {
    name?: string;
    description?: string;
    /**
     * Volume type for the system volume
     */
    system_volume_type?: string | null;
    /**
     * Volume type for the data volume
     */
    data_volume_type?: string | null;
    /**
     * Additional data volumes to attach to the instance
     */
    data_volumes?: Array<OpenStackDataVolumeRequest>;
};

export type PatchedOpenStackNetworkRequest = {
    name?: string;
    description?: string;
};

export type PatchedOpenStackPortRequest = {
    name?: string;
    description?: string;
    security_groups?: Array<OpenStackPortNestedSecurityGroupRequest>;
};

export type PatchedOpenStackSecurityGroupUpdateRequest = {
    name?: string;
    description?: string;
};

export type PatchedOpenStackServerGroupRequest = {
    name?: string;
    description?: string;
    /**
     * Server group policy determining the rules for scheduling servers in this group
     */
    policy?: PolicyEnum | BlankEnum;
};

export type PatchedOpenStackSnapshotRequest = {
    name?: string;
    description?: string;
    metadata?: unknown;
    /**
     * Guaranteed time of snapshot retention. If null - keep forever.
     */
    kept_until?: string | null;
};

export type PatchedOpenStackSubNetRequest = {
    name?: string;
    description?: string;
    cidr?: string;
    /**
     * IP address of the gateway for this subnet
     */
    gateway_ip?: string | null;
    /**
     * If True, no gateway IP address will be allocated
     */
    disable_gateway?: boolean;
    allocation_pools?: Array<OpenStackSubNetAllocationPoolRequest>;
    dns_nameservers?: Array<string>;
    host_routes?: Array<OpenStackStaticRouteRequest>;
};

export type PatchedOpenStackTenantRequest = {
    name?: string;
    description?: string;
    /**
     * Optional availability group. Will be used for all instances provisioned in this tenant
     */
    availability_zone?: string;
    /**
     * Volume type name to use when creating volumes.
     */
    default_volume_type_name?: string;
};

export type PatchedOpenStackVolumeRequest = {
    name?: string;
    description?: string;
    /**
     * Indicates if this volume can be used to boot an instance
     */
    bootable?: boolean;
};

export type PatchedOrganizationGroupRequest = {
    name?: string;
    parent?: string | null;
};

export type PatchedPaymentProfileRequest = {
    name?: string;
    organization?: string;
    attributes?: PaymentProfileAttributesRequest;
    payment_type?: PaymentTypeEnum;
    is_active?: boolean | null;
};

export type PatchedPaymentRequest = {
    profile?: string;
    date_of_payment?: string;
    sum?: string;
    proof?: (Blob | File) | null;
};

export type PatchedProjectCreditRequest = {
    value?: string;
    project?: string;
    end_date?: string | null;
    expected_consumption?: string;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type PatchedProjectEstimatedCostPolicyRequest = {
    scope?: string;
    actions?: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost?: number;
    period?: PeriodEnum;
};

export type PatchedProjectRequest = {
    name?: string;
    /**
     * Organization
     */
    customer?: string;
    description?: string;
    /**
     * Project type
     */
    type?: string | null;
    backend_id?: string;
    start_date?: string | null;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    end_date?: string | null;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
    is_industry?: boolean;
    image?: (Blob | File) | null;
};

export type PatchedProjectServiceAccountRequest = {
    username?: string;
    description?: string;
    error_traceback?: string;
    email?: string;
    preferred_identifier?: string;
    project?: string;
};

export type PatchedProposalProjectRoleMappingRequest = {
    call?: string;
    proposal_role?: string;
    project_role?: string | null;
};

export type PatchedProposalReviewRequest = {
    summary_score?: number;
    summary_public_comment?: string;
    summary_private_comment?: string;
    comment_project_title?: string | null;
    comment_project_summary?: string | null;
    comment_project_is_confidential?: string | null;
    comment_project_has_civilian_purpose?: string | null;
    comment_project_description?: string | null;
    comment_project_duration?: string | null;
    comment_project_supporting_documentation?: string | null;
    comment_resource_requests?: string | null;
    comment_team?: string | null;
};

export type PatchedProtectedCallRequest = {
    name?: string;
    description?: string;
    fixed_duration_in_days?: number | null;
    backend_id?: string;
    external_url?: string | null;
    /**
     * Whether proposal submitters can see reviewer identities
     */
    reviewer_identity_visible_to_submitters?: boolean;
    /**
     * Whether proposal submitters can see review comments and scores
     */
    reviews_visible_to_submitters?: boolean;
    created_by?: string | null;
    reference_code?: string;
    /**
     * Compliance checklist that proposals must complete before submission
     */
    compliance_checklist?: string | null;
};

export type PatchedProtectedRoundRequest = {
    start_time?: string;
    cutoff_time?: string;
    review_strategy?: ReviewStrategyEnum;
    deciding_entity?: DecidingEntityEnum;
    allocation_time?: AllocationTimeEnum;
    allocation_date?: string | null;
    minimal_average_scoring?: string | null;
    review_duration_in_days?: number;
    minimum_number_of_reviewers?: number | null;
};

export type PatchedProviderPlanDetailsRequest = {
    name?: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    backend_id?: string;
};

export type PatchedQuestionAdminRequest = {
    description?: string;
    /**
     * Additional guidance text visible to users when answering and reviewing
     */
    user_guidance?: string;
    checklist?: string;
    order?: number;
    required?: boolean;
    /**
     * Type of question and expected answer format
     */
    question_type?: QuestionTypeEnum;
    operator?: ChecklistOperators | BlankEnum;
    /**
     * Answer value that trigger review.
     */
    review_answer_value?: unknown;
    /**
     * This question always requires review regardless of answer
     */
    always_requires_review?: boolean;
    /**
     * Answer value that triggers display of user guidance.
     */
    guidance_answer_value?: unknown;
    /**
     * Operator to use when comparing answer with guidance_answer_value
     */
    guidance_operator?: ChecklistOperators | BlankEnum;
    /**
     * Show user guidance always, regardless of answer. If False, guidance is conditional on answer matching guidance_answer_value with guidance_operator
     */
    always_show_guidance?: boolean;
    /**
     * Minimum value allowed for NUMBER type questions
     */
    min_value?: string | null;
    /**
     * Maximum value allowed for NUMBER type questions
     */
    max_value?: string | null;
};

export type PatchedQuestionDependencyRequest = {
    question?: string;
    depends_on_question?: string;
    /**
     * The answer value(s) that make this question visible
     */
    required_answer_value?: unknown;
    operator?: ChecklistOperators;
};

export type PatchedQuestionOptionsAdminRequest = {
    label?: string;
    order?: number;
};

export type PatchedRancherApplicationRequest = {
    name?: string;
    description?: string;
    service_settings?: string;
    project?: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    template?: string;
    rancher_project?: string;
    namespace?: string;
    namespace_name?: string;
    version?: string;
    answers?: {
        [key: string]: unknown;
    };
};

export type PatchedRancherCatalogRequest = {
    name?: string;
    description?: string;
    catalog_url?: string;
    branch?: string;
    scope?: string;
};

export type PatchedRancherClusterRequest = {
    name?: string;
    description?: string;
    vm_project?: string | null;
    ssh_public_key?: string;
    /**
     * Longhorn is a distributed block storage deployed on top of Kubernetes cluster
     */
    install_longhorn?: boolean;
};

export type PatchedRancherHpaRequest = {
    name?: string;
    description?: string;
    workload?: string | null;
    min_replicas?: number;
    max_replicas?: number;
    metrics?: unknown;
};

export type PatchedRancherIngressRequest = {
    name?: string;
    description?: string;
    service_settings?: string;
    project?: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    rancher_project?: string;
    namespace?: string;
    rules?: unknown;
};

export type PatchedRancherServiceRequest = {
    name?: string;
    description?: string;
    service_settings?: string;
    project?: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    namespace?: string;
    cluster_ip?: string | null;
    selector?: unknown;
    target_workloads?: Array<RancherNestedWorkloadRequest>;
};

export type PatchedRancherWorkloadRequest = {
    name?: string;
    runtime_state?: string;
    cluster?: string | null;
    project?: string | null;
    namespace?: string | null;
    scale?: number;
};

export type PatchedRemoteSynchronisationRequest = {
    api_url?: string;
    token?: string;
    remote_organization_name?: string;
    local_service_provider?: string;
    is_active?: boolean;
    remotelocalcategory_set?: Array<NestedRemoteLocalCategoryRequest>;
};

export type PatchedRequestedOfferingRequest = {
    attributes?: unknown;
    plan?: string | null;
    description?: string;
};

export type PatchedRequestedResourceRequest = {
    attributes?: unknown;
    limits?: unknown;
    description?: string;
    requested_offering_uuid?: string;
    call_resource_template_uuid?: string;
};

export type PatchedResourceUpdateRequest = {
    name?: string;
    description?: string;
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
};

export type PatchedRobotAccountRequest = {
    username?: string;
    description?: string;
    resource?: string;
    /**
     * Type of the robot account.
     */
    type?: string;
    /**
     * Users who have access to this robot account.
     */
    users?: Array<string>;
    keys?: unknown;
    responsible_user?: string | null;
};

export type PatchedRoleDetailsRequest = {
    name?: string;
    description?: string;
    /**
     * Description [en]
     */
    description_en?: string | null;
    /**
     * Description [et]
     */
    description_et?: string | null;
    /**
     * Description [lt]
     */
    description_lt?: string | null;
    /**
     * Description [lv]
     */
    description_lv?: string | null;
    /**
     * Description [ru]
     */
    description_ru?: string | null;
    /**
     * Description [it]
     */
    description_it?: string | null;
    /**
     * Description [de]
     */
    description_de?: string | null;
    /**
     * Description [da]
     */
    description_da?: string | null;
    /**
     * Description [sv]
     */
    description_sv?: string | null;
    /**
     * Description [es]
     */
    description_es?: string | null;
    /**
     * Description [fr]
     */
    description_fr?: string | null;
    /**
     * Description [nb]
     */
    description_nb?: string | null;
    /**
     * Description [ar]
     */
    description_ar?: string | null;
    /**
     * Description [cs]
     */
    description_cs?: string | null;
    is_active?: boolean;
};

export type PatchedRuleRequest = {
    name?: string;
    user_affiliations?: Array<string>;
    user_email_patterns?: Array<string>;
    customer?: string;
    project_role?: string | null;
    project_role_name?: string | null;
    plan?: string | null;
    plan_attributes?: {
        [key: string]: unknown;
    };
    plan_limits?: {
        [key: string]: unknown;
    };
};

export type PatchedScreenshotRequest = {
    name?: string;
    description?: string;
};

export type PatchedSectionRequest = {
    key?: string;
    title?: string;
    category?: string;
    /**
     * Whether section is rendered as a separate tab.
     */
    is_standalone?: boolean;
};

export type PatchedServiceProviderRequest = {
    description?: string;
    image?: (Blob | File) | null;
};

export type PatchedSlurmAllocationRequest = {
    name?: string;
    description?: string;
};

export type PatchedTemplateRequest = {
    name?: string;
    description?: string;
    issue_type?: IssueTypeEnum;
};

export type PatchedUserAgreementRequest = {
    content?: string;
    agreement_type?: AgreementTypeEnum;
};

export type PatchedUserRequest = {
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username?: string;
    native_name?: string;
    job_title?: string;
    phone_number?: string;
    organization?: string;
    description?: string;
    /**
     * Staff status
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Support status
     * Designates whether the user is a global support user.
     */
    is_support?: boolean;
    /**
     * Token lifetime in seconds.
     */
    token_lifetime?: number | null;
    /**
     * User must agree with the policy to register.
     */
    agree_with_policy?: boolean;
    /**
     * Designates whether the user is allowed to receive email notifications.
     */
    notifications_enabled?: boolean;
    preferred_language?: string;
    first_name?: string;
    last_name?: string;
    image?: (Blob | File) | null;
};

export type PatchedVmwareVirtualMachineRequest = {
    description?: string;
    /**
     * Number of cores in a VM
     */
    cores?: number;
    /**
     * Number of cores per socket in a VM
     */
    cores_per_socket?: number;
    /**
     * Memory size in MiB
     */
    ram?: number;
};

export type PatchedWebHookRequest = {
    is_active?: boolean;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    destination_url?: string;
    content_type?: WebHookContentTypeEnum;
};

export type Payment = {
    readonly uuid: string;
    readonly url: string;
    profile: string;
    date_of_payment: string;
    sum?: string;
    proof?: string | null;
    readonly invoice: string;
    readonly invoice_uuid: string;
    readonly invoice_period: string | null;
    readonly customer_uuid: string;
};

export type PaymentProfile = {
    readonly uuid?: string;
    readonly url?: string;
    name?: string;
    readonly organization_uuid?: string;
    organization?: string;
    attributes?: PaymentProfileAttributes;
    payment_type?: PaymentTypeEnum;
    readonly payment_type_display?: string;
    is_active?: boolean | null;
};

export type PaymentProfileAttributes = {
    end_date?: string;
    agreement_number?: string;
    contract_sum?: number;
};

export type PaymentProfileAttributesRequest = {
    end_date?: string;
    agreement_number?: string;
    contract_sum?: number;
};

export type PaymentProfileRequest = {
    name: string;
    organization: string;
    attributes?: PaymentProfileAttributesRequest;
    payment_type: PaymentTypeEnum;
    is_active?: boolean | null;
};

export type PaymentRequest = {
    profile: string;
    date_of_payment: string;
    sum?: string;
    proof?: (Blob | File) | null;
};

export type PaymentTypeEnum = 'fixed_price' | 'invoices' | 'payment_gw_monthly';

export type PaymentUrlRequest = {
    /**
     * URL for initiating payment via payment gateway.
     */
    payment_url?: string;
};

export type PeriodEnum = 1 | 2 | 3 | 4;

export type Permission = {
    readonly user_uuid?: string;
    readonly user_name?: string;
    readonly user_slug?: string;
    readonly created?: string;
    expiration_time?: string | null;
    readonly created_by_full_name?: string;
    readonly created_by_username?: string;
    readonly role_name?: string;
    readonly role_description?: string;
    readonly role_uuid?: string;
    readonly scope_type?: string | null;
    readonly scope_uuid?: string;
    readonly scope_name?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
};

export type PermissionRequest = {
    readonly url: string;
    readonly uuid: string;
    invitation: string;
    readonly state: string;
    readonly created: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly reviewed_by_full_name: string;
    readonly reviewed_by_username: string;
    /**
     * Timestamp when the review was completed
     */
    readonly reviewed_at: string | null;
    /**
     * Optional comment provided during review
     */
    review_comment?: string | null;
    readonly scope_uuid: string;
    readonly scope_name: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly role_name: string;
    readonly role_description: string;
};

export type PlanComponent = {
    readonly offering_name: string;
    readonly plan_name: string;
    plan_unit: BillingUnit;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    readonly component_name: string;
    /**
     * Unit of measurement, for example, GB.
     */
    readonly measured_unit: string;
    billing_type: BillingTypeEnum;
    amount?: number;
    /**
     * Price per unit per billing period.
     */
    price?: string;
    /**
     * Price per unit for future month.
     */
    future_price?: string | null;
};

export type PlanUsageResponse = {
    readonly plan_uuid: string;
    readonly plan_name: string;
    readonly limit: number;
    readonly usage: number;
    readonly remaining: number;
    readonly offering_uuid: string;
    readonly offering_name: string;
    readonly customer_provider_uuid: string;
    readonly customer_provider_name: string;
};

export type PluginComponent = {
    type: string;
    name: string;
    measured_unit: string;
    billing_type: BillingTypeEnum;
};

export type PluginOfferingType = {
    offering_type: string;
    components: Array<PluginComponent>;
    available_limits: Array<string>;
};

export type PolicyEnum = 'affinity';

export type PolicyTypeEnum = 'access_as_shared' | 'access_as_external';

export type PricesUpdateRequest = {
    prices: {
        [key: string]: string;
    };
};

export type Priority = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    icon_url?: string;
};

export type Project = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    readonly slug?: string;
    /**
     * Organization
     */
    customer?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    readonly customer_slug?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    description?: string;
    readonly created?: string;
    /**
     * Project type
     */
    type?: string | null;
    readonly type_name?: string | null;
    readonly type_uuid?: string | null;
    backend_id?: string;
    start_date?: string | null;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    end_date?: string | null;
    readonly end_date_requested_by?: string | null;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
    readonly oecd_fos_2007_label?: string;
    is_industry?: boolean;
    image?: string | null;
    readonly resources_count?: number;
    /**
     * Maximum number of service accounts allowed
     */
    readonly max_service_accounts?: number | null;
    readonly project_credit?: number | null;
    readonly marketplace_resource_count?: {
        [key: string]: number;
    };
    billing_price_estimate?: NestedPriceEstimate;
};

export type ProjectCredit = {
    readonly uuid: string;
    readonly url: string;
    value?: string;
    project: string;
    readonly project_name: string;
    readonly project_uuid: string;
    readonly project_slug: string;
    readonly customer_name: string;
    readonly customer_slug: string;
    readonly customer_uuid: string;
    readonly customer_credit: string;
    readonly allocated_customer_credit: number;
    readonly consumption_last_month: number;
    readonly offerings: Array<NestedPublicOffering>;
    end_date?: string | null;
    expected_consumption?: string;
    readonly minimal_consumption: number;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type ProjectCreditRequest = {
    value?: string;
    project: string;
    end_date?: string | null;
    expected_consumption?: string;
    minimal_consumption_logic?: MinimalConsumptionLogicEnum;
    grace_coefficient?: string;
    apply_as_minimal_consumption?: boolean;
};

export type ProjectEstimatedCostPolicy = {
    readonly uuid: string;
    readonly url: string;
    scope: string;
    readonly scope_name: string;
    readonly scope_uuid: string;
    actions: string;
    readonly created: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    readonly has_fired: boolean;
    readonly fired_datetime: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
    readonly period_name: string;
    readonly project_credit: number | null;
    readonly customer_credit: number | null;
    billing_price_estimate: NestedPriceEstimate;
};

export type ProjectEstimatedCostPolicyRequest = {
    scope: string;
    actions: string;
    /**
     * Fields for saving actions extra data. Keys are name of actions.
     */
    options?: unknown;
    limit_cost: number;
    period?: PeriodEnum;
};

export type ProjectPermissionLog = {
    readonly created?: string;
    expiration_time?: string | null;
    readonly created_by?: string | null;
    readonly created_by_full_name?: string | null;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly created_by_username?: string | null;
    readonly project?: string;
    readonly project_uuid?: string;
    readonly project_name?: string;
    readonly project_created?: string;
    readonly project_end_date?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    readonly role?: string;
    readonly role_name?: string;
    user?: string;
    readonly user_full_name?: string;
    readonly user_native_name?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username?: string;
    readonly user_uuid?: string;
    /**
     * Email address
     */
    readonly user_email?: string;
};

export type ProjectQuotas = {
    readonly project_name: string;
    readonly customer_name: string;
    readonly customer_abbreviation: string;
    readonly value: number;
};

export type ProjectRequest = {
    name: string;
    /**
     * Organization
     */
    customer: string;
    description?: string;
    /**
     * Project type
     */
    type?: string | null;
    backend_id?: string;
    start_date?: string | null;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    end_date?: string | null;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
    is_industry?: boolean;
    image?: (Blob | File) | null;
};

export type ProjectServiceAccount = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    username?: string;
    description?: string;
    readonly error_message: string;
    error_traceback?: string;
    readonly token: string | null;
    email?: string;
    readonly expires_at: string | null;
    preferred_identifier?: string;
    project: string;
    readonly project_uuid: string;
    readonly project_name: string;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly customer_abbreviation: string;
};

export type ProjectServiceAccountRequest = {
    username?: string;
    description?: string;
    error_traceback?: string;
    email?: string;
    preferred_identifier?: string;
    project: string;
};

export type ProjectType = {
    readonly uuid: string;
    readonly url: string;
    name: string;
    description?: string;
};

export type ProjectUser = {
    readonly url: string;
    readonly uuid: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username: string;
    readonly full_name: string;
    /**
     * Email address
     */
    email?: string;
    readonly role: string;
    readonly expiration_time: string | null;
    readonly offering_user_username: string | null;
};

export type ProjectsLimitsGroupedByIndustryFlag = {
    limits: {
        [key: string]: {
            [key: string]: string;
        };
    };
};

export type ProjectsLimitsGroupedByOecd = {
    limits: {
        [key: string]: {
            [key: string]: string;
        };
    };
};

export type ProjectsUsagesGroupedByIndustryFlag = {
    usages: {
        [key: string]: {
            [key: string]: string;
        };
    };
};

export type ProjectsUsagesGroupedByOecd = {
    usages: {
        [key: string]: {
            [key: string]: string;
        };
    };
};

export type Proposal = {
    readonly uuid: string;
    readonly url: string;
    name: string;
    description?: string;
    readonly project_name: string;
    project_summary?: string;
    project_is_confidential?: boolean;
    project_has_civilian_purpose?: boolean;
    readonly supporting_documentation: Array<ProposalDocumentation>;
    state: ProposalStates;
    readonly approved_by: string | null;
    readonly created_by: string | null;
    readonly created_by_name: string;
    readonly created_by_uuid: string;
    /**
     * Duration in days after provisioning of resources.
     */
    duration_in_days?: number | null;
    readonly project: string | null;
    round: NestedRound;
    readonly call_uuid: string;
    readonly call_name: string;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
    readonly oecd_fos_2007_label: string;
    readonly allocation_comment: string | null;
    readonly created: string;
    readonly compliance_status: {
        [key: string]: unknown;
    } | null;
    readonly can_submit: {
        [key: string]: unknown;
    };
};

export type ProposalApproveRequest = {
    allocation_comment?: string;
};

export type ProposalDocumentation = {
    /**
     * Upload supporting documentation in PDF format.
     */
    file?: string | null;
    readonly file_name: string;
    readonly file_size: number;
    readonly created: string;
};

export type ProposalDocumentationRequest = {
    /**
     * Upload supporting documentation in PDF format.
     */
    file?: (Blob | File) | null;
};

export type ProposalProjectRoleMapping = {
    readonly url: string;
    readonly uuid: string;
    call: string;
    readonly call_uuid: string;
    readonly call_name: string;
    proposal_role: string;
    project_role?: string | null;
};

export type ProposalProjectRoleMappingRequest = {
    call: string;
    proposal_role: string;
    project_role?: string | null;
};

export type ProposalRequest = {
    name: string;
    description?: string;
    project_summary?: string;
    project_is_confidential?: boolean;
    project_has_civilian_purpose?: boolean;
    /**
     * Duration in days after provisioning of resources.
     */
    duration_in_days?: number | null;
    round_uuid: string;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
};

export type ProposalReview = {
    readonly url: string;
    readonly uuid: string;
    proposal: string;
    readonly proposal_name: string;
    readonly proposal_uuid: string;
    reviewer: string;
    readonly reviewer_full_name: string;
    readonly reviewer_uuid: string;
    /**
     * Generate an anonymous reviewer identifier like 'Reviewer 1', 'Reviewer 2'.
     * Returns None if the review is not associated with a proposal.
     */
    readonly anonymous_reviewer_name: string | null;
    state: ProposalReviewStateEnum;
    readonly review_end_date: string;
    summary_score?: number;
    summary_public_comment?: string;
    summary_private_comment?: string;
    readonly round_uuid: string;
    readonly round_name: string;
    readonly round_cutoff_time: string;
    readonly round_start_time: string;
    readonly call_name: string;
    readonly call_uuid: string;
    comment_project_title?: string | null;
    comment_project_summary?: string | null;
    comment_project_is_confidential?: string | null;
    comment_project_has_civilian_purpose?: string | null;
    comment_project_description?: string | null;
    comment_project_duration?: string | null;
    comment_project_supporting_documentation?: string | null;
    comment_resource_requests?: string | null;
    comment_team?: string | null;
};

export type ProposalReviewRequest = {
    proposal: string;
    reviewer: string;
    summary_score?: number;
    summary_public_comment?: string;
    summary_private_comment?: string;
    comment_project_title?: string | null;
    comment_project_summary?: string | null;
    comment_project_is_confidential?: string | null;
    comment_project_has_civilian_purpose?: string | null;
    comment_project_description?: string | null;
    comment_project_duration?: string | null;
    comment_project_supporting_documentation?: string | null;
    comment_resource_requests?: string | null;
    comment_team?: string | null;
};

export type ProposalReviewStateEnum = 'created' | 'in_review' | 'submitted' | 'rejected';

export type ProposalStates = 'draft' | 'submitted' | 'in_review' | 'accepted' | 'rejected' | 'canceled';

export type ProposalUpdateProjectDetailsRequest = {
    name: string;
    description?: string;
    project_summary?: string;
    project_is_confidential?: boolean;
    project_has_civilian_purpose?: boolean;
    /**
     * Duration in days after provisioning of resources.
     */
    duration_in_days?: number | null;
    oecd_fos_2007_code?: OecdFos2007CodeEnum | BlankEnum | NullEnum | null;
};

export type ProtectedCall = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    readonly start_date?: string;
    readonly end_date?: string;
    readonly slug?: string;
    name?: string;
    description?: string;
    state?: CallStates;
    manager?: string;
    readonly manager_uuid?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    readonly offerings?: Array<NestedRequestedOffering>;
    readonly rounds?: Array<NestedRound>;
    readonly documents?: Array<CallDocument>;
    readonly resource_templates?: Array<CallResourceTemplate>;
    fixed_duration_in_days?: number | null;
    backend_id?: string;
    external_url?: string | null;
    /**
     * Whether proposal submitters can see reviewer identities
     */
    reviewer_identity_visible_to_submitters?: boolean;
    /**
     * Whether proposal submitters can see review comments and scores
     */
    reviews_visible_to_submitters?: boolean;
    created_by?: string | null;
    reference_code?: string;
    /**
     * Compliance checklist that proposals must complete before submission
     */
    compliance_checklist?: string | null;
    readonly compliance_checklist_name?: string;
};

export type ProtectedCallRequest = {
    name: string;
    description?: string;
    manager: string;
    fixed_duration_in_days?: number | null;
    backend_id?: string;
    external_url?: string | null;
    /**
     * Whether proposal submitters can see reviewer identities
     */
    reviewer_identity_visible_to_submitters?: boolean;
    /**
     * Whether proposal submitters can see review comments and scores
     */
    reviews_visible_to_submitters?: boolean;
    created_by?: string | null;
    reference_code?: string;
    /**
     * Compliance checklist that proposals must complete before submission
     */
    compliance_checklist?: string | null;
};

export type ProtectedProposalList = {
    readonly uuid: string;
    name: string;
    state: ProposalStates;
    /**
     * Return serialized reviews based on user permissions and visibility settings.
     * - Staff, call managers, and reviewers see all reviews.
     * - Submitters see submitted reviews if visibility is enabled.
     */
    readonly reviews: Array<unknown>;
    readonly approved_by_name: string;
    readonly created_by_name: string;
    readonly created: string;
};

export type ProtectedProposalListRequest = {
    name: string;
};

export type ProtectedRound = {
    readonly uuid: string;
    readonly name: string;
    start_time: string;
    cutoff_time: string;
    status: StatusEnum;
    review_strategy?: ReviewStrategyEnum;
    deciding_entity?: DecidingEntityEnum;
    allocation_time?: AllocationTimeEnum;
    allocation_date?: string | null;
    minimal_average_scoring?: string | null;
    review_duration_in_days?: number;
    minimum_number_of_reviewers?: number | null;
    readonly url: string;
    readonly proposals: Array<ProtectedProposalList>;
};

export type ProtectedRoundRequest = {
    start_time: string;
    cutoff_time: string;
    review_strategy?: ReviewStrategyEnum;
    deciding_entity?: DecidingEntityEnum;
    allocation_time?: AllocationTimeEnum;
    allocation_date?: string | null;
    minimal_average_scoring?: string | null;
    review_duration_in_days?: number;
    minimum_number_of_reviewers?: number | null;
};

export type ProtocolEnum = 'tcp' | 'udp' | 'icmp';

export type ProviderOffering = {
    readonly uuid?: string;
    readonly customer_uuid?: string;
    name?: string;
    readonly slug?: string;
    readonly category_title?: string;
    type?: string;
    state?: OfferingState;
    readonly resources_count?: number;
    billing_price_estimate?: NestedPriceEstimate;
    components?: Array<OfferingComponent>;
    plans?: Array<BaseProviderPlan>;
    /**
     * Fields describing resource provision form.
     */
    options?: unknown;
    /**
     * Fields describing resource report form.
     */
    resource_options?: unknown;
    secret_options?: MergedSecretOptions;
};

export type ProviderOfferingCosts = {
    readonly period: string;
    readonly price: number;
    readonly tax: number;
    readonly total: number;
};

export type ProviderOfferingCustomer = {
    readonly uuid: string;
    name: string;
    slug: string;
    abbreviation?: string;
    phone_number?: string;
    /**
     * Email address
     */
    email?: string;
};

export type ProviderOfferingDetails = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    name?: string;
    readonly slug?: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    readonly endpoints?: Array<NestedEndpoint>;
    readonly roles?: Array<NestedRole>;
    customer?: string | null;
    readonly customer_uuid?: string | null;
    readonly customer_name?: string | null;
    readonly project?: string | null;
    readonly project_uuid?: string | null;
    readonly project_name?: string | null;
    category?: string;
    readonly category_uuid?: string;
    readonly category_title?: string;
    readonly attributes?: {
        [key: string]: unknown;
    };
    options?: OfferingOptions;
    resource_options?: OfferingOptions;
    readonly components?: Array<OfferingComponent>;
    plugin_options?: MergedPluginOptions;
    secret_options?: MergedSecretOptions;
    readonly service_attributes?: {
        [key: string]: unknown;
    };
    state?: OfferingState;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: string | null;
    readonly order_count?: number;
    readonly plans?: Array<BaseProviderPlan>;
    readonly screenshots?: Array<NestedScreenshot>;
    type?: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    readonly scope?: string;
    readonly scope_uuid?: string | null;
    readonly scope_name?: string | null;
    scope_state?: CoreStates | null;
    readonly scope_error_message?: string | null;
    readonly files?: Array<NestedOfferingFile>;
    readonly quotas?: Array<Quota>;
    readonly paused_reason?: string;
    datacite_doi?: string;
    /**
     * Number of citations of a DOI
     */
    readonly citation_count?: number;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    readonly organization_groups?: Array<OrganizationGroup>;
    image?: string | null;
    readonly total_customers?: number | null;
    readonly total_cost?: number | null;
    readonly total_cost_estimated?: number | null;
    readonly parent_description?: string | null;
    readonly parent_uuid?: string | null;
    readonly parent_name?: string | null;
    backend_metadata?: unknown;
    readonly has_compliance_requirements?: boolean;
    readonly integration_status?: Array<IntegrationStatus> | null;
    readonly google_calendar_is_public?: boolean | null;
    /**
     * Get the Google Calendar link for an offering.
     */
    readonly google_calendar_link?: string | null;
};

export type ProviderOfferingDetailsRequest = {
    name: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    customer?: string | null;
    category: string;
    attributes?: unknown;
    components?: Array<OfferingComponentRequest>;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: (Blob | File) | null;
    plans?: Array<BaseProviderPlanRequest>;
    type: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    datacite_doi?: string;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    image?: (Blob | File) | null;
    backend_metadata?: unknown;
};

export type ProviderPlanDetails = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    readonly is_active: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    readonly init_price: number;
    readonly switch_price: number;
    backend_id?: string;
    readonly organization_groups: Array<OrganizationGroup>;
    offering: string;
    readonly prices: {
        [key: string]: number;
    };
    readonly future_prices: {
        [key: string]: number;
    };
    readonly quotas: {
        [key: string]: number;
    };
    readonly resources_count: number;
    readonly plan_type: string;
    readonly minimal_price: number;
};

export type ProviderPlanDetailsRequest = {
    name: string;
    description?: string;
    article_code?: string;
    /**
     * Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
     */
    max_amount?: number | null;
    /**
     * Forbids creation of new resources.
     */
    archived?: boolean;
    unit_price?: string;
    unit?: BillingUnit;
    backend_id?: string;
    offering: string;
};

export type ProviderProject = {
    readonly uuid?: string;
    name?: string;
    image?: string | null;
};

export type ProviderRequestedOffering = {
    readonly uuid: string;
    state: RequestedOfferingStates;
    offering: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    readonly provider_name: string;
    readonly category_uuid: string;
    readonly category_name: string;
    readonly call_managing_organisation: string;
    attributes?: unknown;
    readonly plan: string | null;
    plan_details: BasePublicPlan;
    options: OfferingOptions;
    readonly components: Array<OfferingComponent>;
    readonly created: string;
    readonly url: string;
    readonly call_name: string;
    call: string;
    readonly description: string;
    readonly created_by_name: string;
    /**
     * Email address
     */
    readonly created_by_email: string;
};

export type ProviderRequestedResource = {
    readonly uuid: string;
    readonly url: string;
    requested_offering: NestedRequestedOffering;
    resource?: string | null;
    readonly resource_name: string;
    readonly call_resource_template: string;
    readonly call_resource_template_name: string;
    attributes?: unknown;
    limits?: unknown;
    description?: string;
    created_by?: string | null;
    readonly created_by_name: string;
    readonly proposal_name: string;
    proposal: string;
};

export type ProviderUser = {
    readonly uuid?: string;
    readonly full_name?: string;
    /**
     * Email address
     */
    email?: string;
    image?: string | null;
};

export type PublicCall = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    readonly start_date?: string;
    readonly end_date?: string;
    readonly slug?: string;
    name?: string;
    description?: string;
    state?: CallStates;
    manager?: string;
    readonly manager_uuid?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    readonly offerings?: Array<NestedRequestedOffering>;
    readonly rounds?: Array<NestedRound>;
    readonly documents?: Array<CallDocument>;
    readonly resource_templates?: Array<CallResourceTemplate>;
    /**
     * Fixed duration in days that applies to all proposals in this call
     */
    readonly fixed_duration_in_days?: number | null;
    backend_id?: string;
    external_url?: string | null;
    /**
     * Whether proposal submitters can see reviewer identities. If False, reviewers appear as 'Reviewer 1', 'Reviewer 2', etc.
     */
    reviewer_identity_visible_to_submitters?: boolean;
    /**
     * Whether proposal submitters can see review comments and scores. If False, submitters only see final approval/rejection status.
     */
    reviews_visible_to_submitters?: boolean;
};

export type PublicMaintenanceAnnouncement = {
    readonly url: string;
    readonly uuid: string;
    readonly name: string;
    readonly message: string;
    /**
     * Type of maintenance being performed
     */
    maintenance_type: MaintenanceTypeEnum;
    readonly maintenance_type_display: string;
    /**
     * Optional reference to an external maintenance tracker
     */
    readonly external_reference_url: string;
    state: PublicMaintenanceAnnouncementStateEnum;
    /**
     * When the maintenance is scheduled to begin
     */
    readonly scheduled_start: string;
    /**
     * When the maintenance is scheduled to complete
     */
    readonly scheduled_end: string;
    /**
     * When the maintenance actually began
     */
    readonly actual_start: string | null;
    /**
     * When the maintenance actually completed
     */
    readonly actual_end: string | null;
    readonly affected_offerings: Array<MaintenanceAnnouncementOffering>;
    readonly service_provider_name: string;
};

export type PublicMaintenanceAnnouncementStateEnum = 'Scheduled' | 'In progress' | 'Completed';

export type PublicOfferingDetails = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    name?: string;
    readonly slug?: string;
    description?: string;
    full_description?: string;
    terms_of_service?: string;
    terms_of_service_link?: string;
    privacy_policy_link?: string;
    /**
     * Publicly accessible offering access URL
     */
    access_url?: string;
    readonly endpoints?: Array<NestedEndpoint>;
    readonly roles?: Array<NestedRole>;
    customer?: string | null;
    readonly customer_uuid?: string | null;
    readonly customer_name?: string | null;
    readonly project?: string | null;
    readonly project_uuid?: string | null;
    readonly project_name?: string | null;
    category?: string;
    readonly category_uuid?: string;
    readonly category_title?: string;
    readonly attributes?: {
        [key: string]: unknown;
    };
    options?: OfferingOptions;
    resource_options?: OfferingOptions;
    readonly components?: Array<OfferingComponent>;
    plugin_options?: MergedPluginOptions;
    state?: OfferingState;
    vendor_details?: string;
    getting_started?: string;
    integration_guide?: string;
    thumbnail?: string | null;
    readonly order_count?: number;
    readonly plans?: Array<BasePublicPlan>;
    readonly screenshots?: Array<NestedScreenshot>;
    type?: string;
    /**
     * Accessible to all customers.
     */
    shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    billable?: boolean;
    readonly scope?: string;
    readonly scope_uuid?: string | null;
    readonly scope_name?: string | null;
    scope_state?: CoreStates | null;
    readonly scope_error_message?: string | null;
    readonly files?: Array<NestedOfferingFile>;
    readonly quotas?: Array<Quota>;
    readonly paused_reason?: string;
    datacite_doi?: string;
    /**
     * Number of citations of a DOI
     */
    readonly citation_count?: number;
    latitude?: number | null;
    longitude?: number | null;
    country?: CountryEnum | BlankEnum;
    backend_id?: string;
    readonly organization_groups?: Array<OrganizationGroup>;
    image?: string | null;
    readonly total_customers?: number | null;
    readonly total_cost?: number | null;
    readonly total_cost_estimated?: number | null;
    readonly parent_description?: string | null;
    readonly parent_uuid?: string | null;
    readonly parent_name?: string | null;
    backend_metadata?: unknown;
    readonly has_compliance_requirements?: boolean;
    readonly google_calendar_is_public?: boolean | null;
    /**
     * Get the Google Calendar link for an offering.
     */
    readonly google_calendar_link?: string | null;
    readonly promotion_campaigns?: Array<NestedCampaign>;
};

export type PullMarketplaceScriptResourceRequest = {
    resource_uuid: string;
};

export type QueryRequest = {
    query: string;
};

export type QuestionAdmin = {
    readonly uuid: string;
    description?: string;
    /**
     * Additional guidance text visible to users when answering and reviewing
     */
    user_guidance?: string;
    readonly question_options: Array<QuestionOptionsAdmin>;
    readonly url: string;
    readonly checklist_name: string;
    readonly checklist_uuid: string;
    checklist: string;
    order?: number;
    required?: boolean;
    /**
     * Type of question and expected answer format
     */
    question_type?: QuestionTypeEnum;
    operator?: ChecklistOperators | BlankEnum;
    /**
     * Answer value that trigger review.
     */
    review_answer_value?: unknown;
    /**
     * This question always requires review regardless of answer
     */
    always_requires_review?: boolean;
    /**
     * Answer value that triggers display of user guidance.
     */
    guidance_answer_value?: unknown;
    /**
     * Operator to use when comparing answer with guidance_answer_value
     */
    guidance_operator?: ChecklistOperators | BlankEnum;
    /**
     * Show user guidance always, regardless of answer. If False, guidance is conditional on answer matching guidance_answer_value with guidance_operator
     */
    always_show_guidance?: boolean;
    /**
     * Minimum value allowed for NUMBER type questions
     */
    min_value?: string | null;
    /**
     * Maximum value allowed for NUMBER type questions
     */
    max_value?: string | null;
};

export type QuestionAdminRequest = {
    description?: string;
    /**
     * Additional guidance text visible to users when answering and reviewing
     */
    user_guidance?: string;
    checklist: string;
    order?: number;
    required?: boolean;
    /**
     * Type of question and expected answer format
     */
    question_type?: QuestionTypeEnum;
    operator?: ChecklistOperators | BlankEnum;
    /**
     * Answer value that trigger review.
     */
    review_answer_value?: unknown;
    /**
     * This question always requires review regardless of answer
     */
    always_requires_review?: boolean;
    /**
     * Answer value that triggers display of user guidance.
     */
    guidance_answer_value?: unknown;
    /**
     * Operator to use when comparing answer with guidance_answer_value
     */
    guidance_operator?: ChecklistOperators | BlankEnum;
    /**
     * Show user guidance always, regardless of answer. If False, guidance is conditional on answer matching guidance_answer_value with guidance_operator
     */
    always_show_guidance?: boolean;
    /**
     * Minimum value allowed for NUMBER type questions
     */
    min_value?: string | null;
    /**
     * Maximum value allowed for NUMBER type questions
     */
    max_value?: string | null;
};

export type QuestionDependency = {
    readonly uuid: string;
    readonly url: string;
    question: string;
    readonly question_name: string;
    depends_on_question: string;
    readonly depends_on_question_name: string;
    /**
     * The answer value(s) that make this question visible
     */
    required_answer_value: unknown;
    operator?: ChecklistOperators;
};

export type QuestionDependencyRequest = {
    question: string;
    depends_on_question: string;
    /**
     * The answer value(s) that make this question visible
     */
    required_answer_value: unknown;
    operator?: ChecklistOperators;
};

export type QuestionOptionsAdmin = {
    readonly uuid: string;
    label: string;
    order?: number;
    readonly url: string;
    question: string;
    readonly question_uuid: string;
};

export type QuestionOptionsAdminRequest = {
    label: string;
    order?: number;
    question: string;
};

export type QuestionTypeEnum = 'boolean' | 'single_select' | 'multi_select' | 'text_input' | 'text_area' | 'number' | 'date' | 'file';

export type QuestionWithAnswer = {
    readonly uuid: string;
    readonly description: string;
    readonly user_guidance: string | null;
    /**
     * Type of question and expected answer format
     */
    question_type: QuestionTypeEnum;
    readonly required: boolean;
    readonly order: number;
    readonly existing_answer: {
        [key: string]: unknown;
    } | null;
    readonly question_options: Array<unknown> | null;
    /**
     * Minimum value allowed for NUMBER type questions
     */
    readonly min_value: string | null;
    /**
     * Maximum value allowed for NUMBER type questions
     */
    readonly max_value: string | null;
};

export type QuestionWithAnswerReviewer = {
    readonly uuid: string;
    readonly description: string;
    readonly user_guidance: string | null;
    /**
     * Type of question and expected answer format
     */
    question_type: QuestionTypeEnum;
    readonly required: boolean;
    readonly order: number;
    readonly existing_answer: {
        [key: string]: unknown;
    } | null;
    readonly question_options: Array<unknown> | null;
    /**
     * Minimum value allowed for NUMBER type questions
     */
    readonly min_value: string | null;
    /**
     * Maximum value allowed for NUMBER type questions
     */
    readonly max_value: string | null;
    operator?: ChecklistOperators | BlankEnum;
    /**
     * Answer value that trigger review.
     */
    review_answer_value?: unknown;
    /**
     * This question always requires review regardless of answer
     */
    always_requires_review?: boolean;
};

export type Quota = {
    name?: string;
    usage?: number;
    limit?: number;
};

export type QuotaRequest = {
    name: string;
    usage: number;
    limit: number;
};

export type QuotasUpdateRequest = {
    quotas: {
        [key: string]: number;
    };
};

export type RancherApplication = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    error_message?: string;
    error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    backend_id?: string;
    readonly access_url?: string | null;
    runtime_state?: string;
    template?: string;
    rancher_project?: string;
    namespace?: string;
    version?: string;
    answers?: {
        [key: string]: unknown;
    };
    readonly rancher_project_name?: string;
    readonly catalog_name?: string;
    readonly template_name?: string;
    readonly external_url?: string | null;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type RancherApplicationRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    template: string;
    rancher_project: string;
    namespace?: string;
    namespace_name?: string;
    version: string;
    answers?: {
        [key: string]: unknown;
    };
};

export type RancherCatalog = {
    readonly uuid: string;
    readonly url: string;
    readonly created: string;
    readonly modified: string;
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    readonly commit: string;
    readonly runtime_state: string;
    scope: string;
    scope_type: RancherCatalogScopeType;
};

export type RancherCatalogCreate = {
    readonly uuid: string;
    readonly url: string;
    readonly created: string;
    readonly modified: string;
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    readonly commit: string;
    readonly runtime_state: string;
    scope: string;
    scope_type: RancherCatalogScopeType;
    username?: string;
    password?: string;
};

export type RancherCatalogCreateRequest = {
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    scope: string;
    username?: string;
    password?: string;
};

export type RancherCatalogRequest = {
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    scope: string;
};

export type RancherCatalogScopeType = 'global' | 'cluster' | 'project';

export type RancherCatalogUpdate = {
    readonly uuid: string;
    readonly url: string;
    readonly created: string;
    readonly modified: string;
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    readonly commit: string;
    readonly runtime_state: string;
    scope: string;
    scope_type: RancherCatalogScopeType;
};

export type RancherCatalogUpdateRequest = {
    name: string;
    description?: string;
    catalog_url: string;
    branch: string;
    scope: string;
};

export type RancherCluster = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    nodes?: Array<RancherNestedNode>;
    tenant?: string;
    readonly tenant_uuid?: string;
    vm_project?: string | null;
    readonly runtime_state?: string;
    /**
     * Longhorn is a distributed block storage deployed on top of Kubernetes cluster
     */
    install_longhorn?: boolean;
    readonly management_security_group?: string;
    readonly public_ips?: Array<RancherNestedPublicIp>;
    /**
     * Cluster capacity in the format {'cpu': '10', 'ram': '49125240Ki', 'pods': '330'}
     */
    readonly capacity?: unknown;
    /**
     * Cluster requested resources in the format {'cpu': '1450m', 'memory': '884Mi', 'pods': '13'}
     */
    readonly requested?: unknown;
    /**
     * Kubernetes version used in the cluster.
     */
    readonly kubernetes_version?: string;
    readonly router_ips?: Array<unknown>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type RancherClusterReference = {
    readonly uuid?: string;
    name?: string;
    readonly marketplace_uuid?: string | null;
};

export type RancherClusterRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    nodes: Array<RancherNestedNodeRequest>;
    tenant?: string;
    vm_project?: string | null;
    ssh_public_key?: string;
    /**
     * Longhorn is a distributed block storage deployed on top of Kubernetes cluster
     */
    install_longhorn?: boolean;
};

export type RancherClusterSecurityGroupRule = {
    readonly uuid: string;
    /**
     * IP protocol version - either 'IPv4' or 'IPv6'
     */
    ethertype?: EthertypeEnum;
    /**
     * Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
     */
    direction?: DirectionEnum;
    /**
     * The network protocol (TCP, UDP, ICMP, or empty for any protocol)
     */
    protocol?: ProtocolEnum | BlankEnum;
    /**
     * Starting port number in the range (1-65535)
     */
    from_port?: number | null;
    /**
     * Ending port number in the range (1-65535)
     */
    to_port?: number | null;
    /**
     * CIDR notation for the source/destination network address range
     */
    cidr?: string | null;
    description?: string;
};

export type RancherClusterSecurityGroupRuleRequest = {
    /**
     * IP protocol version - either 'IPv4' or 'IPv6'
     */
    ethertype?: EthertypeEnum;
    /**
     * Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
     */
    direction?: DirectionEnum;
    /**
     * The network protocol (TCP, UDP, ICMP, or empty for any protocol)
     */
    protocol?: ProtocolEnum | BlankEnum;
    /**
     * Starting port number in the range (1-65535)
     */
    from_port?: number | null;
    /**
     * Ending port number in the range (1-65535)
     */
    to_port?: number | null;
    /**
     * CIDR notation for the source/destination network address range
     */
    cidr?: string | null;
    description?: string;
};

export type RancherClusterTemplate = {
    readonly uuid: string;
    name: string;
    description?: string;
    readonly created: string;
    readonly modified: string;
    nodes: Array<RancherClusterTemplateNode>;
};

export type RancherClusterTemplateNode = {
    /**
     * Min vCPU (cores)
     */
    min_vcpu: number;
    /**
     * Min RAM (GB)
     */
    min_ram: number;
    /**
     * System volume size (GB)
     */
    system_volume_size: number;
    preferred_volume_type?: string;
    role: RoleEnum;
};

export type RancherCreateNode = {
    cluster: string;
    role: RoleEnum;
    readonly uuid: string;
};

export type RancherCreateNodeRequest = {
    cluster: string;
    role: RoleEnum;
    system_volume_size?: number;
    system_volume_type?: string | null;
    memory?: number;
    cpu?: number;
    subnet: string | null;
    flavor?: string | null;
    data_volumes?: Array<DataVolumeRequest>;
    ssh_public_key?: string;
    tenant?: string;
};

export type RancherHpa = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    readonly created: string;
    readonly modified: string;
    readonly runtime_state: string;
    readonly cluster: string | null;
    readonly cluster_uuid: string;
    readonly cluster_name: string;
    readonly project: string | null;
    readonly project_uuid: string;
    readonly project_name: string;
    readonly namespace: string | null;
    readonly namespace_uuid: string;
    readonly namespace_name: string;
    workload?: string | null;
    readonly workload_uuid: string;
    readonly workload_name: string;
    min_replicas?: number;
    max_replicas?: number;
    readonly current_replicas: number;
    readonly desired_replicas: number;
    metrics: unknown;
};

export type RancherHpaRequest = {
    name: string;
    description?: string;
    workload?: string | null;
    min_replicas?: number;
    max_replicas?: number;
    metrics: unknown;
};

export type RancherImportYaml = {
    yaml: string;
    default_namespace?: string | null;
    namespace?: string | null;
};

export type RancherImportYamlRequest = {
    yaml: string;
    default_namespace?: string | null;
    namespace?: string | null;
};

export type RancherIngress = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    error_message?: string;
    error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    backend_id?: string;
    readonly access_url?: string | null;
    runtime_state?: string;
    rancher_project?: string;
    readonly rancher_project_name?: string;
    namespace?: string;
    readonly namespace_name?: string;
    rules?: unknown;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type RancherIngressRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    rancher_project: string;
    namespace?: string;
    rules?: unknown;
};

export type RancherNamespace = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    readonly created: string;
    readonly modified: string;
    runtime_state?: string;
    project?: string | null;
};

export type RancherNestedNamespace = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type RancherNestedNode = {
    readonly url?: string;
    role?: RoleEnum;
    readonly instance?: string;
    readonly created?: string;
    readonly modified?: string;
    readonly uuid?: string;
    readonly error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    /**
     * Initial data for instance creating.
     */
    readonly initial_data?: unknown;
    readonly runtime_state?: string;
    readonly k8s_version?: string;
    readonly docker_version?: string;
    readonly cpu_allocated?: number | null;
    readonly cpu_total?: number | null;
    /**
     * Allocated RAM in Mi.
     */
    readonly ram_allocated?: number | null;
    /**
     * Total RAM in Mi.
     */
    readonly ram_total?: number | null;
    readonly pods_allocated?: number | null;
    readonly pods_total?: number | null;
    readonly labels?: unknown;
    readonly annotations?: unknown;
};

export type RancherNestedNodeRequest = {
    subnet: string | null;
    flavor?: string | null;
    system_volume_size?: number;
    system_volume_type?: string | null;
    data_volumes?: Array<DataVolumeRequest>;
    memory?: number;
    cpu?: number;
    role: RoleEnum;
    tenant?: string;
    error_traceback?: string;
    backend_id?: string;
};

export type RancherNestedPublicIp = {
    readonly floating_ip?: string;
    readonly floating_ip_uuid?: string;
    readonly ip_address?: string;
    readonly external_ip_address?: string;
};

export type RancherNestedSecurityGroup = {
    readonly url: string;
};

export type RancherNestedWorkload = {
    readonly uuid?: string;
    readonly url?: string;
    name?: string;
};

export type RancherNestedWorkloadRequest = {
    name: string;
};

export type RancherNode = {
    readonly uuid: string;
    readonly url: string;
    readonly created: string;
    readonly modified: string;
    name: string;
    readonly backend_id: string;
    readonly project_uuid: string;
    readonly service_settings_name: string;
    readonly service_settings_uuid: string;
    readonly resource_type: string;
    state: CoreStates;
    cluster: string;
    readonly cluster_name: string;
    readonly cluster_uuid: string;
    instance: string;
    readonly instance_name: string;
    readonly instance_uuid: string;
    readonly instance_marketplace_uuid: string;
    role: RoleEnum;
    readonly k8s_version: string;
    readonly docker_version: string;
    readonly cpu_allocated: number | null;
    readonly cpu_total: number | null;
    /**
     * Allocated RAM in Mi.
     */
    readonly ram_allocated: number | null;
    /**
     * Total RAM in Mi.
     */
    readonly ram_total: number | null;
    readonly pods_allocated: number | null;
    readonly pods_total: number | null;
    readonly labels: unknown;
    readonly annotations: unknown;
    readonly runtime_state: string;
};

export type RancherProject = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    readonly created: string;
    readonly modified: string;
    runtime_state?: string;
    cluster?: string | null;
    namespaces: Array<RancherNestedNamespace>;
};

export type RancherRoleScopeType = 'cluster' | 'project';

export type RancherService = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    error_message?: string;
    error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    backend_id?: string;
    readonly access_url?: string | null;
    runtime_state?: string;
    namespace?: string;
    readonly namespace_name?: string;
    cluster_ip?: string | null;
    selector?: unknown;
    target_workloads?: Array<RancherNestedWorkload>;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type RancherServiceRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    error_message?: string;
    error_traceback?: string;
    backend_id?: string;
    runtime_state?: string;
    namespace?: string;
    cluster_ip?: string | null;
    selector?: unknown;
    target_workloads?: Array<RancherNestedWorkloadRequest>;
};

export type RancherTemplate = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    readonly created: string;
    readonly modified: string;
    runtime_state?: string;
    catalog?: string | null;
    cluster?: string | null;
    project?: string | null;
    icon?: string | null;
    project_url?: string;
    default_version: string;
    readonly catalog_name: string;
    versions: Array<string>;
};

export type RancherTemplateBaseQuestion = {
    label: string;
    description?: string;
    variable: string;
    required?: boolean;
    /**
     * Validate
     */
    validate_?: unknown;
    type: RancherTemplateQuestionType;
    default?: string | null;
    group?: string;
    showIf?: string;
};

export type RancherTemplateQuestion = {
    label: string;
    description?: string;
    variable: string;
    required?: boolean;
    /**
     * Validate
     */
    validate_?: unknown;
    type: RancherTemplateQuestionType;
    default?: string | null;
    group?: string;
    showIf?: string;
    subquestions?: Array<RancherTemplateBaseQuestion>;
    showSubquestionIf?: string;
};

export type RancherTemplateQuestionType = 'boolean' | 'string' | 'enum' | 'secret';

export type RancherUser = {
    readonly url: string;
    readonly uuid: string;
    user: string;
    readonly cluster_roles: Array<RancherUserClusterLink>;
    readonly project_roles: Array<RancherUserProjectLink>;
    settings: string;
    is_active?: boolean;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_name: string;
    readonly full_name: string;
};

export type RancherUserClusterLink = {
    cluster: string;
    role: string;
    readonly cluster_name: string;
    readonly cluster_uuid: string;
};

export type RancherUserProjectLink = {
    project: string;
    role: string;
    readonly project_name: string;
    readonly project_uuid: string;
};

export type RancherWorkload = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    readonly created: string;
    readonly modified: string;
    runtime_state?: string;
    cluster?: string | null;
    readonly cluster_uuid: string;
    readonly cluster_name: string;
    project?: string | null;
    readonly project_uuid: string;
    readonly project_name: string;
    namespace?: string | null;
    readonly namespace_uuid: string;
    readonly namespace_name: string;
    scale: number;
};

export type RancherWorkloadRequest = {
    name: string;
    runtime_state?: string;
    cluster?: string | null;
    project?: string | null;
    namespace?: string | null;
    scale: number;
};

export type ReferenceNumberRequest = {
    /**
     * Reference number associated with the invoice.
     */
    reference_number?: string;
};

export type RemoteCredentialsRequest = {
    api_url: string;
    token: string;
};

export type RemoteCustomer = {
    readonly uuid: string;
    readonly name: string;
    readonly abbreviation: string;
    readonly phone_number: string;
    readonly email: string;
};

export type RemoteEduteamsRequestRequest = {
    cuid: string;
};

export type RemoteEduteamsUuid = {
    uuid: string;
};

export type RemoteOffering = {
    readonly uuid: string;
    readonly name: string;
    readonly type: string;
    readonly state: string;
    readonly category_title: string;
};

export type RemoteOfferingCreateRequest = {
    api_url: string;
    token: string;
    remote_offering_uuid: string;
    local_category_uuid: string;
    local_customer_uuid: string;
    remote_customer_uuid: string;
};

export type RemoteOfferingCreateResponse = {
    readonly uuid: string;
};

export type RemoteProjectUpdateRequest = {
    readonly uuid: string;
    readonly state: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    readonly created: string;
    /**
     * Timestamp when the review was completed
     */
    readonly reviewed_at: string | null;
    readonly reviewed_by_full_name: string;
    readonly reviewed_by_uuid: string;
    /**
     * Optional comment provided during review
     */
    review_comment?: string | null;
    old_name?: string;
    new_name?: string;
    old_description?: string;
    new_description?: string;
    old_end_date?: string | null;
    new_end_date?: string | null;
    old_oecd_fos_2007_code?: string | null;
    readonly old_oecd_fos_2007_label: string;
    new_oecd_fos_2007_code?: string | null;
    readonly new_oecd_fos_2007_label: string;
    old_is_industry?: boolean | null;
    new_is_industry?: boolean | null;
    created_by?: number | null;
};

export type RemoteSynchronisation = {
    readonly uuid: string;
    readonly url: string;
    api_url: string;
    token: string;
    remote_organization_uuid: string;
    remote_organization_name: string;
    local_service_provider: string;
    readonly local_service_provider_name: string;
    is_active?: boolean;
    readonly last_execution: string | null;
    readonly last_output: string;
    readonly get_state_display: string;
    readonly error_message: string;
    readonly created: string;
    readonly modified: string;
    remotelocalcategory_set: Array<NestedRemoteLocalCategory>;
};

export type RemoteSynchronisationRequest = {
    api_url: string;
    token: string;
    remote_organization_uuid: string;
    remote_organization_name: string;
    local_service_provider: string;
    is_active?: boolean;
    remotelocalcategory_set: Array<NestedRemoteLocalCategoryRequest>;
};

export type RemoveOfferingComponentRequest = {
    uuid: string;
};

export type ReportSection = {
    header?: string;
    body?: string;
};

export type ReportSectionRequest = {
    header: string;
    body: string;
};

export type RequestTypes = 'Create' | 'Update' | 'Terminate';

export type RequestedOffering = {
    readonly uuid: string;
    state: RequestedOfferingStates;
    offering: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    readonly provider_name: string;
    readonly category_uuid: string;
    readonly category_name: string;
    readonly call_managing_organisation: string;
    attributes?: unknown;
    plan?: string | null;
    plan_details: BasePublicPlan;
    options: OfferingOptions;
    readonly components: Array<OfferingComponent>;
    readonly created: string;
    readonly url: string;
    readonly approved_by: string | null;
    readonly created_by: string | null;
    readonly created_by_name: string;
    readonly approved_by_name: string;
    description?: string;
};

export type RequestedOfferingRequest = {
    offering: string;
    attributes?: unknown;
    plan?: string | null;
    description?: string;
};

export type RequestedOfferingStates = 'requested' | 'accepted' | 'canceled';

export type RequestedResource = {
    readonly uuid: string;
    readonly url: string;
    requested_offering: NestedRequestedOffering;
    readonly resource: string | null;
    readonly resource_name: string;
    readonly call_resource_template: string;
    readonly call_resource_template_name: string;
    attributes?: unknown;
    limits?: unknown;
    description?: string;
    readonly created_by: string | null;
    readonly created_by_name: string;
};

export type RequestedResourceRequest = {
    attributes?: unknown;
    limits?: unknown;
    description?: string;
    requested_offering_uuid?: string;
    call_resource_template_uuid?: string;
};

export type Resource = {
    offering?: string;
    readonly offering_name?: string;
    readonly offering_uuid?: string;
    readonly offering_description?: string;
    readonly offering_image?: string;
    readonly offering_thumbnail?: string;
    readonly offering_type?: string;
    readonly offering_terms_of_service?: string;
    /**
     * Accessible to all customers.
     */
    readonly offering_shared?: boolean;
    /**
     * Purchase and usage is invoiced.
     */
    readonly offering_billable?: boolean;
    /**
     * Public data used by specific plugin, such as storage mode for OpenStack.
     */
    readonly offering_plugin_options?: unknown;
    readonly provider_name?: string;
    readonly provider_uuid?: string;
    readonly category_title?: string;
    readonly category_uuid?: string;
    readonly category_icon?: string;
    plan?: string;
    plan_unit?: BillingUnit | null;
    readonly plan_name?: string | null;
    readonly plan_uuid?: string | null;
    readonly plan_description?: string | null;
    readonly attributes?: {
        [key: string]: unknown;
    };
    readonly limits?: {
        [key: string]: number;
    };
    readonly uuid?: string;
    readonly created?: string;
    readonly modified?: string;
    readonly url?: string;
    readonly scope?: string;
    readonly description?: string;
    state?: ResourceState;
    readonly resource_uuid?: string | null;
    readonly backend_id?: string;
    readonly effective_id?: string;
    readonly resource_type?: string | null;
    readonly project?: string;
    readonly project_uuid?: string;
    readonly project_name?: string;
    readonly project_description?: string;
    /**
     * The date is inclusive. Once reached, all project resource will be scheduled for termination.
     */
    readonly project_end_date?: string | null;
    readonly project_end_date_requested_by?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    readonly offering_slug?: string;
    readonly parent_offering_uuid?: string;
    readonly parent_offering_name?: string;
    readonly parent_offering_slug?: string;
    readonly parent_uuid?: string;
    readonly parent_name?: string;
    backend_metadata?: BackendMetadata;
    readonly is_usage_based?: boolean;
    readonly is_limit_based?: boolean;
    name?: string;
    readonly slug?: string;
    readonly current_usages?: {
        [key: string]: number;
    };
    readonly can_terminate?: boolean;
    readonly report?: Array<ReportSection>;
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
    readonly end_date_requested_by?: string | null;
    readonly username?: string | null;
    readonly limit_usage?: {
        [key: string]: number;
    };
    downscaled?: boolean;
    readonly restrict_member_access?: boolean;
    paused?: boolean;
    readonly endpoints?: Array<NestedEndpoint>;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly offering_customer_uuid?: string;
    readonly options?: unknown;
    readonly available_actions?: Array<string>;
    readonly last_sync?: string;
    order_in_progress?: OrderDetails | null;
    creation_order?: OrderDetails | null;
    readonly service_settings_uuid?: string;
    readonly project_slug?: string;
    readonly customer_slug?: string;
};

export type ResourceBackendIdRequest = {
    backend_id?: string;
};

export type ResourceBackendMetadataRequest = {
    backend_metadata: unknown;
};

export type ResourceEndDateByProviderRequest = {
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
};

export type ResourceLimitPeriod = {
    start?: string;
    end?: string;
    quantity?: number;
    billing_periods?: number;
    total?: string;
};

export type ResourceOffering = {
    name: string;
    readonly uuid: string;
};

export type ResourceOptionsRequest = {
    options?: unknown;
};

export type ResourcePlanPeriod = {
    readonly uuid: string;
    readonly plan_name: string;
    readonly plan_uuid: string;
    start?: string | null;
    end?: string | null;
    components: Array<BaseComponentUsage>;
};

export type ResourceReportRequest = {
    report: Array<ReportSectionRequest>;
};

export type ResourceResponseStatus = {
    readonly status: string;
};

export type ResourceSetLimitsRequest = {
    limits: unknown;
};

export type ResourceSetStateErredRequest = {
    error_message?: string;
    error_traceback?: string;
};

export type ResourceSlugRequest = {
    slug: string;
};

export type ResourceState = 'Creating' | 'OK' | 'Erred' | 'Updating' | 'Terminating' | 'Terminated';

export type ResourceSuggestName = {
    project: string;
    offering: string;
};

export type ResourceSuggestNameRequest = {
    project: string;
    offering: string;
};

export type ResourceSwitchPlanRequest = {
    plan: string;
};

export type ResourceTerminateRequest = {
    /**
     * Termination attributes
     */
    attributes?: unknown;
};

export type ResourceUpdate = {
    name: string;
    description?: string;
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
};

export type ResourceUpdateLimitsRequest = {
    limits: {
        [key: string]: number;
    };
};

export type ResourceUpdateRequest = {
    name: string;
    description?: string;
    /**
     * The date is inclusive. Once reached, a resource will be scheduled for termination.
     */
    end_date?: string | null;
};

export type ResourceUser = {
    readonly uuid: string;
    resource: string;
    role: string;
    user: string;
    readonly resource_uuid: string;
    readonly role_uuid: string;
    readonly user_uuid: string;
    readonly resource_name: string;
    readonly role_name: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    readonly user_full_name: string;
};

export type ResourceUserRequest = {
    resource: string;
    role: string;
    user: string;
};

export type ResourcesLimits = {
    readonly offering_uuid: string;
    readonly name: string;
    readonly value: number;
    readonly offering_country: string;
    readonly organization_group_name: string;
    readonly organization_group_uuid: string;
};

export type ReviewComment = {
    comment?: string;
};

export type ReviewCommentRequest = {
    comment?: string;
};

export type ReviewStrategyEnum = 'after_round' | 'after_proposal';

export type ReviewSubmitRequest = {
    summary_score?: number;
    summary_public_comment?: string;
    summary_private_comment?: string;
};

export type RmqConnection = {
    readonly source_ip: string;
    readonly vhost: string;
};

export type RmqSubscription = {
    readonly created: string;
    readonly uuid: string;
    readonly source_ip: string;
};

export type RmqUserStatsItem = {
    readonly username: string;
    readonly connections: Array<RmqConnection>;
};

export type RmqVHostStatsItem = {
    readonly name: string;
    waldur_user: RmqWaldurUser;
    readonly subscriptions: Array<RmqSubscription>;
};

export type RmqWaldurUser = {
    readonly full_name: string;
    readonly username: string;
    readonly email: string;
};

export type RobotAccount = {
    readonly url: string;
    readonly uuid: string;
    readonly created: string;
    readonly modified: string;
    username?: string;
    description?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    resource: string;
    /**
     * Type of the robot account.
     */
    type: string;
    /**
     * Users who have access to this robot account.
     */
    users?: Array<string>;
    keys?: unknown;
    readonly backend_id: string;
    readonly fingerprints: Array<Fingerprint>;
    responsible_user?: string | null;
    state?: RobotAccountStates;
};

export type RobotAccountDetails = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    readonly modified?: string;
    username?: string;
    description?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    resource?: string;
    /**
     * Type of the robot account.
     */
    type?: string;
    readonly users?: Array<BasicUser>;
    keys?: unknown;
    readonly backend_id?: string;
    readonly fingerprints?: Array<Fingerprint>;
    responsible_user?: BasicUser | null;
    state?: RobotAccountStates;
    readonly user_keys?: Array<SshKey>;
    readonly resource_name?: string;
    readonly resource_uuid?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer_uuid?: string;
    readonly customer_name?: string;
    readonly offering_customer_uuid?: string;
    offering_plugin_options?: MergedPluginOptions;
};

export type RobotAccountErrorRequest = {
    /**
     * Error message to be saved to the robot account
     */
    error_message?: string;
};

export type RobotAccountRequest = {
    username?: string;
    description?: string;
    resource: string;
    /**
     * Type of the robot account.
     */
    type: string;
    /**
     * Users who have access to this robot account.
     */
    users?: Array<string>;
    keys?: unknown;
    responsible_user?: string | null;
};

export type RobotAccountStates = 1 | 2 | 3 | 4 | 5 | 6;

export type RoleDescription = {
    description?: string;
    /**
     * Description [en]
     */
    description_en?: string | null;
    /**
     * Description [et]
     */
    description_et?: string | null;
    /**
     * Description [lt]
     */
    description_lt?: string | null;
    /**
     * Description [lv]
     */
    description_lv?: string | null;
    /**
     * Description [ru]
     */
    description_ru?: string | null;
    /**
     * Description [it]
     */
    description_it?: string | null;
    /**
     * Description [de]
     */
    description_de?: string | null;
    /**
     * Description [da]
     */
    description_da?: string | null;
    /**
     * Description [sv]
     */
    description_sv?: string | null;
    /**
     * Description [es]
     */
    description_es?: string | null;
    /**
     * Description [fr]
     */
    description_fr?: string | null;
    /**
     * Description [nb]
     */
    description_nb?: string | null;
    /**
     * Description [ar]
     */
    description_ar?: string | null;
    /**
     * Description [cs]
     */
    description_cs?: string | null;
};

export type RoleDescriptionRequest = {
    description?: string;
    /**
     * Description [en]
     */
    description_en?: string | null;
    /**
     * Description [et]
     */
    description_et?: string | null;
    /**
     * Description [lt]
     */
    description_lt?: string | null;
    /**
     * Description [lv]
     */
    description_lv?: string | null;
    /**
     * Description [ru]
     */
    description_ru?: string | null;
    /**
     * Description [it]
     */
    description_it?: string | null;
    /**
     * Description [de]
     */
    description_de?: string | null;
    /**
     * Description [da]
     */
    description_da?: string | null;
    /**
     * Description [sv]
     */
    description_sv?: string | null;
    /**
     * Description [es]
     */
    description_es?: string | null;
    /**
     * Description [fr]
     */
    description_fr?: string | null;
    /**
     * Description [nb]
     */
    description_nb?: string | null;
    /**
     * Description [ar]
     */
    description_ar?: string | null;
    /**
     * Description [cs]
     */
    description_cs?: string | null;
};

export type RoleDetails = {
    readonly uuid?: string;
    name?: string;
    description?: string;
    /**
     * Description [en]
     */
    description_en?: string | null;
    /**
     * Description [et]
     */
    description_et?: string | null;
    /**
     * Description [lt]
     */
    description_lt?: string | null;
    /**
     * Description [lv]
     */
    description_lv?: string | null;
    /**
     * Description [ru]
     */
    description_ru?: string | null;
    /**
     * Description [it]
     */
    description_it?: string | null;
    /**
     * Description [de]
     */
    description_de?: string | null;
    /**
     * Description [da]
     */
    description_da?: string | null;
    /**
     * Description [sv]
     */
    description_sv?: string | null;
    /**
     * Description [es]
     */
    description_es?: string | null;
    /**
     * Description [fr]
     */
    description_fr?: string | null;
    /**
     * Description [nb]
     */
    description_nb?: string | null;
    /**
     * Description [ar]
     */
    description_ar?: string | null;
    /**
     * Description [cs]
     */
    description_cs?: string | null;
    readonly permissions?: Array<string>;
    readonly is_system_role?: boolean;
    is_active?: boolean;
    readonly users_count?: number;
    content_type?: RoleType;
};

export type RoleEnum = 'agent' | 'server';

export type RoleModifyRequest = {
    name: string;
    description?: string;
    /**
     * Description [en]
     */
    description_en?: string | null;
    /**
     * Description [et]
     */
    description_et?: string | null;
    /**
     * Description [lt]
     */
    description_lt?: string | null;
    /**
     * Description [lv]
     */
    description_lv?: string | null;
    /**
     * Description [ru]
     */
    description_ru?: string | null;
    /**
     * Description [it]
     */
    description_it?: string | null;
    /**
     * Description [de]
     */
    description_de?: string | null;
    /**
     * Description [da]
     */
    description_da?: string | null;
    /**
     * Description [sv]
     */
    description_sv?: string | null;
    /**
     * Description [es]
     */
    description_es?: string | null;
    /**
     * Description [fr]
     */
    description_fr?: string | null;
    /**
     * Description [nb]
     */
    description_nb?: string | null;
    /**
     * Description [ar]
     */
    description_ar?: string | null;
    /**
     * Description [cs]
     */
    description_cs?: string | null;
    permissions: unknown;
    is_active?: boolean;
    content_type: string;
};

export type RoleTemplate = {
    readonly url: string;
    readonly uuid: string;
    /**
     * Role internal name
     */
    readonly name: string;
    scope_type: RancherRoleScopeType;
    /**
     * Role public name
     */
    readonly display_name: string;
    readonly settings: string;
};

export type RoleType = 'customer' | 'service_provider' | 'call_organizer' | 'project' | 'offering' | 'call' | 'proposal';

export type RoundReviewer = {
    readonly full_name: string;
    email: string;
    accepted_proposals: number;
    rejected_proposals: number;
    in_review_proposals: number;
};

export type Rule = {
    name: string;
    readonly uuid: string;
    readonly url: string;
    user_affiliations?: Array<string>;
    user_email_patterns?: Array<string>;
    customer: string;
    readonly customer_name: string;
    readonly customer_uuid: string;
    project_role?: string | null;
    readonly project_role_display_name: string;
    readonly project_role_description: string;
    plan?: string | null;
    plan_attributes?: {
        [key: string]: unknown;
    };
    plan_limits?: {
        [key: string]: unknown;
    };
    readonly plan_name: string;
    readonly offering_name: string;
    readonly offering_uuid: string;
    readonly category_title: string;
    readonly category_url: string;
};

export type RuleRequest = {
    name: string;
    user_affiliations?: Array<string>;
    user_email_patterns?: Array<string>;
    customer: string;
    project_role?: string | null;
    project_role_name?: string | null;
    plan?: string | null;
    plan_attributes?: {
        [key: string]: unknown;
    };
    plan_limits?: {
        [key: string]: unknown;
    };
};

export type RuntimeStates = {
    readonly value: string;
    readonly label: string;
};

export type Saml2Login = {
    idp: string;
};

export type Saml2LoginComplete = {
    SAMLResponse: string;
};

export type Saml2LoginCompleteRequest = {
    SAMLResponse: string;
};

export type Saml2LoginRequest = {
    idp: string;
};

export type Saml2LogoutComplete = {
    SAMLResponse?: string;
    SAMLRequest?: string;
};

export type Saml2LogoutCompleteRequest = {
    SAMLResponse?: string;
    SAMLRequest?: string;
};

export type Saml2Provider = {
    name: string;
    url: string;
};

export type Screenshot = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    readonly created: string;
    description?: string;
    image: string;
    readonly thumbnail: string | null;
    offering: string;
    readonly customer_uuid: string;
};

export type ScreenshotRequest = {
    name: string;
    description?: string;
    image: Blob | File;
    offering: string;
};

export type Section = {
    readonly url: string;
    key: string;
    readonly created: string;
    title: string;
    category: string;
    readonly category_title: string;
    /**
     * Whether section is rendered as a separate tab.
     */
    is_standalone?: boolean;
};

export type SectionRequest = {
    key: string;
    title: string;
    category: string;
    /**
     * Whether section is rendered as a separate tab.
     */
    is_standalone?: boolean;
};

export type ServiceProvider = {
    readonly url?: string;
    readonly uuid?: string;
    readonly created?: string;
    description?: string;
    customer?: string;
    readonly customer_name?: string;
    readonly customer_uuid?: string;
    readonly customer_image?: string;
    readonly customer_abbreviation?: string;
    readonly customer_slug?: string;
    readonly customer_native_name?: string;
    readonly customer_country?: string;
    image?: string | null;
    readonly organization_groups?: Array<OrganizationGroup>;
    readonly offering_count?: number;
};

export type ServiceProviderApiSecretCode = {
    readonly api_secret_code: string;
};

export type ServiceProviderComplianceOverview = {
    readonly offering_uuid: string;
    readonly offering_name: string;
    readonly checklist_name: string | null;
    readonly total_users: number;
    readonly users_with_completions: number;
    readonly completed_users: number;
    readonly pending_users: number;
    readonly compliance_rate: number;
};

export type ServiceProviderOfferingUserCompliance = {
    readonly uuid: string;
    readonly user_full_name: string;
    readonly user_email: string;
    readonly offering_name: string;
    readonly checklist_name: string | null;
    readonly username: string | null;
    state: ServiceProviderOfferingUserComplianceStateEnum;
    readonly completion_percentage: number | null;
    readonly compliance_status: string;
    readonly last_updated: string | null;
    readonly created: string;
};

export type ServiceProviderOfferingUserComplianceStateEnum = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;

export type ServiceProviderRequest = {
    description?: string;
    customer: string;
    image?: (Blob | File) | null;
};

export type ServiceProviderRevenues = {
    readonly total: number;
    readonly year: number;
    readonly month: number;
};

export type ServiceProviderSignature = {
    customer: string;
    data: string;
    dry_run?: boolean;
};

export type ServiceProviderSignatureRequest = {
    customer: string;
    data: string;
    dry_run?: boolean;
};

export type ServiceProviderStatistics = {
    readonly active_campaigns: number;
    readonly current_customers: number;
    readonly customers_number_change: number;
    readonly active_resources: number;
    readonly resources_number_change: number;
    readonly active_and_paused_offerings: number;
    readonly unresolved_tickets: number;
    readonly pending_orders: number;
    readonly erred_resources: number;
};

export type ServiceSettings = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    type?: string;
    state?: ServiceSettingsStateEnum;
    readonly error_message?: string;
    /**
     * Anybody can use it
     */
    shared?: boolean;
    /**
     * Organization
     */
    customer?: string | null;
    readonly customer_name?: string | null;
    readonly customer_native_name?: string;
    terms_of_services?: string;
    scope?: string | null;
    readonly scope_uuid?: string;
    readonly options?: {
        [key: string]: unknown;
    };
};

export type ServiceSettingsStateEnum = 'CREATION_SCHEDULED' | 'CREATING' | 'UPDATE_SCHEDULED' | 'UPDATING' | 'DELETION_SCHEDULED' | 'DELETING' | 'OK' | 'ERRED';

export type SetMtu = {
    mtu: number;
};

export type SetMtuRequest = {
    mtu: number;
};

export type SetOfferingsUsername = {
    user_uuid: string;
    username: string;
};

export type SetOfferingsUsernameRequest = {
    user_uuid: string;
    username: string;
};

export type SlurmAllocation = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly cpu_limit?: number;
    readonly cpu_usage?: number;
    readonly gpu_limit?: number;
    readonly gpu_usage?: number;
    readonly ram_limit?: number;
    readonly ram_usage?: number;
    readonly username?: string | null;
    readonly gateway?: string | null;
    readonly is_active?: boolean;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type SlurmAllocationRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
};

export type SlurmAllocationSetLimits = {
    cpu_limit: number;
    gpu_limit: number;
    ram_limit: number;
};

export type SlurmAllocationSetLimitsRequest = {
    cpu_limit: number;
    gpu_limit: number;
    ram_limit: number;
};

export type SlurmAllocationUserUsage = {
    cpu_usage?: number;
    ram_usage?: number;
    gpu_usage?: number;
    month: number;
    year: number;
    allocation: string;
    user?: string | null;
    username: string;
    readonly full_name: string;
};

export type SlurmAssociation = {
    readonly uuid: string;
    username: string;
    allocation: string;
};

export type SmaxWebHookReceiver = {
    id: string;
};

export type SmaxWebHookReceiverRequest = {
    id: string;
};

export type SshKey = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    public_key?: string;
    readonly fingerprint_md5?: string;
    readonly fingerprint_sha256?: string;
    readonly fingerprint_sha512?: string;
    readonly user_uuid?: string;
    readonly is_shared?: boolean;
    readonly type?: string;
};

export type SshKeyRequest = {
    name?: string;
    public_key: string;
};

export type StateTransitionError = {
    /**
     * Error message to be displayed to the user
     */
    detail: string;
};

export type StatusEnum = 'scheduled' | 'open' | 'ended';

export type StorageModeEnum = 'fixed' | 'dynamic';

export type SubNetMapping = {
    src_cidr: string;
    dst_cidr: string;
};

export type SubNetMappingRequest = {
    src_cidr: string;
    dst_cidr: string;
};

export type SubresourceOffering = {
    readonly uuid: string;
    readonly type: string;
};

export type SupportStats = {
    readonly open_issues_count: number;
    readonly closed_this_month_count: number;
    readonly recent_broadcasts_count: number;
};

export type SupportUser = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    backend_id: string | null;
    user: string | null;
    backend_name?: string | null;
};

export type TableSize = {
    readonly table_name: string;
    readonly total_size: number;
    readonly data_size: number;
    readonly external_size: number;
};

export type Template = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description: string;
    issue_type?: IssueTypeEnum;
    readonly attachments: Array<TemplateAttachment>;
};

export type TemplateAttachment = {
    readonly uuid: string;
    name: string;
    file: string;
    readonly mime_type: string;
    readonly file_size: number;
    readonly created: string;
};

export type TemplateAttachmentRequest = {
    name: string;
    file: Blob | File;
};

export type TemplateRequest = {
    name: string;
    description: string;
    issue_type?: IssueTypeEnum;
};

export type TemplateVersion = {
    readonly readme: string;
    readonly app_readme: string;
    readonly questions: Array<RancherTemplateQuestion>;
};

export type Tenant = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type TokenRequest = {
    token: string;
};

export type TotalCustomerCost = {
    readonly total: number;
    readonly price: number;
};

export type UpdateOfferingComponentRequest = {
    uuid: string;
    billing_type: BillingTypeEnum;
    /**
     * Unique internal name of the measured unit, for example floating_ip.
     */
    type: string;
    /**
     * Display name for the measured unit, for example, Floating IP.
     */
    name: string;
    description?: string;
    /**
     * Unit of measurement, for example, GB.
     */
    measured_unit?: string;
    /**
     * The conversion factor from backend units to measured_unit
     */
    unit_factor?: number;
    limit_period?: LimitPeriodEnum | BlankEnum | NullEnum | null;
    limit_amount?: number | null;
    article_code?: string;
    max_value?: number | null;
    min_value?: number | null;
    max_available_limit?: number | null;
    is_boolean?: boolean;
    default_limit?: number | null;
};

export type User = {
    readonly url?: string;
    readonly uuid?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username?: string;
    readonly slug?: string;
    readonly full_name?: string;
    native_name?: string;
    job_title?: string;
    email?: string;
    phone_number?: string;
    organization?: string;
    readonly civil_number?: string | null;
    description?: string;
    /**
     * Staff status
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Support status
     * Designates whether the user is a global support user.
     */
    is_support?: boolean;
    readonly token?: string;
    /**
     * Token lifetime in seconds.
     */
    token_lifetime?: number | null;
    readonly token_expires_at?: string | null;
    /**
     * Indicates what registration method was used.
     */
    readonly registration_method?: string;
    readonly date_joined?: string;
    /**
     * Indicates when the user has agreed with the policy.
     */
    readonly agreement_date?: string | null;
    /**
     * Designates whether the user is allowed to receive email notifications.
     */
    notifications_enabled?: boolean;
    preferred_language?: string;
    readonly permissions?: Array<Permission>;
    readonly requested_email?: string | null;
    /**
     * Person's affiliation within organization such as student, faculty, staff.
     */
    readonly affiliations?: unknown;
    first_name?: string;
    last_name?: string;
    readonly identity_provider_name?: string;
    readonly identity_provider_label?: string;
    readonly identity_provider_management_url?: string;
    readonly identity_provider_fields?: Array<string>;
    image?: string | null;
    /**
     * Source of identity
     * Indicates what identity provider was used.
     */
    readonly identity_source?: string;
    readonly has_active_session?: boolean;
};

export type UserAgreement = {
    readonly url: string;
    readonly uuid: string;
    content: string;
    agreement_type: AgreementTypeEnum;
    readonly created: string;
    readonly modified: string;
};

export type UserAgreementRequest = {
    content: string;
    agreement_type: AgreementTypeEnum;
};

export type UserAuthToken = {
    readonly created: string;
    readonly user_first_name: string;
    readonly user_last_name: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username: string;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    readonly user_is_active: boolean;
    /**
     * Token lifetime in seconds.
     */
    readonly user_token_lifetime: number | null;
    readonly token: string;
};

export type UserEmailChangeRequest = {
    email: string;
};

export type UserRequest = {
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    username: string;
    native_name?: string;
    job_title?: string;
    email: string;
    phone_number?: string;
    organization?: string;
    description?: string;
    /**
     * Staff status
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Active
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Support status
     * Designates whether the user is a global support user.
     */
    is_support?: boolean;
    /**
     * Token lifetime in seconds.
     */
    token_lifetime?: number | null;
    /**
     * User must agree with the policy to register.
     */
    agree_with_policy?: boolean;
    /**
     * Designates whether the user is allowed to receive email notifications.
     */
    notifications_enabled?: boolean;
    preferred_language?: string;
    first_name?: string;
    last_name?: string;
    image?: (Blob | File) | null;
};

export type UserRoleCreateRequest = {
    role: string;
    user: string;
    expiration_time?: string | null;
};

export type UserRoleDeleteRequest = {
    role: string;
    user: string;
    expiration_time?: string | null;
};

export type UserRoleDetails = {
    readonly uuid?: string;
    readonly created?: string;
    expiration_time?: string | null;
    readonly role_name?: string;
    readonly role_uuid?: string;
    /**
     * Email address
     */
    readonly user_email?: string;
    readonly user_full_name?: string;
    /**
     * Required. 128 characters or fewer. Lowercase letters, numbers and @/./+/-/_ characters
     */
    readonly user_username?: string;
    readonly user_uuid?: string;
    readonly user_image?: string;
    readonly created_by_full_name?: string;
    readonly created_by_uuid?: string;
};

export type UserRoleExpirationTime = {
    expiration_time: string | null;
};

export type UserRoleUpdateRequest = {
    role: string;
    user: string;
    expiration_time?: string | null;
};

export type UsernameGenerationPolicyEnum = 'service_provider' | 'anonymized' | 'full_name' | 'waldur_username' | 'freeipa' | 'identity_claim';

export type Version = {
    /**
     * Current installed version of the application
     */
    version: string;
    /**
     * Latest available version from GitHub, if available.
     */
    latest_version?: string;
};

export type VisibilityEnum = 'private' | 'public';

export type VisibleInvitationDetails = {
    readonly scope_uuid: string;
    readonly scope_name: string;
    readonly scope_type: string | null;
    readonly customer_uuid: string;
    readonly customer_name: string;
    readonly role_name: string;
    readonly role_description: string;
    readonly created_by_full_name: string;
    readonly created_by_username: string;
    /**
     * Invitation link will be sent to this email. Note that user can accept invitation with different email.
     */
    email: string;
    readonly error_message: string;
    execution_state: ExecutionStateEnum;
    state: InvitationState;
};

export type VmwareCluster = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type VmwareDatastore = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    type: string;
    /**
     * Capacity, in MB.
     */
    capacity?: number | null;
    /**
     * Available space, in MB.
     */
    free_space?: number | null;
};

export type VmwareDisk = {
    readonly url?: string;
    readonly uuid?: string;
    readonly name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    /**
     * Size in MiB
     */
    size?: number;
    readonly vm?: string;
    readonly vm_uuid?: string;
    readonly vm_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type VmwareDiskExtend = {
    /**
     * Size in MiB
     */
    size: number;
};

export type VmwareDiskExtendRequest = {
    /**
     * Size in MiB
     */
    size: number;
};

export type VmwareDiskRequest = {
    description?: string;
    /**
     * Size in MiB
     */
    size: number;
};

export type VmwareFolder = {
    readonly url: string;
    readonly uuid: string;
    name: string;
};

export type VmwareLimit = {
    readonly max_cpu: number;
    readonly max_cores_per_socket: number;
    readonly max_ram: number;
    readonly max_disk: number;
    readonly max_disk_total: number;
};

export type VmwareNestedDisk = {
    readonly url?: string;
    readonly uuid?: string;
    /**
     * Size in MiB
     */
    size?: number;
};

export type VmwareNestedDiskRequest = {
    /**
     * Size in MiB
     */
    size: number;
};

export type VmwareNestedNetwork = {
    readonly uuid: string;
    readonly url: string;
    name: string;
    type: string;
};

export type VmwareNestedNetworkRequest = {
    name: string;
    type: string;
};

export type VmwareNestedPort = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    readonly mac_address?: string;
    network?: string;
};

export type VmwareNestedPortRequest = {
    name: string;
    network: string;
};

export type VmwareNetwork = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    type: string;
};

export type VmwarePort = {
    readonly url?: string;
    readonly uuid?: string;
    readonly name?: string;
    description?: string;
    readonly service_name?: string;
    readonly service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    readonly project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    readonly mac_address?: string;
    readonly vm?: string;
    readonly vm_uuid?: string;
    readonly vm_name?: string;
    network?: string;
    readonly network_name?: string;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type VmwarePortRequest = {
    description?: string;
    network: string;
};

export type VmwareTemplate = {
    readonly url: string;
    readonly uuid: string;
    name: string;
    description?: string;
    created: string;
    modified: string;
    /**
     * Defines the valid guest operating system types used for configuring a virtual machine
     */
    guest_os: string;
    readonly guest_os_name: string;
    /**
     * Number of cores in a VM
     */
    cores?: number;
    /**
     * Number of cores per socket in a VM
     */
    cores_per_socket?: number;
    /**
     * Memory size in MiB
     */
    ram?: number;
    /**
     * Disk size in MiB
     */
    disk?: number;
};

export type VmwareVirtualMachine = {
    readonly url?: string;
    readonly uuid?: string;
    name?: string;
    description?: string;
    readonly service_name?: string;
    service_settings?: string;
    readonly service_settings_uuid?: string;
    readonly service_settings_state?: string;
    readonly service_settings_error_message?: string;
    project?: string;
    readonly project_name?: string;
    readonly project_uuid?: string;
    readonly customer?: string;
    readonly customer_name?: string;
    readonly customer_native_name?: string;
    readonly customer_abbreviation?: string;
    readonly error_message?: string;
    readonly error_traceback?: string;
    readonly resource_type?: string;
    state?: CoreStates;
    readonly created?: string;
    readonly modified?: string;
    readonly backend_id?: string;
    readonly access_url?: string | null;
    guest_os?: GuestOsEnum | NullEnum | null;
    readonly guest_os_name?: string;
    /**
     * Number of cores in a VM
     */
    cores?: number;
    /**
     * Number of cores per socket in a VM
     */
    cores_per_socket?: number;
    /**
     * Memory size in MiB
     */
    ram?: number;
    /**
     * Disk size in MiB
     */
    readonly disk?: number;
    readonly disks?: Array<VmwareNestedDisk>;
    readonly runtime_state?: string;
    cluster?: string | null;
    datastore?: string | null;
    folder?: string | null;
    readonly template_name?: string;
    readonly cluster_name?: string;
    readonly datastore_name?: string;
    readonly folder_name?: string;
    readonly ports?: Array<VmwareNestedPort>;
    /**
     * The power state of the guest operating system.
     */
    guest_power_state?: GuestPowerStateEnum;
    readonly tools_state?: string;
    readonly tools_installed?: boolean;
    readonly marketplace_offering_uuid?: string | null;
    readonly marketplace_offering_name?: string | null;
    readonly marketplace_offering_plugin_options?: {
        [key: string]: unknown;
    } | null;
    readonly marketplace_category_uuid?: string | null;
    readonly marketplace_category_name?: string | null;
    readonly marketplace_resource_uuid?: string | null;
    readonly marketplace_plan_uuid?: string | null;
    readonly marketplace_resource_state?: string | null;
    readonly is_usage_based?: boolean | null;
    readonly is_limit_based?: boolean | null;
};

export type VmwareVirtualMachineRequest = {
    name: string;
    description?: string;
    service_settings: string;
    project: string;
    guest_os?: GuestOsEnum | NullEnum | null;
    /**
     * Number of cores in a VM
     */
    cores?: number;
    /**
     * Number of cores per socket in a VM
     */
    cores_per_socket?: number;
    /**
     * Memory size in MiB
     */
    ram?: number;
    template?: string | null;
    cluster?: string | null;
    networks?: Array<VmwareNestedNetworkRequest>;
    datastore?: string | null;
    folder?: string | null;
};

export type VolumeAttachRequest = {
    /**
     * Instance that this volume is attached to, if any
     */
    instance: string;
};

export type VolumeTypeEnum = 'gp2' | 'io1' | 'standard';

export type VolumeTypeMapping = {
    src_type_uuid: string;
    dst_type_uuid: string;
};

export type VolumeTypeMappingRequest = {
    src_type_uuid: string;
    dst_type_uuid: string;
};

export type WebHook = {
    readonly url: string;
    readonly uuid: string;
    is_active?: boolean;
    readonly author_uuid: string;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    readonly created: string;
    readonly modified: string;
    readonly hook_type: string;
    readonly author_fullname: string;
    readonly author_username: string;
    readonly author_email: string;
    destination_url: string;
    content_type?: WebHookContentTypeEnum;
};

export type WebHookContentTypeEnum = 'json' | 'form';

export type WebHookReceiver = {
    webhookEvent: WebhookEventEnum;
    issue: JiraIssue;
    comment?: JiraComment;
    changelog?: JiraChangelog;
    issue_event_type_name?: string;
};

export type WebHookReceiverRequest = {
    webhookEvent: WebhookEventEnum;
    issue: JiraIssueRequest;
    comment?: JiraCommentRequest;
    changelog?: JiraChangelogRequest;
    issue_event_type_name?: string;
};

export type WebHookRequest = {
    is_active?: boolean;
    event_types?: Array<EventTypesEnum>;
    event_groups?: Array<EventGroupsEnum>;
    destination_url: string;
    content_type?: WebHookContentTypeEnum;
};

export type WebhookEventEnum = 'jira:issue_updated' | 'jira:issue_deleted' | 'comment_created' | 'comment_updated' | 'comment_deleted';

export type WidgetEnum = 'csv' | 'filesize' | 'attached_instance';

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type AzureVirtualMachineCreateOrderAttributes = {
    name: string;
    description?: string;
    size: string;
    image: string;
    location: string;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type AzureSqlServerCreateOrderAttributes = {
    name: string;
    description?: string;
    location: string;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type OpenStackTenantCreateOrderAttributes = {
    name: string;
    description?: string;
    subnet_cidr?: string;
    skip_connection_extnet?: boolean;
    skip_creation_of_default_router?: boolean;
    /**
     * Optional availability group. Will be used for all instances provisioned in this tenant
     */
    availability_zone?: string;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type OpenStackInstanceCreateOrderAttributes = {
    name: string;
    description?: string;
    /**
     * The flavor to use for the instance
     */
    flavor: string;
    /**
     * The OS image to use for the instance
     */
    image: string;
    /**
     * List of security groups to apply to the instance
     */
    security_groups?: Array<OpenStackNestedSecurityGroupRequest>;
    /**
     * Network ports to attach to the instance
     */
    ports: Array<OpenStackNestedPortRequest>;
    /**
     * Floating IPs to assign to the instance
     */
    floating_ips?: Array<OpenStackNestedFloatingIpRequest>;
    /**
     * Size of the system volume in MiB. Minimum size is 1024 MiB (1 GiB)
     */
    system_volume_size: number;
    /**
     * Volume type for the system volume
     */
    system_volume_type?: string | null;
    /**
     * Size of the data volume in MiB. Minimum size is 1024 MiB (1 GiB)
     */
    data_volume_size?: number;
    /**
     * Volume type for the data volume
     */
    data_volume_type?: string | null;
    ssh_public_key?: string;
    /**
     * Additional data that will be added to instance on provisioning
     */
    user_data?: string;
    /**
     * Availability zone where this instance is located
     */
    availability_zone?: string | null;
    /**
     * If True, instance will be connected directly to external network
     */
    connect_directly_to_external_network?: boolean;
    /**
     * Additional data volumes to attach to the instance
     */
    data_volumes?: Array<OpenStackDataVolumeRequest>;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type OpenStackVolumeCreateOrderAttributes = {
    name: string;
    description?: string;
    /**
     * Image that this volume was created from, if any
     */
    image?: string | null;
    /**
     * Size in MiB
     */
    size?: number | null;
    /**
     * Availability zone where this volume is located
     */
    availability_zone?: string | null;
    /**
     * Type of the volume (e.g. SSD, HDD)
     */
    type?: string | null;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type MarketplaceRancherCreateOrderAttributes = {
    name: string;
    description?: string;
    nodes: Array<RancherNestedNodeRequest>;
    tenant?: string;
    ssh_public_key?: string;
    /**
     * Longhorn is a distributed block storage deployed on top of Kubernetes cluster
     */
    install_longhorn?: boolean;
    vm_project?: string | null;
};

export type MarketplaceManagedRancherCreateOrderAttributes = {
    /**
     * Unique identifier for the cluster
     */
    name: string;
    worker_nodes_count: number;
    worker_nodes_flavor_name: string;
    /**
     * Data volume size for worker nodes in MB (consistent with OpenStack)
     */
    worker_nodes_data_volume_size: number;
    worker_nodes_data_volume_type_name?: string;
    /**
     * List of UUID of OpenStack offerings where tenant can be created
     */
    openstack_offering_uuid_list?: Array<string>;
    /**
     * Longhorn is a distributed block storage deployed on top of Kubernetes cluster
     */
    install_longhorn?: boolean;
    /**
     * Longhorn storage volume size for worker nodes in MB (consistent with OpenStack)
     */
    worker_nodes_longhorn_volume_size?: number;
    worker_nodes_longhorn_volume_type_name?: string;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type SlurmInvoicesSlurmPackageCreateOrderAttributes = {
    name: string;
    description?: string;
};

/**
 * This mixin allows to specify list of fields to be rendered by serializer.
 * It expects that request is available in serializer's context.
 */
export type VMwareVirtualMachineCreateOrderAttributes = {
    name: string;
    description?: string;
    guest_os?: 'DOS' | 'WIN_31' | 'WIN_95' | 'WIN_98' | 'WIN_ME' | 'WIN_NT' | 'WIN_2000_PRO' | 'WIN_2000_SERV' | 'WIN_2000_ADV_SERV' | 'WIN_XP_HOME' | 'WIN_XP_PRO' | 'WIN_XP_PRO_64' | 'WIN_NET_WEB' | 'WIN_NET_STANDARD' | 'WIN_NET_ENTERPRISE' | 'WIN_NET_DATACENTER' | 'WIN_NET_BUSINESS' | 'WIN_NET_STANDARD_64' | 'WIN_NET_ENTERPRISE_64' | 'WIN_LONGHORN' | 'WIN_LONGHORN_64' | 'WIN_NET_DATACENTER_64' | 'WIN_VISTA' | 'WIN_VISTA_64' | 'WINDOWS_7' | 'WINDOWS_7_64' | 'WINDOWS_7_SERVER_64' | 'WINDOWS_8' | 'WINDOWS_8_64' | 'WINDOWS_8_SERVER_64' | 'WINDOWS_9' | 'WINDOWS_9_64' | 'WINDOWS_9_SERVER_64' | 'WINDOWS_HYPERV' | 'FREEBSD' | 'FREEBSD_64' | 'REDHAT' | 'RHEL_2' | 'RHEL_3' | 'RHEL_3_64' | 'RHEL_4' | 'RHEL_4_64' | 'RHEL_5' | 'RHEL_5_64' | 'RHEL_6' | 'RHEL_6_64' | 'RHEL_7' | 'RHEL_7_64' | 'CENTOS' | 'CENTOS_64' | 'CENTOS_6' | 'CENTOS_6_64' | 'CENTOS_7' | 'CENTOS_7_64' | 'ORACLE_LINUX' | 'ORACLE_LINUX_64' | 'ORACLE_LINUX_6' | 'ORACLE_LINUX_6_64' | 'ORACLE_LINUX_7' | 'ORACLE_LINUX_7_64' | 'SUSE' | 'SUSE_64' | 'SLES' | 'SLES_64' | 'SLES_10' | 'SLES_10_64' | 'SLES_11' | 'SLES_11_64' | 'SLES_12' | 'SLES_12_64' | 'NLD_9' | 'OES' | 'SJDS' | 'MANDRAKE' | 'MANDRIVA' | 'MANDRIVA_64' | 'TURBO_LINUX' | 'TURBO_LINUX_64' | 'UBUNTU' | 'UBUNTU_64' | 'DEBIAN_4' | 'DEBIAN_4_64' | 'DEBIAN_5' | 'DEBIAN_5_64' | 'DEBIAN_6' | 'DEBIAN_6_64' | 'DEBIAN_7' | 'DEBIAN_7_64' | 'DEBIAN_8' | 'DEBIAN_8_64' | 'DEBIAN_9' | 'DEBIAN_9_64' | 'DEBIAN_10' | 'DEBIAN_10_64' | 'ASIANUX_3' | 'ASIANUX_3_64' | 'ASIANUX_4' | 'ASIANUX_4_64' | 'ASIANUX_5_64' | 'ASIANUX_7_64' | 'OPENSUSE' | 'OPENSUSE_64' | 'FEDORA' | 'FEDORA_64' | 'COREOS_64' | 'VMWARE_PHOTON_64' | 'OTHER_24X_LINUX' | 'OTHER_24X_LINUX_64' | 'OTHER_26X_LINUX' | 'OTHER_26X_LINUX_64' | 'OTHER_3X_LINUX' | 'OTHER_3X_LINUX_64' | 'OTHER_LINUX' | 'GENERIC_LINUX' | 'OTHER_LINUX_64' | 'SOLARIS_6' | 'SOLARIS_7' | 'SOLARIS_8' | 'SOLARIS_9' | 'SOLARIS_10' | 'SOLARIS_10_64' | 'SOLARIS_11_64' | 'OS2' | 'ECOMSTATION' | 'ECOMSTATION_2' | 'NETWARE_4' | 'NETWARE_5' | 'NETWARE_6' | 'OPENSERVER_5' | 'OPENSERVER_6' | 'UNIXWARE_7' | 'DARWIN' | 'DARWIN_64' | 'DARWIN_10' | 'DARWIN_10_64' | 'DARWIN_11' | 'DARWIN_11_64' | 'DARWIN_12_64' | 'DARWIN_13_64' | 'DARWIN_14_64' | 'DARWIN_15_64' | 'DARWIN_16_64' | 'VMKERNEL' | 'VMKERNEL_5' | 'VMKERNEL_6' | 'VMKERNEL_65' | 'OTHER' | 'OTHER_64' | null;
    /**
     * Number of cores per socket in a VM
     */
    cores_per_socket?: number;
    template?: string | null;
    cluster?: string | null;
    datastore?: string | null;
};

/**
 * A page number within the paginated result set.
 */
export type Page = number;

/**
 * Number of results to return per page.
 */
export type PageSize = number;

export type ApiAuthEduteamsCompleteRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        code?: string;
        state?: string;
    };
    url: '/api-auth/eduteams/complete/';
};

export type ApiAuthEduteamsCompleteRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthEduteamsInitRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/eduteams/init/';
};

export type ApiAuthEduteamsInitRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthKeycloakCompleteRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        code?: string;
        state?: string;
    };
    url: '/api-auth/keycloak/complete/';
};

export type ApiAuthKeycloakCompleteRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthKeycloakInitRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/keycloak/init/';
};

export type ApiAuthKeycloakInitRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/logout/';
};

export type ApiAuthLogoutResponses = {
    200: Logout;
    /**
     * No response body
     */
    204: void;
};

export type ApiAuthLogoutResponse = ApiAuthLogoutResponses[keyof ApiAuthLogoutResponses];

export type ApiAuthPasswordData = {
    body: ObtainAuthTokenRequest;
    path?: never;
    query?: never;
    url: '/api-auth/password/';
};

export type ApiAuthPasswordErrors = {
    /**
     * No response body
     */
    401: unknown;
};

export type ApiAuthPasswordResponses = {
    200: CoreAuthToken;
};

export type ApiAuthPasswordResponse = ApiAuthPasswordResponses[keyof ApiAuthPasswordResponses];

export type ApiAuthSaml2LoginData = {
    body: Saml2LoginRequest;
    path?: never;
    query?: never;
    url: '/api-auth/saml2/login/';
};

export type ApiAuthSaml2LoginResponses = {
    200: Saml2Login;
};

export type ApiAuthSaml2LoginResponse = ApiAuthSaml2LoginResponses[keyof ApiAuthSaml2LoginResponses];

export type ApiAuthSaml2LoginCompleteData = {
    body: Saml2LoginCompleteRequest;
    path?: never;
    query?: never;
    url: '/api-auth/saml2/login/complete/';
};

export type ApiAuthSaml2LoginCompleteResponses = {
    200: Saml2LoginComplete;
};

export type ApiAuthSaml2LoginCompleteResponse = ApiAuthSaml2LoginCompleteResponses[keyof ApiAuthSaml2LoginCompleteResponses];

export type ApiAuthSaml2LogoutRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/saml2/logout/';
};

export type ApiAuthSaml2LogoutRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthSaml2LogoutCompleteRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/saml2/logout/complete/';
};

export type ApiAuthSaml2LogoutCompleteRetrieveResponses = {
    200: Saml2LogoutComplete;
};

export type ApiAuthSaml2LogoutCompleteRetrieveResponse = ApiAuthSaml2LogoutCompleteRetrieveResponses[keyof ApiAuthSaml2LogoutCompleteRetrieveResponses];

export type ApiAuthSaml2LogoutCompleteData = {
    body?: Saml2LogoutCompleteRequest;
    path?: never;
    query?: never;
    url: '/api-auth/saml2/logout/complete/';
};

export type ApiAuthSaml2LogoutCompleteResponses = {
    200: Saml2LogoutComplete;
};

export type ApiAuthSaml2LogoutCompleteResponse = ApiAuthSaml2LogoutCompleteResponses[keyof ApiAuthSaml2LogoutCompleteResponses];

export type ApiAuthSaml2ProvidersListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api-auth/saml2/providers/';
};

export type ApiAuthSaml2ProvidersListResponses = {
    200: Array<Saml2Provider>;
};

export type ApiAuthSaml2ProvidersListResponse = ApiAuthSaml2ProvidersListResponses[keyof ApiAuthSaml2ProvidersListResponses];

export type ApiAuthTaraCompleteRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        code?: string;
        state?: string;
    };
    url: '/api-auth/tara/complete/';
};

export type ApiAuthTaraCompleteRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ApiAuthTaraInitRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api-auth/tara/init/';
};

export type ApiAuthTaraInitRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AccessSubnetsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        description?: string;
        inet?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/access-subnets/';
};

export type AccessSubnetsListResponses = {
    200: Array<AccessSubnet>;
};

export type AccessSubnetsListResponse = AccessSubnetsListResponses[keyof AccessSubnetsListResponses];

export type AccessSubnetsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        description?: string;
        inet?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/access-subnets/';
};

export type AccessSubnetsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AccessSubnetsCreateData = {
    body: AccessSubnetRequest;
    path?: never;
    query?: never;
    url: '/api/access-subnets/';
};

export type AccessSubnetsCreateResponses = {
    201: AccessSubnet;
};

export type AccessSubnetsCreateResponse = AccessSubnetsCreateResponses[keyof AccessSubnetsCreateResponses];

export type AccessSubnetsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/access-subnets/{uuid}/';
};

export type AccessSubnetsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AccessSubnetsDestroyResponse = AccessSubnetsDestroyResponses[keyof AccessSubnetsDestroyResponses];

export type AccessSubnetsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/access-subnets/{uuid}/';
};

export type AccessSubnetsRetrieveResponses = {
    200: AccessSubnet;
};

export type AccessSubnetsRetrieveResponse = AccessSubnetsRetrieveResponses[keyof AccessSubnetsRetrieveResponses];

export type AccessSubnetsPartialUpdateData = {
    body?: PatchedAccessSubnetRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/access-subnets/{uuid}/';
};

export type AccessSubnetsPartialUpdateResponses = {
    200: AccessSubnet;
};

export type AccessSubnetsPartialUpdateResponse = AccessSubnetsPartialUpdateResponses[keyof AccessSubnetsPartialUpdateResponses];

export type AccessSubnetsUpdateData = {
    body: AccessSubnetRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/access-subnets/{uuid}/';
};

export type AccessSubnetsUpdateResponses = {
    200: AccessSubnet;
};

export type AccessSubnetsUpdateResponse = AccessSubnetsUpdateResponses[keyof AccessSubnetsUpdateResponses];

export type AdminAnnouncementsListData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        field?: Array<'active_from' | 'active_to' | 'created' | 'description' | 'is_active' | 'maintenance_affected_offerings' | 'maintenance_name' | 'maintenance_scheduled_end' | 'maintenance_scheduled_start' | 'maintenance_service_provider' | 'maintenance_state' | 'maintenance_type' | 'maintenance_uuid' | 'type' | 'uuid'>;
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-active_from' | '-active_to' | '-created' | '-name' | '-type' | 'active_from' | 'active_to' | 'created' | 'name' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        type?: Array<'danger' | 'information' | 'warning'>;
    };
    url: '/api/admin-announcements/';
};

export type AdminAnnouncementsListResponses = {
    200: Array<AdminAnnouncement>;
};

export type AdminAnnouncementsListResponse = AdminAnnouncementsListResponses[keyof AdminAnnouncementsListResponses];

export type AdminAnnouncementsCountData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-active_from' | '-active_to' | '-created' | '-name' | '-type' | 'active_from' | 'active_to' | 'created' | 'name' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        type?: Array<'danger' | 'information' | 'warning'>;
    };
    url: '/api/admin-announcements/';
};

export type AdminAnnouncementsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AdminAnnouncementsCreateData = {
    body: AdminAnnouncementRequest;
    path?: never;
    query?: never;
    url: '/api/admin-announcements/';
};

export type AdminAnnouncementsCreateResponses = {
    201: AdminAnnouncement;
};

export type AdminAnnouncementsCreateResponse = AdminAnnouncementsCreateResponses[keyof AdminAnnouncementsCreateResponses];

export type AdminAnnouncementsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/admin-announcements/{uuid}/';
};

export type AdminAnnouncementsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AdminAnnouncementsDestroyResponse = AdminAnnouncementsDestroyResponses[keyof AdminAnnouncementsDestroyResponses];

export type AdminAnnouncementsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'active_from' | 'active_to' | 'created' | 'description' | 'is_active' | 'maintenance_affected_offerings' | 'maintenance_name' | 'maintenance_scheduled_end' | 'maintenance_scheduled_start' | 'maintenance_service_provider' | 'maintenance_state' | 'maintenance_type' | 'maintenance_uuid' | 'type' | 'uuid'>;
    };
    url: '/api/admin-announcements/{uuid}/';
};

export type AdminAnnouncementsRetrieveResponses = {
    200: AdminAnnouncement;
};

export type AdminAnnouncementsRetrieveResponse = AdminAnnouncementsRetrieveResponses[keyof AdminAnnouncementsRetrieveResponses];

export type AdminAnnouncementsPartialUpdateData = {
    body?: PatchedAdminAnnouncementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/admin-announcements/{uuid}/';
};

export type AdminAnnouncementsPartialUpdateResponses = {
    200: AdminAnnouncement;
};

export type AdminAnnouncementsPartialUpdateResponse = AdminAnnouncementsPartialUpdateResponses[keyof AdminAnnouncementsPartialUpdateResponses];

export type AdminAnnouncementsUpdateData = {
    body: AdminAnnouncementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/admin-announcements/{uuid}/';
};

export type AdminAnnouncementsUpdateResponses = {
    200: AdminAnnouncement;
};

export type AdminAnnouncementsUpdateResponse = AdminAnnouncementsUpdateResponses[keyof AdminAnnouncementsUpdateResponses];

export type AuthTokensListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/auth-tokens/';
};

export type AuthTokensListResponses = {
    200: Array<AuthToken>;
};

export type AuthTokensListResponse = AuthTokensListResponses[keyof AuthTokensListResponses];

export type AuthTokensCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/auth-tokens/';
};

export type AuthTokensCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AuthTokensDestroyData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/auth-tokens/{user_id}/';
};

export type AuthTokensDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AuthTokensDestroyResponse = AuthTokensDestroyResponses[keyof AuthTokensDestroyResponses];

export type AuthTokensRetrieveData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/auth-tokens/{user_id}/';
};

export type AuthTokensRetrieveResponses = {
    200: AuthToken;
};

export type AuthTokensRetrieveResponse = AuthTokensRetrieveResponses[keyof AuthTokensRetrieveResponses];

export type AuthValimoCreateData = {
    body: AuthResultRequest;
    path?: never;
    query?: never;
    url: '/api/auth-valimo/';
};

export type AuthValimoCreateResponses = {
    201: AuthResult;
};

export type AuthValimoCreateResponse = AuthValimoCreateResponses[keyof AuthValimoCreateResponses];

export type AuthValimoResultData = {
    body: AuthResultUuidRequest;
    path?: never;
    query?: never;
    url: '/api/auth-valimo/result/';
};

export type AuthValimoResultResponses = {
    200: AuthResult;
};

export type AuthValimoResultResponse = AuthValimoResultResponses[keyof AuthValimoResultResponses];

export type AutoprovisioningRulesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/autoprovisioning-rules/';
};

export type AutoprovisioningRulesListResponses = {
    200: Array<Rule>;
};

export type AutoprovisioningRulesListResponse = AutoprovisioningRulesListResponses[keyof AutoprovisioningRulesListResponses];

export type AutoprovisioningRulesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/autoprovisioning-rules/';
};

export type AutoprovisioningRulesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AutoprovisioningRulesCreateData = {
    body: RuleRequest;
    path?: never;
    query?: never;
    url: '/api/autoprovisioning-rules/';
};

export type AutoprovisioningRulesCreateResponses = {
    201: Rule;
};

export type AutoprovisioningRulesCreateResponse = AutoprovisioningRulesCreateResponses[keyof AutoprovisioningRulesCreateResponses];

export type AutoprovisioningRulesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/autoprovisioning-rules/{uuid}/';
};

export type AutoprovisioningRulesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AutoprovisioningRulesDestroyResponse = AutoprovisioningRulesDestroyResponses[keyof AutoprovisioningRulesDestroyResponses];

export type AutoprovisioningRulesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/autoprovisioning-rules/{uuid}/';
};

export type AutoprovisioningRulesRetrieveResponses = {
    200: Rule;
};

export type AutoprovisioningRulesRetrieveResponse = AutoprovisioningRulesRetrieveResponses[keyof AutoprovisioningRulesRetrieveResponses];

export type AutoprovisioningRulesPartialUpdateData = {
    body?: PatchedRuleRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/autoprovisioning-rules/{uuid}/';
};

export type AutoprovisioningRulesPartialUpdateResponses = {
    200: Rule;
};

export type AutoprovisioningRulesPartialUpdateResponse = AutoprovisioningRulesPartialUpdateResponses[keyof AutoprovisioningRulesPartialUpdateResponses];

export type AutoprovisioningRulesUpdateData = {
    body: RuleRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/autoprovisioning-rules/{uuid}/';
};

export type AutoprovisioningRulesUpdateResponses = {
    200: Rule;
};

export type AutoprovisioningRulesUpdateResponse = AutoprovisioningRulesUpdateResponses[keyof AutoprovisioningRulesUpdateResponses];

export type AwsImagesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        region?: string;
    };
    url: '/api/aws-images/';
};

export type AwsImagesListResponses = {
    200: Array<AwsImage>;
};

export type AwsImagesListResponse = AwsImagesListResponses[keyof AwsImagesListResponses];

export type AwsImagesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        region?: string;
    };
    url: '/api/aws-images/';
};

export type AwsImagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsImagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-images/{uuid}/';
};

export type AwsImagesRetrieveResponses = {
    200: AwsImage;
};

export type AwsImagesRetrieveResponse = AwsImagesRetrieveResponses[keyof AwsImagesRetrieveResponses];

export type AwsInstancesListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'region' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/aws-instances/';
};

export type AwsInstancesListResponses = {
    200: Array<AwsInstance>;
};

export type AwsInstancesListResponse = AwsInstancesListResponses[keyof AwsInstancesListResponses];

export type AwsInstancesCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/aws-instances/';
};

export type AwsInstancesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsInstancesCreateData = {
    body: AwsInstanceRequest;
    path?: never;
    query?: never;
    url: '/api/aws-instances/';
};

export type AwsInstancesCreateResponses = {
    201: AwsInstance;
};

export type AwsInstancesCreateResponse = AwsInstancesCreateResponses[keyof AwsInstancesCreateResponses];

export type AwsInstancesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/';
};

export type AwsInstancesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AwsInstancesDestroyResponse = AwsInstancesDestroyResponses[keyof AwsInstancesDestroyResponses];

export type AwsInstancesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'region' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'uuid'>;
    };
    url: '/api/aws-instances/{uuid}/';
};

export type AwsInstancesRetrieveResponses = {
    200: AwsInstance;
};

export type AwsInstancesRetrieveResponse = AwsInstancesRetrieveResponses[keyof AwsInstancesRetrieveResponses];

export type AwsInstancesPartialUpdateData = {
    body?: PatchedAwsInstanceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/';
};

export type AwsInstancesPartialUpdateResponses = {
    200: AwsInstance;
};

export type AwsInstancesPartialUpdateResponse = AwsInstancesPartialUpdateResponses[keyof AwsInstancesPartialUpdateResponses];

export type AwsInstancesUpdateData = {
    body: AwsInstanceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/';
};

export type AwsInstancesUpdateResponses = {
    200: AwsInstance;
};

export type AwsInstancesUpdateResponse = AwsInstancesUpdateResponses[keyof AwsInstancesUpdateResponses];

export type AwsInstancesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/pull/';
};

export type AwsInstancesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsInstancesResizeData = {
    body: AwsInstanceResizeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/resize/';
};

export type AwsInstancesResizeResponses = {
    200: AwsInstanceResize;
};

export type AwsInstancesResizeResponse = AwsInstancesResizeResponses[keyof AwsInstancesResizeResponses];

export type AwsInstancesRestartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/restart/';
};

export type AwsInstancesRestartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsInstancesStartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/start/';
};

export type AwsInstancesStartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsInstancesStopData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/stop/';
};

export type AwsInstancesStopResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsInstancesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-instances/{uuid}/unlink/';
};

export type AwsInstancesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsRegionsListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/aws-regions/';
};

export type AwsRegionsListResponses = {
    200: Array<AwsRegion>;
};

export type AwsRegionsListResponse = AwsRegionsListResponses[keyof AwsRegionsListResponses];

export type AwsRegionsCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/aws-regions/';
};

export type AwsRegionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsRegionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-regions/{uuid}/';
};

export type AwsRegionsRetrieveResponses = {
    200: AwsRegion;
};

export type AwsRegionsRetrieveResponse = AwsRegionsRetrieveResponses[keyof AwsRegionsRetrieveResponses];

export type AwsSizesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        region?: string;
    };
    url: '/api/aws-sizes/';
};

export type AwsSizesListResponses = {
    200: Array<AwsSize>;
};

export type AwsSizesListResponse = AwsSizesListResponses[keyof AwsSizesListResponses];

export type AwsSizesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        region?: string;
    };
    url: '/api/aws-sizes/';
};

export type AwsSizesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsSizesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-sizes/{uuid}/';
};

export type AwsSizesRetrieveResponses = {
    200: AwsSize;
};

export type AwsSizesRetrieveResponse = AwsSizesRetrieveResponses[keyof AwsSizesRetrieveResponses];

export type AwsVolumesListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device' | 'error_message' | 'error_traceback' | 'instance' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'region' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'state' | 'url' | 'uuid' | 'volume_type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/aws-volumes/';
};

export type AwsVolumesListResponses = {
    200: Array<AwsVolume>;
};

export type AwsVolumesListResponse = AwsVolumesListResponses[keyof AwsVolumesListResponses];

export type AwsVolumesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/aws-volumes/';
};

export type AwsVolumesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsVolumesCreateData = {
    body: AwsVolumeRequest;
    path?: never;
    query?: never;
    url: '/api/aws-volumes/';
};

export type AwsVolumesCreateResponses = {
    201: AwsVolume;
};

export type AwsVolumesCreateResponse = AwsVolumesCreateResponses[keyof AwsVolumesCreateResponses];

export type AwsVolumesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/';
};

export type AwsVolumesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AwsVolumesDestroyResponse = AwsVolumesDestroyResponses[keyof AwsVolumesDestroyResponses];

export type AwsVolumesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device' | 'error_message' | 'error_traceback' | 'instance' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'region' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'state' | 'url' | 'uuid' | 'volume_type'>;
    };
    url: '/api/aws-volumes/{uuid}/';
};

export type AwsVolumesRetrieveResponses = {
    200: AwsVolume;
};

export type AwsVolumesRetrieveResponse = AwsVolumesRetrieveResponses[keyof AwsVolumesRetrieveResponses];

export type AwsVolumesPartialUpdateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/';
};

export type AwsVolumesPartialUpdateResponses = {
    200: AwsVolume;
};

export type AwsVolumesPartialUpdateResponse = AwsVolumesPartialUpdateResponses[keyof AwsVolumesPartialUpdateResponses];

export type AwsVolumesUpdateData = {
    body: AwsVolumeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/';
};

export type AwsVolumesUpdateResponses = {
    200: AwsVolume;
};

export type AwsVolumesUpdateResponse = AwsVolumesUpdateResponses[keyof AwsVolumesUpdateResponses];

export type AwsVolumesAttachData = {
    body: AwsVolumeAttachRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/attach/';
};

export type AwsVolumesAttachResponses = {
    200: AwsVolumeAttach;
};

export type AwsVolumesAttachResponse = AwsVolumesAttachResponses[keyof AwsVolumesAttachResponses];

export type AwsVolumesDetachData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/detach/';
};

export type AwsVolumesDetachResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsVolumesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/pull/';
};

export type AwsVolumesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AwsVolumesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/aws-volumes/{uuid}/unlink/';
};

export type AwsVolumesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureImagesListData = {
    body?: never;
    path?: never;
    query?: {
        location?: string;
        location_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/azure-images/';
};

export type AzureImagesListResponses = {
    200: Array<AzureImage>;
};

export type AzureImagesListResponse = AzureImagesListResponses[keyof AzureImagesListResponses];

export type AzureImagesCountData = {
    body?: never;
    path?: never;
    query?: {
        location?: string;
        location_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/azure-images/';
};

export type AzureImagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureImagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-images/{uuid}/';
};

export type AzureImagesRetrieveResponses = {
    200: AzureImage;
};

export type AzureImagesRetrieveResponse = AzureImagesRetrieveResponses[keyof AzureImagesRetrieveResponses];

export type AzureLocationsListData = {
    body?: never;
    path?: never;
    query?: {
        has_sizes?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/azure-locations/';
};

export type AzureLocationsListResponses = {
    200: Array<AzureLocation>;
};

export type AzureLocationsListResponse = AzureLocationsListResponses[keyof AzureLocationsListResponses];

export type AzureLocationsCountData = {
    body?: never;
    path?: never;
    query?: {
        has_sizes?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/azure-locations/';
};

export type AzureLocationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureLocationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-locations/{uuid}/';
};

export type AzureLocationsRetrieveResponses = {
    200: AzureLocation;
};

export type AzureLocationsRetrieveResponse = AzureLocationsRetrieveResponses[keyof AzureLocationsRetrieveResponses];

export type AzurePublicIpsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_group' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-public-ips/';
};

export type AzurePublicIpsListResponses = {
    200: Array<AzurePublicIp>;
};

export type AzurePublicIpsListResponse = AzurePublicIpsListResponses[keyof AzurePublicIpsListResponses];

export type AzurePublicIpsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-public-ips/';
};

export type AzurePublicIpsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzurePublicIpsCreateData = {
    body: AzurePublicIpRequest;
    path?: never;
    query?: never;
    url: '/api/azure-public-ips/';
};

export type AzurePublicIpsCreateResponses = {
    201: AzurePublicIp;
};

export type AzurePublicIpsCreateResponse = AzurePublicIpsCreateResponses[keyof AzurePublicIpsCreateResponses];

export type AzurePublicIpsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-public-ips/{uuid}/';
};

export type AzurePublicIpsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AzurePublicIpsDestroyResponse = AzurePublicIpsDestroyResponses[keyof AzurePublicIpsDestroyResponses];

export type AzurePublicIpsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_group' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/azure-public-ips/{uuid}/';
};

export type AzurePublicIpsRetrieveResponses = {
    200: AzurePublicIp;
};

export type AzurePublicIpsRetrieveResponse = AzurePublicIpsRetrieveResponses[keyof AzurePublicIpsRetrieveResponses];

export type AzurePublicIpsPartialUpdateData = {
    body?: PatchedAzurePublicIpRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-public-ips/{uuid}/';
};

export type AzurePublicIpsPartialUpdateResponses = {
    200: AzurePublicIp;
};

export type AzurePublicIpsPartialUpdateResponse = AzurePublicIpsPartialUpdateResponses[keyof AzurePublicIpsPartialUpdateResponses];

export type AzurePublicIpsUpdateData = {
    body: AzurePublicIpRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-public-ips/{uuid}/';
};

export type AzurePublicIpsUpdateResponses = {
    200: AzurePublicIp;
};

export type AzurePublicIpsUpdateResponse = AzurePublicIpsUpdateResponses[keyof AzurePublicIpsUpdateResponses];

export type AzurePublicIpsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-public-ips/{uuid}/pull/';
};

export type AzurePublicIpsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzurePublicIpsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-public-ips/{uuid}/unlink/';
};

export type AzurePublicIpsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureResourceGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/azure-resource-groups/';
};

export type AzureResourceGroupsListResponses = {
    200: Array<AzureResourceGroup>;
};

export type AzureResourceGroupsListResponse = AzureResourceGroupsListResponses[keyof AzureResourceGroupsListResponses];

export type AzureResourceGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/azure-resource-groups/';
};

export type AzureResourceGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureResourceGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/azure-resource-groups/{uuid}/';
};

export type AzureResourceGroupsRetrieveResponses = {
    200: AzureResourceGroup;
};

export type AzureResourceGroupsRetrieveResponse = AzureResourceGroupsRetrieveResponses[keyof AzureResourceGroupsRetrieveResponses];

export type AzureSizesListData = {
    body?: never;
    path?: never;
    query?: {
        location?: string;
        location_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        zone?: number;
    };
    url: '/api/azure-sizes/';
};

export type AzureSizesListResponses = {
    200: Array<AzureSize>;
};

export type AzureSizesListResponse = AzureSizesListResponses[keyof AzureSizesListResponses];

export type AzureSizesCountData = {
    body?: never;
    path?: never;
    query?: {
        location?: string;
        location_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        zone?: number;
    };
    url: '/api/azure-sizes/';
};

export type AzureSizesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSizesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sizes/{uuid}/';
};

export type AzureSizesRetrieveResponses = {
    200: AzureSize;
};

export type AzureSizesRetrieveResponse = AzureSizesRetrieveResponses[keyof AzureSizesRetrieveResponses];

export type AzureSqlDatabasesListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'charset' | 'collation' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location_name' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_group_name' | 'resource_type' | 'server' | 'server_marketplace_uuid' | 'server_name' | 'server_uuid' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        server?: string;
        server_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-sql-databases/';
};

export type AzureSqlDatabasesListResponses = {
    200: Array<AzureSqlDatabase>;
};

export type AzureSqlDatabasesListResponse = AzureSqlDatabasesListResponses[keyof AzureSqlDatabasesListResponses];

export type AzureSqlDatabasesCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        server?: string;
        server_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-sql-databases/';
};

export type AzureSqlDatabasesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSqlDatabasesCreateData = {
    body: AzureSqlDatabaseRequest;
    path?: never;
    query?: never;
    url: '/api/azure-sql-databases/';
};

export type AzureSqlDatabasesCreateResponses = {
    201: AzureSqlDatabase;
};

export type AzureSqlDatabasesCreateResponse = AzureSqlDatabasesCreateResponses[keyof AzureSqlDatabasesCreateResponses];

export type AzureSqlDatabasesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-databases/{uuid}/';
};

export type AzureSqlDatabasesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AzureSqlDatabasesDestroyResponse = AzureSqlDatabasesDestroyResponses[keyof AzureSqlDatabasesDestroyResponses];

export type AzureSqlDatabasesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'charset' | 'collation' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'location_name' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_group_name' | 'resource_type' | 'server' | 'server_marketplace_uuid' | 'server_name' | 'server_uuid' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/azure-sql-databases/{uuid}/';
};

export type AzureSqlDatabasesRetrieveResponses = {
    200: AzureSqlDatabase;
};

export type AzureSqlDatabasesRetrieveResponse = AzureSqlDatabasesRetrieveResponses[keyof AzureSqlDatabasesRetrieveResponses];

export type AzureSqlDatabasesPartialUpdateData = {
    body?: PatchedAzureSqlDatabaseRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-databases/{uuid}/';
};

export type AzureSqlDatabasesPartialUpdateResponses = {
    200: AzureSqlDatabase;
};

export type AzureSqlDatabasesPartialUpdateResponse = AzureSqlDatabasesPartialUpdateResponses[keyof AzureSqlDatabasesPartialUpdateResponses];

export type AzureSqlDatabasesUpdateData = {
    body: AzureSqlDatabaseRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-databases/{uuid}/';
};

export type AzureSqlDatabasesUpdateResponses = {
    200: AzureSqlDatabase;
};

export type AzureSqlDatabasesUpdateResponse = AzureSqlDatabasesUpdateResponses[keyof AzureSqlDatabasesUpdateResponses];

export type AzureSqlDatabasesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-databases/{uuid}/pull/';
};

export type AzureSqlDatabasesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSqlDatabasesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-databases/{uuid}/unlink/';
};

export type AzureSqlDatabasesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSqlServersListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'fqdn' | 'is_limit_based' | 'is_usage_based' | 'location' | 'location_name' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'password' | 'project' | 'project_name' | 'project_uuid' | 'resource_group' | 'resource_group_name' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'storage_mb' | 'url' | 'username' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-sql-servers/';
};

export type AzureSqlServersListResponses = {
    200: Array<AzureSqlServer>;
};

export type AzureSqlServersListResponse = AzureSqlServersListResponses[keyof AzureSqlServersListResponses];

export type AzureSqlServersCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-sql-servers/';
};

export type AzureSqlServersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSqlServersCreateData = {
    body: AzureSqlServerRequest;
    path?: never;
    query?: never;
    url: '/api/azure-sql-servers/';
};

export type AzureSqlServersCreateResponses = {
    201: AzureSqlServer;
};

export type AzureSqlServersCreateResponse = AzureSqlServersCreateResponses[keyof AzureSqlServersCreateResponses];

export type AzureSqlServersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/';
};

export type AzureSqlServersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AzureSqlServersDestroyResponse = AzureSqlServersDestroyResponses[keyof AzureSqlServersDestroyResponses];

export type AzureSqlServersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'fqdn' | 'is_limit_based' | 'is_usage_based' | 'location' | 'location_name' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'password' | 'project' | 'project_name' | 'project_uuid' | 'resource_group' | 'resource_group_name' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'storage_mb' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/azure-sql-servers/{uuid}/';
};

export type AzureSqlServersRetrieveResponses = {
    200: AzureSqlServer;
};

export type AzureSqlServersRetrieveResponse = AzureSqlServersRetrieveResponses[keyof AzureSqlServersRetrieveResponses];

export type AzureSqlServersPartialUpdateData = {
    body?: PatchedAzureSqlServerRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/';
};

export type AzureSqlServersPartialUpdateResponses = {
    200: AzureSqlServer;
};

export type AzureSqlServersPartialUpdateResponse = AzureSqlServersPartialUpdateResponses[keyof AzureSqlServersPartialUpdateResponses];

export type AzureSqlServersUpdateData = {
    body: AzureSqlServerRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/';
};

export type AzureSqlServersUpdateResponses = {
    200: AzureSqlServer;
};

export type AzureSqlServersUpdateResponse = AzureSqlServersUpdateResponses[keyof AzureSqlServersUpdateResponses];

export type AzureSqlServersCreateDatabaseData = {
    body: AzureSqlDatabaseCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/create_database/';
};

export type AzureSqlServersCreateDatabaseResponses = {
    200: AzureSqlDatabaseCreate;
};

export type AzureSqlServersCreateDatabaseResponse = AzureSqlServersCreateDatabaseResponses[keyof AzureSqlServersCreateDatabaseResponses];

export type AzureSqlServersPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/pull/';
};

export type AzureSqlServersPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureSqlServersUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-sql-servers/{uuid}/unlink/';
};

export type AzureSqlServersUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'location' | 'location_name' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'password' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'resource_group' | 'resource_group_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'size_name' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'username' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-virtualmachines/';
};

export type AzureVirtualmachinesListResponses = {
    200: Array<AzureVirtualMachine>;
};

export type AzureVirtualmachinesListResponse = AzureVirtualmachinesListResponses[keyof AzureVirtualmachinesListResponses];

export type AzureVirtualmachinesCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        resource_group?: string;
        resource_group_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/azure-virtualmachines/';
};

export type AzureVirtualmachinesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesCreateData = {
    body: AzureVirtualMachineRequest;
    path?: never;
    query?: never;
    url: '/api/azure-virtualmachines/';
};

export type AzureVirtualmachinesCreateResponses = {
    201: AzureVirtualMachine;
};

export type AzureVirtualmachinesCreateResponse = AzureVirtualmachinesCreateResponses[keyof AzureVirtualmachinesCreateResponses];

export type AzureVirtualmachinesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/';
};

export type AzureVirtualmachinesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type AzureVirtualmachinesDestroyResponse = AzureVirtualmachinesDestroyResponses[keyof AzureVirtualmachinesDestroyResponses];

export type AzureVirtualmachinesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'location' | 'location_name' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'password' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'resource_group' | 'resource_group_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'size_name' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'username' | 'uuid'>;
    };
    url: '/api/azure-virtualmachines/{uuid}/';
};

export type AzureVirtualmachinesRetrieveResponses = {
    200: AzureVirtualMachine;
};

export type AzureVirtualmachinesRetrieveResponse = AzureVirtualmachinesRetrieveResponses[keyof AzureVirtualmachinesRetrieveResponses];

export type AzureVirtualmachinesPartialUpdateData = {
    body?: PatchedAzureVirtualMachineRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/';
};

export type AzureVirtualmachinesPartialUpdateResponses = {
    200: AzureVirtualMachine;
};

export type AzureVirtualmachinesPartialUpdateResponse = AzureVirtualmachinesPartialUpdateResponses[keyof AzureVirtualmachinesPartialUpdateResponses];

export type AzureVirtualmachinesUpdateData = {
    body: AzureVirtualMachineRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/';
};

export type AzureVirtualmachinesUpdateResponses = {
    200: AzureVirtualMachine;
};

export type AzureVirtualmachinesUpdateResponse = AzureVirtualmachinesUpdateResponses[keyof AzureVirtualmachinesUpdateResponses];

export type AzureVirtualmachinesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/pull/';
};

export type AzureVirtualmachinesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesRestartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/restart/';
};

export type AzureVirtualmachinesRestartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesStartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/start/';
};

export type AzureVirtualmachinesStartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesStopData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/stop/';
};

export type AzureVirtualmachinesStopResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type AzureVirtualmachinesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/azure-virtualmachines/{uuid}/unlink/';
};

export type AzureVirtualmachinesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BackendResourceRequestsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        /**
         * Modified after
         */
        finished?: string;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Created after
         */
        started?: string;
        state?: Array<'Done' | 'Erred' | 'Processing' | 'Sent'>;
    };
    url: '/api/backend-resource-requests/';
};

export type BackendResourceRequestsListResponses = {
    200: Array<BackendResourceReq>;
};

export type BackendResourceRequestsListResponse = BackendResourceRequestsListResponses[keyof BackendResourceRequestsListResponses];

export type BackendResourceRequestsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        /**
         * Modified after
         */
        finished?: string;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Created after
         */
        started?: string;
        state?: Array<'Done' | 'Erred' | 'Processing' | 'Sent'>;
    };
    url: '/api/backend-resource-requests/';
};

export type BackendResourceRequestsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BackendResourceRequestsCreateData = {
    body: BackendResourceReqRequest;
    path?: never;
    query?: never;
    url: '/api/backend-resource-requests/';
};

export type BackendResourceRequestsCreateResponses = {
    201: BackendResourceReq;
};

export type BackendResourceRequestsCreateResponse = BackendResourceRequestsCreateResponses[keyof BackendResourceRequestsCreateResponses];

export type BackendResourceRequestsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resource-requests/{uuid}/';
};

export type BackendResourceRequestsRetrieveResponses = {
    200: BackendResourceReq;
};

export type BackendResourceRequestsRetrieveResponse = BackendResourceRequestsRetrieveResponses[keyof BackendResourceRequestsRetrieveResponses];

export type BackendResourceRequestsSetDoneData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resource-requests/{uuid}/set_done/';
};

export type BackendResourceRequestsSetDoneResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type BackendResourceRequestsSetDoneResponse = BackendResourceRequestsSetDoneResponses[keyof BackendResourceRequestsSetDoneResponses];

export type BackendResourceRequestsSetErredData = {
    body?: BackendResourceRequestSetErredRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resource-requests/{uuid}/set_erred/';
};

export type BackendResourceRequestsSetErredResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type BackendResourceRequestsSetErredResponse = BackendResourceRequestsSetErredResponses[keyof BackendResourceRequestsSetErredResponses];

export type BackendResourceRequestsStartProcessingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resource-requests/{uuid}/start_processing/';
};

export type BackendResourceRequestsStartProcessingResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type BackendResourceRequestsStartProcessingResponse = BackendResourceRequestsStartProcessingResponses[keyof BackendResourceRequestsStartProcessingResponses];

export type BackendResourcesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        /**
         * Created after
         */
        created?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
    };
    url: '/api/backend-resources/';
};

export type BackendResourcesListResponses = {
    200: Array<BackendResource>;
};

export type BackendResourcesListResponse = BackendResourcesListResponses[keyof BackendResourcesListResponses];

export type BackendResourcesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        /**
         * Created after
         */
        created?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
    };
    url: '/api/backend-resources/';
};

export type BackendResourcesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BackendResourcesCreateData = {
    body: BackendResourceRequest;
    path?: never;
    query?: never;
    url: '/api/backend-resources/';
};

export type BackendResourcesCreateResponses = {
    201: BackendResource;
};

export type BackendResourcesCreateResponse = BackendResourcesCreateResponses[keyof BackendResourcesCreateResponses];

export type BackendResourcesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resources/{uuid}/';
};

export type BackendResourcesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type BackendResourcesDestroyResponse = BackendResourcesDestroyResponses[keyof BackendResourcesDestroyResponses];

export type BackendResourcesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resources/{uuid}/';
};

export type BackendResourcesRetrieveResponses = {
    200: BackendResource;
};

export type BackendResourcesRetrieveResponse = BackendResourcesRetrieveResponses[keyof BackendResourcesRetrieveResponses];

export type BackendResourcesImportResourceData = {
    body?: BackendResourceImportRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/backend-resources/{uuid}/import_resource/';
};

export type BackendResourcesImportResourceResponses = {
    200: Resource;
};

export type BackendResourcesImportResourceResponse = BackendResourcesImportResourceResponses[keyof BackendResourcesImportResourceResponses];

export type BillingTotalCostRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        accounting_is_running?: boolean;
        customer_uuid?: string;
        month?: number;
        name?: string;
        year?: number;
    };
    url: '/api/billing-total-cost/';
};

export type BillingTotalCostRetrieveResponses = {
    200: TotalCustomerCost;
};

export type BillingTotalCostRetrieveResponse = BillingTotalCostRetrieveResponses[keyof BillingTotalCostRetrieveResponses];

export type BookingOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'googlecalendar' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/booking-offerings/';
};

export type BookingOfferingsListResponses = {
    200: Array<Offering>;
};

export type BookingOfferingsListResponse = BookingOfferingsListResponses[keyof BookingOfferingsListResponses];

export type BookingOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/booking-offerings/';
};

export type BookingOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'googlecalendar' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/booking-offerings/{uuid}/';
};

export type BookingOfferingsRetrieveResponses = {
    200: Offering;
};

export type BookingOfferingsRetrieveResponse = BookingOfferingsRetrieveResponses[keyof BookingOfferingsRetrieveResponses];

export type BookingOfferingsGoogleCalendarSyncData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/booking-offerings/{uuid}/google_calendar_sync/';
};

export type BookingOfferingsGoogleCalendarSyncResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingOfferingsShareGoogleCalendarData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/booking-offerings/{uuid}/share_google_calendar/';
};

export type BookingOfferingsShareGoogleCalendarResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingOfferingsUnshareGoogleCalendarData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/booking-offerings/{uuid}/unshare_google_calendar/';
};

export type BookingOfferingsUnshareGoogleCalendarResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingResourcesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        connected_customer_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'consumer_reviewed_by' | 'consumer_reviewed_by_full_name' | 'consumer_reviewed_by_username' | 'created' | 'created_by' | 'created_by_full_name' | 'created_by_username' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slots' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-schedules' | '-type' | 'created' | 'name' | 'schedules' | 'type'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/booking-resources/';
};

export type BookingResourcesListResponses = {
    200: Array<BookingResource>;
};

export type BookingResourcesListResponse = BookingResourcesListResponses[keyof BookingResourcesListResponses];

export type BookingResourcesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        connected_customer_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-schedules' | '-type' | 'created' | 'name' | 'schedules' | 'type'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/booking-resources/';
};

export type BookingResourcesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingResourcesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'consumer_reviewed_by' | 'consumer_reviewed_by_full_name' | 'consumer_reviewed_by_username' | 'created' | 'created_by' | 'created_by_full_name' | 'created_by_username' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slots' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/booking-resources/{uuid}/';
};

export type BookingResourcesRetrieveResponses = {
    200: BookingResource;
};

export type BookingResourcesRetrieveResponse = BookingResourcesRetrieveResponses[keyof BookingResourcesRetrieveResponses];

export type BookingResourcesAcceptData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/booking-resources/{uuid}/accept/';
};

export type BookingResourcesAcceptResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BookingResourcesRejectData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/booking-resources/{uuid}/reject/';
};

export type BookingResourcesRejectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BroadcastMessageTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/broadcast-message-templates/';
};

export type BroadcastMessageTemplatesListResponses = {
    200: Array<MessageTemplate>;
};

export type BroadcastMessageTemplatesListResponse = BroadcastMessageTemplatesListResponses[keyof BroadcastMessageTemplatesListResponses];

export type BroadcastMessageTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/broadcast-message-templates/';
};

export type BroadcastMessageTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BroadcastMessageTemplatesCreateData = {
    body: MessageTemplateRequest;
    path?: never;
    query?: never;
    url: '/api/broadcast-message-templates/';
};

export type BroadcastMessageTemplatesCreateResponses = {
    201: MessageTemplate;
};

export type BroadcastMessageTemplatesCreateResponse = BroadcastMessageTemplatesCreateResponses[keyof BroadcastMessageTemplatesCreateResponses];

export type BroadcastMessageTemplatesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-message-templates/{uuid}/';
};

export type BroadcastMessageTemplatesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type BroadcastMessageTemplatesDestroyResponse = BroadcastMessageTemplatesDestroyResponses[keyof BroadcastMessageTemplatesDestroyResponses];

export type BroadcastMessageTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-message-templates/{uuid}/';
};

export type BroadcastMessageTemplatesRetrieveResponses = {
    200: MessageTemplate;
};

export type BroadcastMessageTemplatesRetrieveResponse = BroadcastMessageTemplatesRetrieveResponses[keyof BroadcastMessageTemplatesRetrieveResponses];

export type BroadcastMessageTemplatesPartialUpdateData = {
    body?: PatchedMessageTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-message-templates/{uuid}/';
};

export type BroadcastMessageTemplatesPartialUpdateResponses = {
    200: MessageTemplate;
};

export type BroadcastMessageTemplatesPartialUpdateResponse = BroadcastMessageTemplatesPartialUpdateResponses[keyof BroadcastMessageTemplatesPartialUpdateResponses];

export type BroadcastMessageTemplatesUpdateData = {
    body: MessageTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-message-templates/{uuid}/';
};

export type BroadcastMessageTemplatesUpdateResponses = {
    200: MessageTemplate;
};

export type BroadcastMessageTemplatesUpdateResponse = BroadcastMessageTemplatesUpdateResponses[keyof BroadcastMessageTemplatesUpdateResponses];

export type BroadcastMessagesListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'author_full_name' | 'body' | 'created' | 'emails' | 'query' | 'send_at' | 'state' | 'subject' | 'uuid'>;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-author_full_name' | '-created' | '-subject' | 'author_full_name' | 'created' | 'subject'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: 'DRAFT' | 'SCHEDULED' | 'SENT';
        subject?: string;
    };
    url: '/api/broadcast-messages/';
};

export type BroadcastMessagesListResponses = {
    200: Array<BroadcastMessage>;
};

export type BroadcastMessagesListResponse = BroadcastMessagesListResponses[keyof BroadcastMessagesListResponses];

export type BroadcastMessagesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-author_full_name' | '-created' | '-subject' | 'author_full_name' | 'created' | 'subject'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: 'DRAFT' | 'SCHEDULED' | 'SENT';
        subject?: string;
    };
    url: '/api/broadcast-messages/';
};

export type BroadcastMessagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BroadcastMessagesCreateData = {
    body: BroadcastMessageRequest;
    path?: never;
    query?: never;
    url: '/api/broadcast-messages/';
};

export type BroadcastMessagesCreateResponses = {
    201: BroadcastMessage;
};

export type BroadcastMessagesCreateResponse = BroadcastMessagesCreateResponses[keyof BroadcastMessagesCreateResponses];

export type BroadcastMessagesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-messages/{uuid}/';
};

export type BroadcastMessagesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type BroadcastMessagesDestroyResponse = BroadcastMessagesDestroyResponses[keyof BroadcastMessagesDestroyResponses];

export type BroadcastMessagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'author_full_name' | 'body' | 'created' | 'emails' | 'query' | 'send_at' | 'state' | 'subject' | 'uuid'>;
    };
    url: '/api/broadcast-messages/{uuid}/';
};

export type BroadcastMessagesRetrieveResponses = {
    200: BroadcastMessage;
};

export type BroadcastMessagesRetrieveResponse = BroadcastMessagesRetrieveResponses[keyof BroadcastMessagesRetrieveResponses];

export type BroadcastMessagesPartialUpdateData = {
    body?: PatchedBroadcastMessageRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-messages/{uuid}/';
};

export type BroadcastMessagesPartialUpdateResponses = {
    200: BroadcastMessage;
};

export type BroadcastMessagesPartialUpdateResponse = BroadcastMessagesPartialUpdateResponses[keyof BroadcastMessagesPartialUpdateResponses];

export type BroadcastMessagesUpdateData = {
    body: BroadcastMessageRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-messages/{uuid}/';
};

export type BroadcastMessagesUpdateResponses = {
    200: BroadcastMessage;
};

export type BroadcastMessagesUpdateResponse = BroadcastMessagesUpdateResponses[keyof BroadcastMessagesUpdateResponses];

export type BroadcastMessagesScheduleData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-messages/{uuid}/schedule/';
};

export type BroadcastMessagesScheduleResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BroadcastMessagesSendData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/broadcast-messages/{uuid}/send/';
};

export type BroadcastMessagesSendResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type BroadcastMessagesRecipientsRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'author_full_name' | 'body' | 'created' | 'emails' | 'query' | 'send_at' | 'state' | 'subject' | 'uuid'>;
    };
    url: '/api/broadcast-messages/recipients/';
};

export type BroadcastMessagesRecipientsRetrieveResponses = {
    200: BroadcastMessage;
};

export type BroadcastMessagesRecipientsRetrieveResponse = BroadcastMessagesRecipientsRetrieveResponses[keyof BroadcastMessagesRecipientsRetrieveResponses];

export type BroadcastMessagesRecipientsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/broadcast-messages/recipients/';
};

export type BroadcastMessagesRecipientsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CallManagingOrganisationsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | 'customer_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-managing-organisations/';
};

export type CallManagingOrganisationsListResponses = {
    200: Array<CallManagingOrganisation>;
};

export type CallManagingOrganisationsListResponse = CallManagingOrganisationsListResponses[keyof CallManagingOrganisationsListResponses];

export type CallManagingOrganisationsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | 'customer_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-managing-organisations/';
};

export type CallManagingOrganisationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CallManagingOrganisationsCreateData = {
    body: CallManagingOrganisationRequest;
    path?: never;
    query?: never;
    url: '/api/call-managing-organisations/';
};

export type CallManagingOrganisationsCreateResponses = {
    201: CallManagingOrganisation;
};

export type CallManagingOrganisationsCreateResponse = CallManagingOrganisationsCreateResponses[keyof CallManagingOrganisationsCreateResponses];

export type CallManagingOrganisationsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/';
};

export type CallManagingOrganisationsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type CallManagingOrganisationsDestroyResponse = CallManagingOrganisationsDestroyResponses[keyof CallManagingOrganisationsDestroyResponses];

export type CallManagingOrganisationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/';
};

export type CallManagingOrganisationsRetrieveResponses = {
    200: CallManagingOrganisation;
};

export type CallManagingOrganisationsRetrieveResponse = CallManagingOrganisationsRetrieveResponses[keyof CallManagingOrganisationsRetrieveResponses];

export type CallManagingOrganisationsPartialUpdateData = {
    body?: PatchedCallManagingOrganisationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/';
};

export type CallManagingOrganisationsPartialUpdateResponses = {
    200: CallManagingOrganisation;
};

export type CallManagingOrganisationsPartialUpdateResponse = CallManagingOrganisationsPartialUpdateResponses[keyof CallManagingOrganisationsPartialUpdateResponses];

export type CallManagingOrganisationsUpdateData = {
    body: CallManagingOrganisationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/';
};

export type CallManagingOrganisationsUpdateResponses = {
    200: CallManagingOrganisation;
};

export type CallManagingOrganisationsUpdateResponse = CallManagingOrganisationsUpdateResponses[keyof CallManagingOrganisationsUpdateResponses];

export type CallManagingOrganisationsAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/add_user/';
};

export type CallManagingOrganisationsAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type CallManagingOrganisationsAddUserResponse = CallManagingOrganisationsAddUserResponses[keyof CallManagingOrganisationsAddUserResponses];

export type CallManagingOrganisationsDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/delete_user/';
};

export type CallManagingOrganisationsDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CallManagingOrganisationsListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/call-managing-organisations/{uuid}/list_users/';
};

export type CallManagingOrganisationsListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type CallManagingOrganisationsListUsersListResponse = CallManagingOrganisationsListUsersListResponses[keyof CallManagingOrganisationsListUsersListResponses];

export type CallManagingOrganisationsStatsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/stats/';
};

export type CallManagingOrganisationsStatsRetrieveResponses = {
    200: CallManagingOrganisationStat;
};

export type CallManagingOrganisationsStatsRetrieveResponse = CallManagingOrganisationsStatsRetrieveResponses[keyof CallManagingOrganisationsStatsRetrieveResponses];

export type CallManagingOrganisationsUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-managing-organisations/{uuid}/update_user/';
};

export type CallManagingOrganisationsUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type CallManagingOrganisationsUpdateUserResponse = CallManagingOrganisationsUpdateUserResponses[keyof CallManagingOrganisationsUpdateUserResponses];

export type CallProposalProjectRoleMappingsListData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-proposal-project-role-mappings/';
};

export type CallProposalProjectRoleMappingsListResponses = {
    200: Array<ProposalProjectRoleMapping>;
};

export type CallProposalProjectRoleMappingsListResponse = CallProposalProjectRoleMappingsListResponses[keyof CallProposalProjectRoleMappingsListResponses];

export type CallProposalProjectRoleMappingsCountData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-proposal-project-role-mappings/';
};

export type CallProposalProjectRoleMappingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CallProposalProjectRoleMappingsCreateData = {
    body: ProposalProjectRoleMappingRequest;
    path?: never;
    query?: never;
    url: '/api/call-proposal-project-role-mappings/';
};

export type CallProposalProjectRoleMappingsCreateResponses = {
    201: ProposalProjectRoleMapping;
};

export type CallProposalProjectRoleMappingsCreateResponse = CallProposalProjectRoleMappingsCreateResponses[keyof CallProposalProjectRoleMappingsCreateResponses];

export type CallProposalProjectRoleMappingsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-proposal-project-role-mappings/{uuid}/';
};

export type CallProposalProjectRoleMappingsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type CallProposalProjectRoleMappingsDestroyResponse = CallProposalProjectRoleMappingsDestroyResponses[keyof CallProposalProjectRoleMappingsDestroyResponses];

export type CallProposalProjectRoleMappingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-proposal-project-role-mappings/{uuid}/';
};

export type CallProposalProjectRoleMappingsRetrieveResponses = {
    200: ProposalProjectRoleMapping;
};

export type CallProposalProjectRoleMappingsRetrieveResponse = CallProposalProjectRoleMappingsRetrieveResponses[keyof CallProposalProjectRoleMappingsRetrieveResponses];

export type CallProposalProjectRoleMappingsPartialUpdateData = {
    body?: PatchedProposalProjectRoleMappingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-proposal-project-role-mappings/{uuid}/';
};

export type CallProposalProjectRoleMappingsPartialUpdateResponses = {
    200: ProposalProjectRoleMapping;
};

export type CallProposalProjectRoleMappingsPartialUpdateResponse = CallProposalProjectRoleMappingsPartialUpdateResponses[keyof CallProposalProjectRoleMappingsPartialUpdateResponses];

export type CallProposalProjectRoleMappingsUpdateData = {
    body: ProposalProjectRoleMappingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-proposal-project-role-mappings/{uuid}/';
};

export type CallProposalProjectRoleMappingsUpdateResponses = {
    200: ProposalProjectRoleMapping;
};

export type CallProposalProjectRoleMappingsUpdateResponse = CallProposalProjectRoleMappingsUpdateResponses[keyof CallProposalProjectRoleMappingsUpdateResponses];

export type CallRoundsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-rounds/';
};

export type CallRoundsListResponses = {
    200: Array<CallRound>;
};

export type CallRoundsListResponse = CallRoundsListResponses[keyof CallRoundsListResponses];

export type CallRoundsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-rounds/';
};

export type CallRoundsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CallRoundsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/call-rounds/{uuid}/';
};

export type CallRoundsRetrieveResponses = {
    200: CallRound;
};

export type CallRoundsRetrieveResponse = CallRoundsRetrieveResponses[keyof CallRoundsRetrieveResponses];

export type CallRoundsReviewersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/call-rounds/{uuid}/reviewers/';
};

export type CallRoundsReviewersListResponses = {
    200: Array<RoundReviewer>;
};

export type CallRoundsReviewersListResponse = CallRoundsReviewersListResponses[keyof CallRoundsReviewersListResponses];

export type CeleryStatsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/celery-stats/';
};

export type CeleryStatsRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin/';
};

export type ChecklistsAdminListResponses = {
    200: Array<Checklist>;
};

export type ChecklistsAdminListResponse = ChecklistsAdminListResponses[keyof ChecklistsAdminListResponses];

export type ChecklistsAdminCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin/';
};

export type ChecklistsAdminCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminCreateData = {
    body: ChecklistRequest;
    path?: never;
    query?: never;
    url: '/api/checklists-admin/';
};

export type ChecklistsAdminCreateResponses = {
    201: Checklist;
};

export type ChecklistsAdminCreateResponse = ChecklistsAdminCreateResponses[keyof ChecklistsAdminCreateResponses];

export type ChecklistsAdminCategoriesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin-categories/';
};

export type ChecklistsAdminCategoriesListResponses = {
    200: Array<ChecklistCategory>;
};

export type ChecklistsAdminCategoriesListResponse = ChecklistsAdminCategoriesListResponses[keyof ChecklistsAdminCategoriesListResponses];

export type ChecklistsAdminCategoriesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin-categories/';
};

export type ChecklistsAdminCategoriesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminCategoriesCreateData = {
    body: ChecklistCategoryRequest;
    path?: never;
    query?: never;
    url: '/api/checklists-admin-categories/';
};

export type ChecklistsAdminCategoriesCreateResponses = {
    201: ChecklistCategory;
};

export type ChecklistsAdminCategoriesCreateResponse = ChecklistsAdminCategoriesCreateResponses[keyof ChecklistsAdminCategoriesCreateResponses];

export type ChecklistsAdminCategoriesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-categories/{uuid}/';
};

export type ChecklistsAdminCategoriesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ChecklistsAdminCategoriesDestroyResponse = ChecklistsAdminCategoriesDestroyResponses[keyof ChecklistsAdminCategoriesDestroyResponses];

export type ChecklistsAdminCategoriesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-categories/{uuid}/';
};

export type ChecklistsAdminCategoriesRetrieveResponses = {
    200: ChecklistCategory;
};

export type ChecklistsAdminCategoriesRetrieveResponse = ChecklistsAdminCategoriesRetrieveResponses[keyof ChecklistsAdminCategoriesRetrieveResponses];

export type ChecklistsAdminCategoriesPartialUpdateData = {
    body?: PatchedChecklistCategoryRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-categories/{uuid}/';
};

export type ChecklistsAdminCategoriesPartialUpdateResponses = {
    200: ChecklistCategory;
};

export type ChecklistsAdminCategoriesPartialUpdateResponse = ChecklistsAdminCategoriesPartialUpdateResponses[keyof ChecklistsAdminCategoriesPartialUpdateResponses];

export type ChecklistsAdminCategoriesUpdateData = {
    body: ChecklistCategoryRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-categories/{uuid}/';
};

export type ChecklistsAdminCategoriesUpdateResponses = {
    200: ChecklistCategory;
};

export type ChecklistsAdminCategoriesUpdateResponse = ChecklistsAdminCategoriesUpdateResponses[keyof ChecklistsAdminCategoriesUpdateResponses];

export type ChecklistsAdminQuestionDependenciesListData = {
    body?: never;
    path?: never;
    query?: {
        depends_on_question_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        question_uuid?: string;
    };
    url: '/api/checklists-admin-question-dependencies/';
};

export type ChecklistsAdminQuestionDependenciesListResponses = {
    200: Array<QuestionDependency>;
};

export type ChecklistsAdminQuestionDependenciesListResponse = ChecklistsAdminQuestionDependenciesListResponses[keyof ChecklistsAdminQuestionDependenciesListResponses];

export type ChecklistsAdminQuestionDependenciesCountData = {
    body?: never;
    path?: never;
    query?: {
        depends_on_question_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        question_uuid?: string;
    };
    url: '/api/checklists-admin-question-dependencies/';
};

export type ChecklistsAdminQuestionDependenciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminQuestionDependenciesCreateData = {
    body: QuestionDependencyRequest;
    path?: never;
    query?: never;
    url: '/api/checklists-admin-question-dependencies/';
};

export type ChecklistsAdminQuestionDependenciesCreateResponses = {
    201: QuestionDependency;
};

export type ChecklistsAdminQuestionDependenciesCreateResponse = ChecklistsAdminQuestionDependenciesCreateResponses[keyof ChecklistsAdminQuestionDependenciesCreateResponses];

export type ChecklistsAdminQuestionDependenciesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-dependencies/{uuid}/';
};

export type ChecklistsAdminQuestionDependenciesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ChecklistsAdminQuestionDependenciesDestroyResponse = ChecklistsAdminQuestionDependenciesDestroyResponses[keyof ChecklistsAdminQuestionDependenciesDestroyResponses];

export type ChecklistsAdminQuestionDependenciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-dependencies/{uuid}/';
};

export type ChecklistsAdminQuestionDependenciesRetrieveResponses = {
    200: QuestionDependency;
};

export type ChecklistsAdminQuestionDependenciesRetrieveResponse = ChecklistsAdminQuestionDependenciesRetrieveResponses[keyof ChecklistsAdminQuestionDependenciesRetrieveResponses];

export type ChecklistsAdminQuestionDependenciesPartialUpdateData = {
    body?: PatchedQuestionDependencyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-dependencies/{uuid}/';
};

export type ChecklistsAdminQuestionDependenciesPartialUpdateResponses = {
    200: QuestionDependency;
};

export type ChecklistsAdminQuestionDependenciesPartialUpdateResponse = ChecklistsAdminQuestionDependenciesPartialUpdateResponses[keyof ChecklistsAdminQuestionDependenciesPartialUpdateResponses];

export type ChecklistsAdminQuestionDependenciesUpdateData = {
    body: QuestionDependencyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-dependencies/{uuid}/';
};

export type ChecklistsAdminQuestionDependenciesUpdateResponses = {
    200: QuestionDependency;
};

export type ChecklistsAdminQuestionDependenciesUpdateResponse = ChecklistsAdminQuestionDependenciesUpdateResponses[keyof ChecklistsAdminQuestionDependenciesUpdateResponses];

export type ChecklistsAdminQuestionOptionsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        question_uuid?: string;
    };
    url: '/api/checklists-admin-question-options/';
};

export type ChecklistsAdminQuestionOptionsListResponses = {
    200: Array<QuestionOptionsAdmin>;
};

export type ChecklistsAdminQuestionOptionsListResponse = ChecklistsAdminQuestionOptionsListResponses[keyof ChecklistsAdminQuestionOptionsListResponses];

export type ChecklistsAdminQuestionOptionsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        question_uuid?: string;
    };
    url: '/api/checklists-admin-question-options/';
};

export type ChecklistsAdminQuestionOptionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminQuestionOptionsCreateData = {
    body: QuestionOptionsAdminRequest;
    path?: never;
    query?: never;
    url: '/api/checklists-admin-question-options/';
};

export type ChecklistsAdminQuestionOptionsCreateResponses = {
    201: QuestionOptionsAdmin;
};

export type ChecklistsAdminQuestionOptionsCreateResponse = ChecklistsAdminQuestionOptionsCreateResponses[keyof ChecklistsAdminQuestionOptionsCreateResponses];

export type ChecklistsAdminQuestionOptionsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-options/{uuid}/';
};

export type ChecklistsAdminQuestionOptionsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ChecklistsAdminQuestionOptionsDestroyResponse = ChecklistsAdminQuestionOptionsDestroyResponses[keyof ChecklistsAdminQuestionOptionsDestroyResponses];

export type ChecklistsAdminQuestionOptionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-options/{uuid}/';
};

export type ChecklistsAdminQuestionOptionsRetrieveResponses = {
    200: QuestionOptionsAdmin;
};

export type ChecklistsAdminQuestionOptionsRetrieveResponse = ChecklistsAdminQuestionOptionsRetrieveResponses[keyof ChecklistsAdminQuestionOptionsRetrieveResponses];

export type ChecklistsAdminQuestionOptionsPartialUpdateData = {
    body?: PatchedQuestionOptionsAdminRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-options/{uuid}/';
};

export type ChecklistsAdminQuestionOptionsPartialUpdateResponses = {
    200: QuestionOptionsAdmin;
};

export type ChecklistsAdminQuestionOptionsPartialUpdateResponse = ChecklistsAdminQuestionOptionsPartialUpdateResponses[keyof ChecklistsAdminQuestionOptionsPartialUpdateResponses];

export type ChecklistsAdminQuestionOptionsUpdateData = {
    body: QuestionOptionsAdminRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-question-options/{uuid}/';
};

export type ChecklistsAdminQuestionOptionsUpdateResponses = {
    200: QuestionOptionsAdmin;
};

export type ChecklistsAdminQuestionOptionsUpdateResponse = ChecklistsAdminQuestionOptionsUpdateResponses[keyof ChecklistsAdminQuestionOptionsUpdateResponses];

export type ChecklistsAdminQuestionsListData = {
    body?: never;
    path?: never;
    query?: {
        checklist_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin-questions/';
};

export type ChecklistsAdminQuestionsListResponses = {
    200: Array<QuestionAdmin>;
};

export type ChecklistsAdminQuestionsListResponse = ChecklistsAdminQuestionsListResponses[keyof ChecklistsAdminQuestionsListResponses];

export type ChecklistsAdminQuestionsCountData = {
    body?: never;
    path?: never;
    query?: {
        checklist_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin-questions/';
};

export type ChecklistsAdminQuestionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ChecklistsAdminQuestionsCreateData = {
    body: QuestionAdminRequest;
    path?: never;
    query?: never;
    url: '/api/checklists-admin-questions/';
};

export type ChecklistsAdminQuestionsCreateResponses = {
    201: QuestionAdmin;
};

export type ChecklistsAdminQuestionsCreateResponse = ChecklistsAdminQuestionsCreateResponses[keyof ChecklistsAdminQuestionsCreateResponses];

export type ChecklistsAdminQuestionsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-questions/{uuid}/';
};

export type ChecklistsAdminQuestionsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ChecklistsAdminQuestionsDestroyResponse = ChecklistsAdminQuestionsDestroyResponses[keyof ChecklistsAdminQuestionsDestroyResponses];

export type ChecklistsAdminQuestionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-questions/{uuid}/';
};

export type ChecklistsAdminQuestionsRetrieveResponses = {
    200: QuestionAdmin;
};

export type ChecklistsAdminQuestionsRetrieveResponse = ChecklistsAdminQuestionsRetrieveResponses[keyof ChecklistsAdminQuestionsRetrieveResponses];

export type ChecklistsAdminQuestionsPartialUpdateData = {
    body?: PatchedQuestionAdminRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-questions/{uuid}/';
};

export type ChecklistsAdminQuestionsPartialUpdateResponses = {
    200: QuestionAdmin;
};

export type ChecklistsAdminQuestionsPartialUpdateResponse = ChecklistsAdminQuestionsPartialUpdateResponses[keyof ChecklistsAdminQuestionsPartialUpdateResponses];

export type ChecklistsAdminQuestionsUpdateData = {
    body: QuestionAdminRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin-questions/{uuid}/';
};

export type ChecklistsAdminQuestionsUpdateResponses = {
    200: QuestionAdmin;
};

export type ChecklistsAdminQuestionsUpdateResponse = ChecklistsAdminQuestionsUpdateResponses[keyof ChecklistsAdminQuestionsUpdateResponses];

export type ChecklistsAdminDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin/{uuid}/';
};

export type ChecklistsAdminDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ChecklistsAdminDestroyResponse = ChecklistsAdminDestroyResponses[keyof ChecklistsAdminDestroyResponses];

export type ChecklistsAdminRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin/{uuid}/';
};

export type ChecklistsAdminRetrieveResponses = {
    200: Checklist;
};

export type ChecklistsAdminRetrieveResponse = ChecklistsAdminRetrieveResponses[keyof ChecklistsAdminRetrieveResponses];

export type ChecklistsAdminPartialUpdateData = {
    body?: PatchedChecklistRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin/{uuid}/';
};

export type ChecklistsAdminPartialUpdateResponses = {
    200: Checklist;
};

export type ChecklistsAdminPartialUpdateResponse = ChecklistsAdminPartialUpdateResponses[keyof ChecklistsAdminPartialUpdateResponses];

export type ChecklistsAdminUpdateData = {
    body: ChecklistRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/checklists-admin/{uuid}/';
};

export type ChecklistsAdminUpdateResponses = {
    200: Checklist;
};

export type ChecklistsAdminUpdateResponse = ChecklistsAdminUpdateResponses[keyof ChecklistsAdminUpdateResponses];

export type ChecklistsAdminChecklistQuestionsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/checklists-admin/{uuid}/questions/';
};

export type ChecklistsAdminChecklistQuestionsResponses = {
    200: Array<QuestionAdmin>;
};

export type ChecklistsAdminChecklistQuestionsResponse = ChecklistsAdminChecklistQuestionsResponses[keyof ChecklistsAdminChecklistQuestionsResponses];

export type ComponentUserUsageLimitsListData = {
    body?: never;
    path?: never;
    query?: {
        component_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Resource URL
         */
        resource?: string;
        resource_uuid?: string;
        username?: string;
    };
    url: '/api/component-user-usage-limits/';
};

export type ComponentUserUsageLimitsListResponses = {
    200: Array<ComponentUserUsageLimit>;
};

export type ComponentUserUsageLimitsListResponse = ComponentUserUsageLimitsListResponses[keyof ComponentUserUsageLimitsListResponses];

export type ComponentUserUsageLimitsCountData = {
    body?: never;
    path?: never;
    query?: {
        component_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Resource URL
         */
        resource?: string;
        resource_uuid?: string;
        username?: string;
    };
    url: '/api/component-user-usage-limits/';
};

export type ComponentUserUsageLimitsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ComponentUserUsageLimitsCreateData = {
    body: ComponentUserUsageLimitRequest;
    path?: never;
    query?: never;
    url: '/api/component-user-usage-limits/';
};

export type ComponentUserUsageLimitsCreateResponses = {
    201: ComponentUserUsageLimit;
};

export type ComponentUserUsageLimitsCreateResponse = ComponentUserUsageLimitsCreateResponses[keyof ComponentUserUsageLimitsCreateResponses];

export type ComponentUserUsageLimitsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/component-user-usage-limits/{uuid}/';
};

export type ComponentUserUsageLimitsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ComponentUserUsageLimitsDestroyResponse = ComponentUserUsageLimitsDestroyResponses[keyof ComponentUserUsageLimitsDestroyResponses];

export type ComponentUserUsageLimitsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/component-user-usage-limits/{uuid}/';
};

export type ComponentUserUsageLimitsRetrieveResponses = {
    200: ComponentUserUsageLimit;
};

export type ComponentUserUsageLimitsRetrieveResponse = ComponentUserUsageLimitsRetrieveResponses[keyof ComponentUserUsageLimitsRetrieveResponses];

export type ComponentUserUsageLimitsPartialUpdateData = {
    body?: PatchedComponentUserUsageLimitRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/component-user-usage-limits/{uuid}/';
};

export type ComponentUserUsageLimitsPartialUpdateResponses = {
    200: ComponentUserUsageLimit;
};

export type ComponentUserUsageLimitsPartialUpdateResponse = ComponentUserUsageLimitsPartialUpdateResponses[keyof ComponentUserUsageLimitsPartialUpdateResponses];

export type ComponentUserUsageLimitsUpdateData = {
    body: ComponentUserUsageLimitRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/component-user-usage-limits/{uuid}/';
};

export type ComponentUserUsageLimitsUpdateResponses = {
    200: ComponentUserUsageLimit;
};

export type ComponentUserUsageLimitsUpdateResponse = ComponentUserUsageLimitsUpdateResponses[keyof ComponentUserUsageLimitsUpdateResponses];

export type ConfigurationRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/configuration/';
};

export type ConfigurationRetrieveResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type ConfigurationRetrieveResponse = ConfigurationRetrieveResponses[keyof ConfigurationRetrieveResponses];

export type CustomerCreditsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_name?: string;
        customer_slug?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | '-end_date' | '-expected_consumption' | '-value' | 'customer_name' | 'end_date' | 'expected_consumption' | 'value'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/customer-credits/';
};

export type CustomerCreditsListResponses = {
    200: Array<CustomerCredit>;
};

export type CustomerCreditsListResponse = CustomerCreditsListResponses[keyof CustomerCreditsListResponses];

export type CustomerCreditsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_name?: string;
        customer_slug?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | '-end_date' | '-expected_consumption' | '-value' | 'customer_name' | 'end_date' | 'expected_consumption' | 'value'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/customer-credits/';
};

export type CustomerCreditsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomerCreditsCreateData = {
    body: CreateCustomerCreditRequest;
    path?: never;
    query?: never;
    url: '/api/customer-credits/';
};

export type CustomerCreditsCreateResponses = {
    201: CreateCustomerCredit;
};

export type CustomerCreditsCreateResponse = CustomerCreditsCreateResponses[keyof CustomerCreditsCreateResponses];

export type CustomerCreditsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/';
};

export type CustomerCreditsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type CustomerCreditsDestroyResponse = CustomerCreditsDestroyResponses[keyof CustomerCreditsDestroyResponses];

export type CustomerCreditsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/';
};

export type CustomerCreditsRetrieveResponses = {
    200: CustomerCredit;
};

export type CustomerCreditsRetrieveResponse = CustomerCreditsRetrieveResponses[keyof CustomerCreditsRetrieveResponses];

export type CustomerCreditsPartialUpdateData = {
    body?: PatchedCreateCustomerCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/';
};

export type CustomerCreditsPartialUpdateResponses = {
    200: CreateCustomerCredit;
};

export type CustomerCreditsPartialUpdateResponse = CustomerCreditsPartialUpdateResponses[keyof CustomerCreditsPartialUpdateResponses];

export type CustomerCreditsUpdateData = {
    body: CreateCustomerCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/';
};

export type CustomerCreditsUpdateResponses = {
    200: CreateCustomerCredit;
};

export type CustomerCreditsUpdateResponse = CustomerCreditsUpdateResponses[keyof CustomerCreditsUpdateResponses];

export type CustomerCreditsApplyCompensationsData = {
    body: CustomerCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/apply_compensations/';
};

export type CustomerCreditsApplyCompensationsResponses = {
    200: CustomerCredit;
};

export type CustomerCreditsApplyCompensationsResponse = CustomerCreditsApplyCompensationsResponses[keyof CustomerCreditsApplyCompensationsResponses];

export type CustomerCreditsClearCompensationsData = {
    body: CustomerCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-credits/{uuid}/clear_compensations/';
};

export type CustomerCreditsClearCompensationsResponses = {
    200: CustomerCredit;
};

export type CustomerCreditsClearCompensationsResponse = CustomerCreditsClearCompensationsResponses[keyof CustomerCreditsClearCompensationsResponses];

export type CustomerCreditsConsumptionsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        customer_name?: string;
        customer_slug?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | '-end_date' | '-expected_consumption' | '-value' | 'customer_name' | 'end_date' | 'expected_consumption' | 'value'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/customer-credits/{uuid}/consumptions/';
};

export type CustomerCreditsConsumptionsListResponses = {
    200: Array<CustomerCreditConsumption>;
};

export type CustomerCreditsConsumptionsListResponse = CustomerCreditsConsumptionsListResponses[keyof CustomerCreditsConsumptionsListResponses];

export type CustomerPermissionsReviewsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        is_pending?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-closed' | '-created' | 'closed' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        reviewer_uuid?: string;
    };
    url: '/api/customer-permissions-reviews/';
};

export type CustomerPermissionsReviewsListResponses = {
    200: Array<CustomerPermissionReview>;
};

export type CustomerPermissionsReviewsListResponse = CustomerPermissionsReviewsListResponses[keyof CustomerPermissionsReviewsListResponses];

export type CustomerPermissionsReviewsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        is_pending?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-closed' | '-created' | 'closed' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        reviewer_uuid?: string;
    };
    url: '/api/customer-permissions-reviews/';
};

export type CustomerPermissionsReviewsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomerPermissionsReviewsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-permissions-reviews/{uuid}/';
};

export type CustomerPermissionsReviewsRetrieveResponses = {
    200: CustomerPermissionReview;
};

export type CustomerPermissionsReviewsRetrieveResponse = CustomerPermissionsReviewsRetrieveResponses[keyof CustomerPermissionsReviewsRetrieveResponses];

export type CustomerPermissionsReviewsCloseData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customer-permissions-reviews/{uuid}/close/';
};

export type CustomerPermissionsReviewsCloseResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomerQuotasListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/customer-quotas/';
};

export type CustomerQuotasListResponses = {
    200: Array<CustomerQuotas>;
};

export type CustomerQuotasListResponse = CustomerQuotasListResponses[keyof CustomerQuotasListResponses];

export type CustomerQuotasCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/customer-quotas/';
};

export type CustomerQuotasCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomersListData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        field?: Array<'abbreviation' | 'access_subnets' | 'accounting_start_date' | 'address' | 'agreement_number' | 'archived' | 'backend_id' | 'bank_account' | 'bank_name' | 'billing_price_estimate' | 'blocked' | 'call_managing_organization_uuid' | 'contact_details' | 'country' | 'country_name' | 'created' | 'customer_credit' | 'customer_unallocated_credit' | 'default_tax_percent' | 'display_name' | 'domain' | 'email' | 'homepage' | 'image' | 'is_service_provider' | 'latitude' | 'longitude' | 'max_service_accounts' | 'name' | 'native_name' | 'payment_profiles' | 'phone_number' | 'postal' | 'projects_count' | 'registration_code' | 'service_provider' | 'service_provider_uuid' | 'slug' | 'sponsor_number' | 'url' | 'uuid' | 'vat_code'>;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/customers/';
};

export type CustomersListResponses = {
    200: Array<Customer>;
};

export type CustomersListResponse = CustomersListResponses[keyof CustomersListResponses];

export type CustomersCountData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/customers/';
};

export type CustomersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomersCreateData = {
    body: CustomerRequest;
    path?: never;
    query?: never;
    url: '/api/customers/';
};

export type CustomersCreateResponses = {
    201: Customer;
};

export type CustomersCreateResponse = CustomersCreateResponses[keyof CustomersCreateResponses];

export type CustomersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/';
};

export type CustomersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type CustomersDestroyResponse = CustomersDestroyResponses[keyof CustomersDestroyResponses];

export type CustomersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'abbreviation' | 'access_subnets' | 'accounting_start_date' | 'address' | 'agreement_number' | 'archived' | 'backend_id' | 'bank_account' | 'bank_name' | 'billing_price_estimate' | 'blocked' | 'call_managing_organization_uuid' | 'contact_details' | 'country' | 'country_name' | 'created' | 'customer_credit' | 'customer_unallocated_credit' | 'default_tax_percent' | 'display_name' | 'domain' | 'email' | 'homepage' | 'image' | 'is_service_provider' | 'latitude' | 'longitude' | 'max_service_accounts' | 'name' | 'native_name' | 'payment_profiles' | 'phone_number' | 'postal' | 'projects_count' | 'registration_code' | 'service_provider' | 'service_provider_uuid' | 'slug' | 'sponsor_number' | 'url' | 'uuid' | 'vat_code'>;
    };
    url: '/api/customers/{uuid}/';
};

export type CustomersRetrieveResponses = {
    200: Customer;
};

export type CustomersRetrieveResponse = CustomersRetrieveResponses[keyof CustomersRetrieveResponses];

export type CustomersPartialUpdateData = {
    body?: PatchedCustomerRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/';
};

export type CustomersPartialUpdateResponses = {
    200: Customer;
};

export type CustomersPartialUpdateResponse = CustomersPartialUpdateResponses[keyof CustomersPartialUpdateResponses];

export type CustomersUpdateData = {
    body: CustomerRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/';
};

export type CustomersUpdateResponses = {
    200: Customer;
};

export type CustomersUpdateResponse = CustomersUpdateResponses[keyof CustomersUpdateResponses];

export type CustomersAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/add_user/';
};

export type CustomersAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type CustomersAddUserResponse = CustomersAddUserResponses[keyof CustomersAddUserResponses];

export type CustomersDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/delete_user/';
};

export type CustomersDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomersListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/customers/{uuid}/list_users/';
};

export type CustomersListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type CustomersListUsersListResponse = CustomersListUsersListResponses[keyof CustomersListUsersListResponses];

export type CustomersStatsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        for_current_month?: boolean;
    };
    url: '/api/customers/{uuid}/stats/';
};

export type CustomersStatsRetrieveResponses = {
    200: ComponentsUsageStats;
};

export type CustomersStatsRetrieveResponse = CustomersStatsRetrieveResponses[keyof CustomersStatsRetrieveResponses];

export type CustomersUpdateOrganizationGroupsData = {
    body?: OrganizationGroupsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/update_organization_groups/';
};

export type CustomersUpdateOrganizationGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type CustomersUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/customers/{uuid}/update_user/';
};

export type CustomersUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type CustomersUpdateUserResponse = CustomersUpdateUserResponses[keyof CustomersUpdateUserResponses];

export type CustomersUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        civil_number?: string;
        description?: string;
        email?: string;
        field?: Array<'email' | 'expiration_time' | 'full_name' | 'image' | 'projects' | 'role_name' | 'url' | 'username' | 'uuid'>;
        full_name?: string;
        is_active?: string;
        job_title?: string;
        native_name?: string;
        o?: string;
        organization?: string;
        organization_role?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        phone_number?: string;
        project_role?: string;
        registration_method?: string;
        user_keyword?: string;
        username?: string;
    };
    url: '/api/customers/{uuid}/users/';
};

export type CustomersUsersListResponses = {
    200: Array<CustomerUser>;
};

export type CustomersUsersListResponse = CustomersUsersListResponses[keyof CustomersUsersListResponses];

export type CustomersCountriesListData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/customers/countries/';
};

export type CustomersCountriesListResponses = {
    200: Array<Country>;
};

export type CustomersCountriesListResponse = CustomersCountriesListResponses[keyof CustomersCountriesListResponses];

export type CustomersCountriesCountData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/customers/countries/';
};

export type CustomersCountriesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DailyQuotasRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * End date in format YYYY-MM-DD
         */
        end?: string;
        /**
         * List of quota names
         */
        quota_names?: Array<string>;
        /**
         * UUID of the scope object
         */
        scope?: string;
        /**
         * Start date in format YYYY-MM-DD
         */
        start?: string;
    };
    url: '/api/daily-quotas/';
};

export type DailyQuotasRetrieveResponses = {
    200: {
        [key: string]: Array<number>;
    };
};

export type DailyQuotasRetrieveResponse = DailyQuotasRetrieveResponses[keyof DailyQuotasRetrieveResponses];

export type DatabaseStatsListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database-stats/';
};

export type DatabaseStatsListResponses = {
    200: Array<TableSize>;
};

export type DatabaseStatsListResponse = DatabaseStatsListResponses[keyof DatabaseStatsListResponses];

export type DigitaloceanDropletsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'region' | 'region_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/digitalocean-droplets/';
};

export type DigitaloceanDropletsListResponses = {
    200: Array<DigitalOceanDroplet>;
};

export type DigitaloceanDropletsListResponse = DigitaloceanDropletsListResponses[keyof DigitaloceanDropletsListResponses];

export type DigitaloceanDropletsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/digitalocean-droplets/';
};

export type DigitaloceanDropletsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanDropletsCreateData = {
    body: DigitalOceanDropletRequest;
    path?: never;
    query?: never;
    url: '/api/digitalocean-droplets/';
};

export type DigitaloceanDropletsCreateResponses = {
    201: DigitalOceanDroplet;
};

export type DigitaloceanDropletsCreateResponse = DigitaloceanDropletsCreateResponses[keyof DigitaloceanDropletsCreateResponses];

export type DigitaloceanDropletsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/';
};

export type DigitaloceanDropletsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type DigitaloceanDropletsDestroyResponse = DigitaloceanDropletsDestroyResponses[keyof DigitaloceanDropletsDestroyResponses];

export type DigitaloceanDropletsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_ips' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'region' | 'region_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'ssh_public_key' | 'start_time' | 'state' | 'url' | 'user_data' | 'uuid'>;
    };
    url: '/api/digitalocean-droplets/{uuid}/';
};

export type DigitaloceanDropletsRetrieveResponses = {
    200: DigitalOceanDroplet;
};

export type DigitaloceanDropletsRetrieveResponse = DigitaloceanDropletsRetrieveResponses[keyof DigitaloceanDropletsRetrieveResponses];

export type DigitaloceanDropletsPartialUpdateData = {
    body?: PatchedDigitalOceanDropletRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/';
};

export type DigitaloceanDropletsPartialUpdateResponses = {
    200: DigitalOceanDroplet;
};

export type DigitaloceanDropletsPartialUpdateResponse = DigitaloceanDropletsPartialUpdateResponses[keyof DigitaloceanDropletsPartialUpdateResponses];

export type DigitaloceanDropletsUpdateData = {
    body: DigitalOceanDropletRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/';
};

export type DigitaloceanDropletsUpdateResponses = {
    200: DigitalOceanDroplet;
};

export type DigitaloceanDropletsUpdateResponse = DigitaloceanDropletsUpdateResponses[keyof DigitaloceanDropletsUpdateResponses];

export type DigitaloceanDropletsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/pull/';
};

export type DigitaloceanDropletsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanDropletsResizeData = {
    body: DigitalOceanDropletResizeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/resize/';
};

export type DigitaloceanDropletsResizeResponses = {
    200: DigitalOceanDropletResize;
};

export type DigitaloceanDropletsResizeResponse = DigitaloceanDropletsResizeResponses[keyof DigitaloceanDropletsResizeResponses];

export type DigitaloceanDropletsRestartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/restart/';
};

export type DigitaloceanDropletsRestartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanDropletsStartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/start/';
};

export type DigitaloceanDropletsStartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanDropletsStopData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/stop/';
};

export type DigitaloceanDropletsStopResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanDropletsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-droplets/{uuid}/unlink/';
};

export type DigitaloceanDropletsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanImagesListData = {
    body?: never;
    path?: never;
    query?: {
        distribution?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-distribution' | '-type' | 'distribution' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        type?: string;
    };
    url: '/api/digitalocean-images/';
};

export type DigitaloceanImagesListResponses = {
    200: Array<DigitalOceanImage>;
};

export type DigitaloceanImagesListResponse = DigitaloceanImagesListResponses[keyof DigitaloceanImagesListResponses];

export type DigitaloceanImagesCountData = {
    body?: never;
    path?: never;
    query?: {
        distribution?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-distribution' | '-type' | 'distribution' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        type?: string;
    };
    url: '/api/digitalocean-images/';
};

export type DigitaloceanImagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanImagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-images/{uuid}/';
};

export type DigitaloceanImagesRetrieveResponses = {
    200: DigitalOceanImage;
};

export type DigitaloceanImagesRetrieveResponse = DigitaloceanImagesRetrieveResponses[keyof DigitaloceanImagesRetrieveResponses];

export type DigitaloceanRegionsListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/digitalocean-regions/';
};

export type DigitaloceanRegionsListResponses = {
    200: Array<DigitalOceanRegion>;
};

export type DigitaloceanRegionsListResponse = DigitaloceanRegionsListResponses[keyof DigitaloceanRegionsListResponses];

export type DigitaloceanRegionsCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/digitalocean-regions/';
};

export type DigitaloceanRegionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanRegionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-regions/{uuid}/';
};

export type DigitaloceanRegionsRetrieveResponses = {
    200: DigitalOceanRegion;
};

export type DigitaloceanRegionsRetrieveResponse = DigitaloceanRegionsRetrieveResponses[keyof DigitaloceanRegionsRetrieveResponses];

export type DigitaloceanSizesListData = {
    body?: never;
    path?: never;
    query?: {
        cores?: number;
        disk?: number;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        ram?: number;
    };
    url: '/api/digitalocean-sizes/';
};

export type DigitaloceanSizesListResponses = {
    200: Array<DigitalOceanSize>;
};

export type DigitaloceanSizesListResponse = DigitaloceanSizesListResponses[keyof DigitaloceanSizesListResponses];

export type DigitaloceanSizesCountData = {
    body?: never;
    path?: never;
    query?: {
        cores?: number;
        disk?: number;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        ram?: number;
    };
    url: '/api/digitalocean-sizes/';
};

export type DigitaloceanSizesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type DigitaloceanSizesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/digitalocean-sizes/{uuid}/';
};

export type DigitaloceanSizesRetrieveResponses = {
    200: DigitalOceanSize;
};

export type DigitaloceanSizesRetrieveResponse = DigitaloceanSizesRetrieveResponses[keyof DigitaloceanSizesRetrieveResponses];

export type EmailLogsListData = {
    body?: never;
    path?: never;
    query?: {
        body?: string;
        emails?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-sent_at' | '-subject' | 'sent_at' | 'subject'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        sent_at?: string;
        subject?: string;
    };
    url: '/api/email-logs/';
};

export type EmailLogsListResponses = {
    200: Array<EmailLog>;
};

export type EmailLogsListResponse = EmailLogsListResponses[keyof EmailLogsListResponses];

export type EmailLogsCountData = {
    body?: never;
    path?: never;
    query?: {
        body?: string;
        emails?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-sent_at' | '-subject' | 'sent_at' | 'subject'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        sent_at?: string;
        subject?: string;
    };
    url: '/api/email-logs/';
};

export type EmailLogsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EmailLogsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/email-logs/{uuid}/';
};

export type EmailLogsRetrieveResponses = {
    200: EmailLog;
};

export type EmailLogsRetrieveResponse = EmailLogsRetrieveResponses[keyof EmailLogsRetrieveResponses];

export type EventSubscriptionsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/event-subscriptions/';
};

export type EventSubscriptionsListResponses = {
    200: Array<EventSubscription>;
};

export type EventSubscriptionsListResponse = EventSubscriptionsListResponses[keyof EventSubscriptionsListResponses];

export type EventSubscriptionsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/event-subscriptions/';
};

export type EventSubscriptionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EventSubscriptionsCreateData = {
    body?: EventSubscriptionRequest;
    path?: never;
    query?: never;
    url: '/api/event-subscriptions/';
};

export type EventSubscriptionsCreateResponses = {
    201: EventSubscription;
};

export type EventSubscriptionsCreateResponse = EventSubscriptionsCreateResponses[keyof EventSubscriptionsCreateResponses];

export type EventSubscriptionsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/event-subscriptions/{uuid}/';
};

export type EventSubscriptionsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type EventSubscriptionsDestroyResponse = EventSubscriptionsDestroyResponses[keyof EventSubscriptionsDestroyResponses];

export type EventSubscriptionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/event-subscriptions/{uuid}/';
};

export type EventSubscriptionsRetrieveResponses = {
    200: EventSubscription;
};

export type EventSubscriptionsRetrieveResponse = EventSubscriptionsRetrieveResponses[keyof EventSubscriptionsRetrieveResponses];

export type EventsListData = {
    body?: never;
    path?: never;
    query?: {
        created_from?: number;
        created_to?: number;
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        field?: Array<'context' | 'created' | 'event_type' | 'message' | 'uuid'>;
        message?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * User UUID
         */
        user_uuid?: string;
    };
    url: '/api/events/';
};

export type EventsListResponses = {
    200: Array<Event>;
};

export type EventsListResponse = EventsListResponses[keyof EventsListResponses];

export type EventsCountData = {
    body?: never;
    path?: never;
    query?: {
        created_from?: number;
        created_to?: number;
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        message?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * User UUID
         */
        user_uuid?: string;
    };
    url: '/api/events/';
};

export type EventsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EventsStatsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/events-stats/';
};

export type EventsStatsListResponses = {
    200: Array<EventStats>;
};

export type EventsStatsListResponse = EventsStatsListResponses[keyof EventsStatsListResponses];

export type EventsStatsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/events-stats/';
};

export type EventsStatsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EventsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this event.
         */
        id: number;
    };
    query?: {
        field?: Array<'context' | 'created' | 'event_type' | 'message' | 'uuid'>;
    };
    url: '/api/events/{id}/';
};

export type EventsRetrieveResponses = {
    200: Event;
};

export type EventsRetrieveResponse = EventsRetrieveResponses[keyof EventsRetrieveResponses];

export type EventsCountRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'context' | 'created' | 'event_type' | 'message' | 'uuid'>;
    };
    url: '/api/events/count/';
};

export type EventsCountRetrieveResponses = {
    200: Event;
};

export type EventsCountRetrieveResponse = EventsCountRetrieveResponses[keyof EventsCountRetrieveResponses];

export type EventsCountCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/events/count/';
};

export type EventsCountCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EventsEventGroupsRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'context' | 'created' | 'event_type' | 'message' | 'uuid'>;
    };
    url: '/api/events/event_groups/';
};

export type EventsEventGroupsRetrieveResponses = {
    200: Event;
};

export type EventsEventGroupsRetrieveResponse = EventsEventGroupsRetrieveResponses[keyof EventsEventGroupsRetrieveResponses];

export type EventsEventGroupsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/events/event_groups/';
};

export type EventsEventGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type EventsScopeTypesRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'context' | 'created' | 'event_type' | 'message' | 'uuid'>;
    };
    url: '/api/events/scope_types/';
};

export type EventsScopeTypesRetrieveResponses = {
    200: Event;
};

export type EventsScopeTypesRetrieveResponse = EventsScopeTypesRetrieveResponses[keyof EventsScopeTypesRetrieveResponses];

export type EventsScopeTypesCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/events/scope_types/';
};

export type EventsScopeTypesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ExternalLinksListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, link or description
         */
        query?: string;
    };
    url: '/api/external-links/';
};

export type ExternalLinksListResponses = {
    200: Array<ExternalLink>;
};

export type ExternalLinksListResponse = ExternalLinksListResponses[keyof ExternalLinksListResponses];

export type ExternalLinksCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, link or description
         */
        query?: string;
    };
    url: '/api/external-links/';
};

export type ExternalLinksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ExternalLinksCreateData = {
    body: ExternalLinkRequest;
    path?: never;
    query?: never;
    url: '/api/external-links/';
};

export type ExternalLinksCreateResponses = {
    201: ExternalLink;
};

export type ExternalLinksCreateResponse = ExternalLinksCreateResponses[keyof ExternalLinksCreateResponses];

export type ExternalLinksDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/external-links/{uuid}/';
};

export type ExternalLinksDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ExternalLinksDestroyResponse = ExternalLinksDestroyResponses[keyof ExternalLinksDestroyResponses];

export type ExternalLinksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/external-links/{uuid}/';
};

export type ExternalLinksRetrieveResponses = {
    200: ExternalLink;
};

export type ExternalLinksRetrieveResponse = ExternalLinksRetrieveResponses[keyof ExternalLinksRetrieveResponses];

export type ExternalLinksPartialUpdateData = {
    body?: PatchedExternalLinkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/external-links/{uuid}/';
};

export type ExternalLinksPartialUpdateResponses = {
    200: ExternalLink;
};

export type ExternalLinksPartialUpdateResponse = ExternalLinksPartialUpdateResponses[keyof ExternalLinksPartialUpdateResponses];

export type ExternalLinksUpdateData = {
    body: ExternalLinkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/external-links/{uuid}/';
};

export type ExternalLinksUpdateResponses = {
    200: ExternalLink;
};

export type ExternalLinksUpdateResponse = ExternalLinksUpdateResponses[keyof ExternalLinksUpdateResponses];

export type FeatureValuesData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/feature-values/';
};

export type FeatureValuesResponses = {
    200: string;
};

export type FeatureValuesResponse = FeatureValuesResponses[keyof FeatureValuesResponses];

export type FinancialReportsListData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/financial-reports/';
};

export type FinancialReportsListResponses = {
    200: Array<FinancialReport>;
};

export type FinancialReportsListResponse = FinancialReportsListResponses[keyof FinancialReportsListResponses];

export type FinancialReportsCountData = {
    body?: never;
    path?: never;
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        name?: string;
        name_exact?: string;
        native_name?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/financial-reports/';
};

export type FinancialReportsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type FinancialReportsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/financial-reports/{uuid}/';
};

export type FinancialReportsRetrieveResponses = {
    200: FinancialReport;
};

export type FinancialReportsRetrieveResponse = FinancialReportsRetrieveResponses[keyof FinancialReportsRetrieveResponses];

export type FreeipaProfilesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by username, user UUID, first name or last name
         */
        query?: string;
        user?: string;
    };
    url: '/api/freeipa-profiles/';
};

export type FreeipaProfilesListResponses = {
    200: Array<FreeipaProfile>;
};

export type FreeipaProfilesListResponse = FreeipaProfilesListResponses[keyof FreeipaProfilesListResponses];

export type FreeipaProfilesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by username, user UUID, first name or last name
         */
        query?: string;
        user?: string;
    };
    url: '/api/freeipa-profiles/';
};

export type FreeipaProfilesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type FreeipaProfilesCreateData = {
    body: FreeipaProfileRequest;
    path?: never;
    query?: never;
    url: '/api/freeipa-profiles/';
};

export type FreeipaProfilesCreateResponses = {
    201: FreeipaProfile;
};

export type FreeipaProfilesCreateResponse = FreeipaProfilesCreateResponses[keyof FreeipaProfilesCreateResponses];

export type FreeipaProfilesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/freeipa-profiles/{uuid}/';
};

export type FreeipaProfilesRetrieveResponses = {
    200: FreeipaProfile;
};

export type FreeipaProfilesRetrieveResponse = FreeipaProfilesRetrieveResponses[keyof FreeipaProfilesRetrieveResponses];

export type FreeipaProfilesPartialUpdateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/freeipa-profiles/{uuid}/';
};

export type FreeipaProfilesPartialUpdateResponses = {
    200: FreeipaProfile;
};

export type FreeipaProfilesPartialUpdateResponse = FreeipaProfilesPartialUpdateResponses[keyof FreeipaProfilesPartialUpdateResponses];

export type FreeipaProfilesUpdateData = {
    body: FreeipaProfileRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/freeipa-profiles/{uuid}/';
};

export type FreeipaProfilesUpdateResponses = {
    200: FreeipaProfile;
};

export type FreeipaProfilesUpdateResponse = FreeipaProfilesUpdateResponses[keyof FreeipaProfilesUpdateResponses];

export type FreeipaProfilesUpdateSshKeysData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/freeipa-profiles/{uuid}/update_ssh_keys/';
};

export type FreeipaProfilesUpdateSshKeysResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type GoogleAuthListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'calendar_refresh_token' | 'calendar_token' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_country' | 'customer_image' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'google_auth_url' | 'image' | 'offering_count' | 'organization_groups' | 'url' | 'uuid'>;
        /**
         * has_credentials
         */
        has_credentials?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/google-auth/';
};

export type GoogleAuthListResponses = {
    200: Array<GoogleCredentials>;
};

export type GoogleAuthListResponse = GoogleAuthListResponses[keyof GoogleAuthListResponses];

export type GoogleAuthCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * has_credentials
         */
        has_credentials?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/google-auth/';
};

export type GoogleAuthCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type GoogleAuthRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'calendar_refresh_token' | 'calendar_token' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_country' | 'customer_image' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'google_auth_url' | 'image' | 'offering_count' | 'organization_groups' | 'url' | 'uuid'>;
    };
    url: '/api/google-auth/{uuid}/';
};

export type GoogleAuthRetrieveResponses = {
    200: GoogleCredentials;
};

export type GoogleAuthRetrieveResponse = GoogleAuthRetrieveResponses[keyof GoogleAuthRetrieveResponses];

export type GoogleAuthAuthorizeRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'calendar_refresh_token' | 'calendar_token' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_country' | 'customer_image' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'google_auth_url' | 'image' | 'offering_count' | 'organization_groups' | 'url' | 'uuid'>;
    };
    url: '/api/google-auth/{uuid}/authorize/';
};

export type GoogleAuthAuthorizeRetrieveResponses = {
    200: GoogleCredentials;
};

export type GoogleAuthAuthorizeRetrieveResponse = GoogleAuthAuthorizeRetrieveResponses[keyof GoogleAuthAuthorizeRetrieveResponses];

export type GoogleAuthCallbackRetrieveData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Authorization code
         */
        code: string;
        /**
         * Service provider UUID
         */
        state: string;
    };
    url: '/api/google-auth/callback/';
};

export type GoogleAuthCallbackRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type GoogleAuthCallbackCountData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Authorization code
         */
        code: string;
        /**
         * Service provider UUID
         */
        state: string;
    };
    url: '/api/google-auth/callback/';
};

export type GoogleAuthCallbackCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type HooksListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/hooks/';
};

export type HooksListResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type HooksCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/hooks/';
};

export type HooksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type HooksEmailListData = {
    body?: never;
    path?: never;
    query?: {
        author_email?: string;
        /**
         * User full name contains
         */
        author_fullname?: string;
        author_username?: string;
        author_uuid?: string;
        email?: string;
        is_active?: boolean;
        last_published?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by author name, username and email
         */
        query?: string;
    };
    url: '/api/hooks-email/';
};

export type HooksEmailListResponses = {
    200: Array<EmailHook>;
};

export type HooksEmailListResponse = HooksEmailListResponses[keyof HooksEmailListResponses];

export type HooksEmailCountData = {
    body?: never;
    path?: never;
    query?: {
        author_email?: string;
        /**
         * User full name contains
         */
        author_fullname?: string;
        author_username?: string;
        author_uuid?: string;
        email?: string;
        is_active?: boolean;
        last_published?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by author name, username and email
         */
        query?: string;
    };
    url: '/api/hooks-email/';
};

export type HooksEmailCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type HooksEmailCreateData = {
    body: EmailHookRequest;
    path?: never;
    query?: never;
    url: '/api/hooks-email/';
};

export type HooksEmailCreateResponses = {
    201: EmailHook;
};

export type HooksEmailCreateResponse = HooksEmailCreateResponses[keyof HooksEmailCreateResponses];

export type HooksEmailDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-email/{uuid}/';
};

export type HooksEmailDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type HooksEmailDestroyResponse = HooksEmailDestroyResponses[keyof HooksEmailDestroyResponses];

export type HooksEmailRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-email/{uuid}/';
};

export type HooksEmailRetrieveResponses = {
    200: EmailHook;
};

export type HooksEmailRetrieveResponse = HooksEmailRetrieveResponses[keyof HooksEmailRetrieveResponses];

export type HooksEmailPartialUpdateData = {
    body?: PatchedEmailHookRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-email/{uuid}/';
};

export type HooksEmailPartialUpdateResponses = {
    200: EmailHook;
};

export type HooksEmailPartialUpdateResponse = HooksEmailPartialUpdateResponses[keyof HooksEmailPartialUpdateResponses];

export type HooksEmailUpdateData = {
    body: EmailHookRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-email/{uuid}/';
};

export type HooksEmailUpdateResponses = {
    200: EmailHook;
};

export type HooksEmailUpdateResponse = HooksEmailUpdateResponses[keyof HooksEmailUpdateResponses];

export type HooksWebListData = {
    body?: never;
    path?: never;
    query?: {
        author_email?: string;
        /**
         * User full name contains
         */
        author_fullname?: string;
        author_username?: string;
        author_uuid?: string;
        content_type?: 1 | 2;
        destination_url?: string;
        is_active?: boolean;
        last_published?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by author name, username and email
         */
        query?: string;
    };
    url: '/api/hooks-web/';
};

export type HooksWebListResponses = {
    200: Array<WebHook>;
};

export type HooksWebListResponse = HooksWebListResponses[keyof HooksWebListResponses];

export type HooksWebCountData = {
    body?: never;
    path?: never;
    query?: {
        author_email?: string;
        /**
         * User full name contains
         */
        author_fullname?: string;
        author_username?: string;
        author_uuid?: string;
        content_type?: 1 | 2;
        destination_url?: string;
        is_active?: boolean;
        last_published?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by author name, username and email
         */
        query?: string;
    };
    url: '/api/hooks-web/';
};

export type HooksWebCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type HooksWebCreateData = {
    body: WebHookRequest;
    path?: never;
    query?: never;
    url: '/api/hooks-web/';
};

export type HooksWebCreateResponses = {
    201: WebHook;
};

export type HooksWebCreateResponse = HooksWebCreateResponses[keyof HooksWebCreateResponses];

export type HooksWebDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-web/{uuid}/';
};

export type HooksWebDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type HooksWebDestroyResponse = HooksWebDestroyResponses[keyof HooksWebDestroyResponses];

export type HooksWebRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-web/{uuid}/';
};

export type HooksWebRetrieveResponses = {
    200: WebHook;
};

export type HooksWebRetrieveResponse = HooksWebRetrieveResponses[keyof HooksWebRetrieveResponses];

export type HooksWebPartialUpdateData = {
    body?: PatchedWebHookRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-web/{uuid}/';
};

export type HooksWebPartialUpdateResponses = {
    200: WebHook;
};

export type HooksWebPartialUpdateResponse = HooksWebPartialUpdateResponses[keyof HooksWebPartialUpdateResponses];

export type HooksWebUpdateData = {
    body: WebHookRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/hooks-web/{uuid}/';
};

export type HooksWebUpdateResponses = {
    200: WebHook;
};

export type HooksWebUpdateResponse = HooksWebUpdateResponses[keyof HooksWebUpdateResponses];

export type IdentityProvidersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/identity-providers/';
};

export type IdentityProvidersListResponses = {
    200: Array<IdentityProvider>;
};

export type IdentityProvidersListResponse = IdentityProvidersListResponses[keyof IdentityProvidersListResponses];

export type IdentityProvidersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/identity-providers/';
};

export type IdentityProvidersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type IdentityProvidersCreateData = {
    body: IdentityProviderRequest;
    path?: never;
    query?: never;
    url: '/api/identity-providers/';
};

export type IdentityProvidersCreateResponses = {
    201: IdentityProvider;
};

export type IdentityProvidersCreateResponse = IdentityProvidersCreateResponses[keyof IdentityProvidersCreateResponses];

export type IdentityProvidersDestroyData = {
    body?: never;
    path: {
        provider: string;
    };
    query?: never;
    url: '/api/identity-providers/{provider}/';
};

export type IdentityProvidersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type IdentityProvidersDestroyResponse = IdentityProvidersDestroyResponses[keyof IdentityProvidersDestroyResponses];

export type IdentityProvidersRetrieveData = {
    body?: never;
    path: {
        provider: string;
    };
    query?: never;
    url: '/api/identity-providers/{provider}/';
};

export type IdentityProvidersRetrieveResponses = {
    200: IdentityProvider;
};

export type IdentityProvidersRetrieveResponse = IdentityProvidersRetrieveResponses[keyof IdentityProvidersRetrieveResponses];

export type IdentityProvidersPartialUpdateData = {
    body?: PatchedIdentityProviderRequest;
    path: {
        provider: string;
    };
    query?: never;
    url: '/api/identity-providers/{provider}/';
};

export type IdentityProvidersPartialUpdateResponses = {
    200: IdentityProvider;
};

export type IdentityProvidersPartialUpdateResponse = IdentityProvidersPartialUpdateResponses[keyof IdentityProvidersPartialUpdateResponses];

export type IdentityProvidersUpdateData = {
    body: IdentityProviderRequest;
    path: {
        provider: string;
    };
    query?: never;
    url: '/api/identity-providers/{provider}/';
};

export type IdentityProvidersUpdateResponses = {
    200: IdentityProvider;
};

export type IdentityProvidersUpdateResponse = IdentityProvidersUpdateResponses[keyof IdentityProvidersUpdateResponses];

export type InvoiceItemsListData = {
    body?: never;
    path?: never;
    query?: {
        credit_uuid?: string;
        customer_uuid?: string;
        month?: number;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        resource_uuid?: string;
        /**
         * Start month
         */
        start_month?: number;
        /**
         * Start year
         */
        start_year?: number;
        year?: number;
    };
    url: '/api/invoice-items/';
};

export type InvoiceItemsListResponses = {
    200: Array<InvoiceItemDetail>;
};

export type InvoiceItemsListResponse = InvoiceItemsListResponses[keyof InvoiceItemsListResponses];

export type InvoiceItemsCountData = {
    body?: never;
    path?: never;
    query?: {
        credit_uuid?: string;
        customer_uuid?: string;
        month?: number;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        resource_uuid?: string;
        /**
         * Start month
         */
        start_month?: number;
        /**
         * Start year
         */
        start_year?: number;
        year?: number;
    };
    url: '/api/invoice-items/';
};

export type InvoiceItemsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoiceItemsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/';
};

export type InvoiceItemsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type InvoiceItemsDestroyResponse = InvoiceItemsDestroyResponses[keyof InvoiceItemsDestroyResponses];

export type InvoiceItemsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/';
};

export type InvoiceItemsRetrieveResponses = {
    200: InvoiceItemDetail;
};

export type InvoiceItemsRetrieveResponse = InvoiceItemsRetrieveResponses[keyof InvoiceItemsRetrieveResponses];

export type InvoiceItemsPartialUpdateData = {
    body?: PatchedInvoiceItemUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/';
};

export type InvoiceItemsPartialUpdateResponses = {
    200: InvoiceItemUpdate;
};

export type InvoiceItemsPartialUpdateResponse = InvoiceItemsPartialUpdateResponses[keyof InvoiceItemsPartialUpdateResponses];

export type InvoiceItemsUpdateData = {
    body?: InvoiceItemUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/';
};

export type InvoiceItemsUpdateResponses = {
    200: InvoiceItemUpdate;
};

export type InvoiceItemsUpdateResponse = InvoiceItemsUpdateResponses[keyof InvoiceItemsUpdateResponses];

export type InvoiceItemsConsumptionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/consumptions/';
};

export type InvoiceItemsConsumptionsRetrieveResponses = {
    200: InvoiceItemDetail;
};

export type InvoiceItemsConsumptionsRetrieveResponse = InvoiceItemsConsumptionsRetrieveResponses[keyof InvoiceItemsConsumptionsRetrieveResponses];

export type InvoiceItemsCreateCompensationData = {
    body: InvoiceItemCompensationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/create_compensation/';
};

export type InvoiceItemsCreateCompensationResponses = {
    200: InvoiceItemCompensation;
};

export type InvoiceItemsCreateCompensationResponse = InvoiceItemsCreateCompensationResponses[keyof InvoiceItemsCreateCompensationResponses];

export type InvoiceItemsMigrateToData = {
    body: InvoiceItemMigrateToRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoice-items/{uuid}/migrate_to/';
};

export type InvoiceItemsMigrateToResponses = {
    200: InvoiceItemMigrateTo;
};

export type InvoiceItemsMigrateToResponse = InvoiceItemsMigrateToResponses[keyof InvoiceItemsMigrateToResponses];

export type InvoiceItemsCostsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * UUID of the project for which statistics should be calculated.
         */
        project_uuid?: string;
    };
    url: '/api/invoice-items/costs/';
};

export type InvoiceItemsCostsListResponses = {
    200: Array<InvoiceCost>;
};

export type InvoiceItemsCostsListResponse = InvoiceItemsCostsListResponses[keyof InvoiceItemsCostsListResponses];

export type InvoiceItemsCostsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * UUID of the project for which statistics should be calculated.
         */
        project_uuid?: string;
    };
    url: '/api/invoice-items/costs/';
};

export type InvoiceItemsCostsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoiceItemsCustomerCostsForPeriodRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * UUID of the project for which statistics should be calculated.
         */
        customer_uuid?: string;
        /**
         * Period for which statistics should be calculated.
         */
        period?: number;
    };
    url: '/api/invoice-items/customer_costs_for_period/';
};

export type InvoiceItemsCustomerCostsForPeriodRetrieveResponses = {
    200: CostsForPeriod;
};

export type InvoiceItemsCustomerCostsForPeriodRetrieveResponse = InvoiceItemsCustomerCostsForPeriodRetrieveResponses[keyof InvoiceItemsCustomerCostsForPeriodRetrieveResponses];

export type InvoiceItemsCustomerCostsForPeriodCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * UUID of the project for which statistics should be calculated.
         */
        customer_uuid?: string;
        /**
         * Period for which statistics should be calculated.
         */
        period?: number;
    };
    url: '/api/invoice-items/customer_costs_for_period/';
};

export type InvoiceItemsCustomerCostsForPeriodCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoiceItemsProjectCostsForPeriodRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Period for which statistics should be calculated (1, 3 or 12 months).
         */
        period?: number;
        /**
         * UUID of the project for which statistics should be calculated.
         */
        project_uuid?: string;
    };
    url: '/api/invoice-items/project_costs_for_period/';
};

export type InvoiceItemsProjectCostsForPeriodRetrieveResponses = {
    200: CostsForPeriod;
};

export type InvoiceItemsProjectCostsForPeriodRetrieveResponse = InvoiceItemsProjectCostsForPeriodRetrieveResponses[keyof InvoiceItemsProjectCostsForPeriodRetrieveResponses];

export type InvoiceItemsProjectCostsForPeriodCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Period for which statistics should be calculated (1, 3 or 12 months).
         */
        period?: number;
        /**
         * UUID of the project for which statistics should be calculated.
         */
        project_uuid?: string;
    };
    url: '/api/invoice-items/project_costs_for_period/';
};

export type InvoiceItemsProjectCostsForPeriodCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoiceItemsTotalPriceRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        credit_uuid?: string;
        customer_uuid?: string;
        month?: number;
        offering_uuid?: string;
        project_uuid?: string;
        resource_uuid?: string;
        /**
         * Start month
         */
        start_month?: number;
        /**
         * Start year
         */
        start_year?: number;
        year?: number;
    };
    url: '/api/invoice-items/total_price/';
};

export type InvoiceItemsTotalPriceRetrieveResponses = {
    200: InvoiceItemTotalPrice;
};

export type InvoiceItemsTotalPriceRetrieveResponse = InvoiceItemsTotalPriceRetrieveResponses[keyof InvoiceItemsTotalPriceRetrieveResponses];

export type InvoiceItemsTotalPriceCountData = {
    body?: never;
    path?: never;
    query?: {
        credit_uuid?: string;
        customer_uuid?: string;
        month?: number;
        offering_uuid?: string;
        project_uuid?: string;
        resource_uuid?: string;
        /**
         * Start month
         */
        start_month?: number;
        /**
         * Start year
         */
        start_year?: number;
        year?: number;
    };
    url: '/api/invoice-items/total_price/';
};

export type InvoiceItemsTotalPriceCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoiceSendFinancialReportByMailData = {
    body: FinancialReportEmailRequest;
    path?: never;
    query?: never;
    url: '/api/invoice/send-financial-report-by-mail/';
};

export type InvoiceSendFinancialReportByMailResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesListData = {
    body?: never;
    path?: never;
    query?: {
        created?: string;
        customer?: string;
        customer_uuid?: string;
        end_date?: string;
        field?: Array<'backend_id' | 'compensations' | 'customer' | 'customer_details' | 'due_date' | 'incurred_costs' | 'invoice_date' | 'issuer_details' | 'items' | 'month' | 'number' | 'payment_url' | 'price' | 'reference_number' | 'state' | 'tax' | 'total' | 'url' | 'uuid' | 'year'>;
        month?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-month' | '-year' | 'created' | 'month' | 'year'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        start_date?: string;
        state?: Array<'canceled' | 'created' | 'paid' | 'pending'>;
        year?: number;
    };
    url: '/api/invoices/';
};

export type InvoicesListResponses = {
    200: Array<Invoice>;
};

export type InvoicesListResponse = InvoicesListResponses[keyof InvoicesListResponses];

export type InvoicesCountData = {
    body?: never;
    path?: never;
    query?: {
        created?: string;
        customer?: string;
        customer_uuid?: string;
        end_date?: string;
        month?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-month' | '-year' | 'created' | 'month' | 'year'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        start_date?: string;
        state?: Array<'canceled' | 'created' | 'paid' | 'pending'>;
        year?: number;
    };
    url: '/api/invoices/';
};

export type InvoicesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'compensations' | 'customer' | 'customer_details' | 'due_date' | 'incurred_costs' | 'invoice_date' | 'issuer_details' | 'items' | 'month' | 'number' | 'payment_url' | 'price' | 'reference_number' | 'state' | 'tax' | 'total' | 'url' | 'uuid' | 'year'>;
    };
    url: '/api/invoices/{uuid}/';
};

export type InvoicesRetrieveResponses = {
    200: Invoice;
};

export type InvoicesRetrieveResponse = InvoicesRetrieveResponses[keyof InvoicesRetrieveResponses];

export type InvoicesItemsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Conceal compensation items
         */
        conceal_compensation_items?: boolean;
        offering_uuid?: string;
        project_uuid?: string;
        provider_uuid?: string;
        query?: string;
    };
    url: '/api/invoices/{uuid}/items/';
};

export type InvoicesItemsRetrieveResponses = {
    200: InvoiceItem;
};

export type InvoicesItemsRetrieveResponse = InvoicesItemsRetrieveResponses[keyof InvoicesItemsRetrieveResponses];

export type InvoicesPaidData = {
    body: PaidRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoices/{uuid}/paid/';
};

export type InvoicesPaidResponses = {
    200: Invoice;
};

export type InvoicesPaidResponse = InvoicesPaidResponses[keyof InvoicesPaidResponses];

export type InvoicesSendNotificationData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoices/{uuid}/send_notification/';
};

export type InvoicesSendNotificationResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesSetBackendIdData = {
    body?: BackendIdRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoices/{uuid}/set_backend_id/';
};

export type InvoicesSetBackendIdResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesSetPaymentUrlData = {
    body?: PaymentUrlRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoices/{uuid}/set_payment_url/';
};

export type InvoicesSetPaymentUrlResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesSetReferenceNumberData = {
    body?: ReferenceNumberRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/invoices/{uuid}/set_reference_number/';
};

export type InvoicesSetReferenceNumberResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type InvoicesStatsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        created?: string;
        customer?: string;
        customer_uuid?: string;
        end_date?: string;
        month?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-month' | '-year' | 'created' | 'month' | 'year'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        provider_uuid?: string;
        start_date?: string;
        state?: Array<'canceled' | 'created' | 'paid' | 'pending'>;
        year?: number;
    };
    url: '/api/invoices/{uuid}/stats/';
};

export type InvoicesStatsListResponses = {
    200: Array<InvoiceStatsOffering>;
};

export type InvoicesStatsListResponse = InvoicesStatsListResponses[keyof InvoicesStatsListResponses];

export type InvoicesGrowthRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        accounting_is_running?: boolean;
        accounting_mode?: string;
        customers_count?: number;
    };
    url: '/api/invoices/growth/';
};

export type InvoicesGrowthRetrieveResponses = {
    200: InvoiceGrowth;
};

export type InvoicesGrowthRetrieveResponse = InvoicesGrowthRetrieveResponses[keyof InvoicesGrowthRetrieveResponses];

export type InvoicesGrowthCountData = {
    body?: never;
    path?: never;
    query?: {
        accounting_is_running?: boolean;
        accounting_mode?: string;
        customers_count?: number;
    };
    url: '/api/invoices/growth/';
};

export type InvoicesGrowthCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type KeycloakGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role?: string;
        scope_type?: string;
        scope_uuid?: string;
    };
    url: '/api/keycloak-groups/';
};

export type KeycloakGroupsListResponses = {
    200: Array<KeycloakGroup>;
};

export type KeycloakGroupsListResponse = KeycloakGroupsListResponses[keyof KeycloakGroupsListResponses];

export type KeycloakGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role?: string;
        scope_type?: string;
        scope_uuid?: string;
    };
    url: '/api/keycloak-groups/';
};

export type KeycloakGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type KeycloakGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keycloak-groups/{uuid}/';
};

export type KeycloakGroupsRetrieveResponses = {
    200: KeycloakGroup;
};

export type KeycloakGroupsRetrieveResponse = KeycloakGroupsRetrieveResponses[keyof KeycloakGroupsRetrieveResponses];

export type KeycloakUserGroupMembershipsListData = {
    body?: never;
    path?: never;
    query?: {
        email?: string;
        first_name?: string;
        group_uuid?: string;
        last_name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_uuid?: string;
        scope_type?: string;
        scope_uuid?: string;
        state?: Array<'active' | 'pending'>;
        username?: string;
    };
    url: '/api/keycloak-user-group-memberships/';
};

export type KeycloakUserGroupMembershipsListResponses = {
    200: Array<KeycloakUserGroupMembership>;
};

export type KeycloakUserGroupMembershipsListResponse = KeycloakUserGroupMembershipsListResponses[keyof KeycloakUserGroupMembershipsListResponses];

export type KeycloakUserGroupMembershipsCountData = {
    body?: never;
    path?: never;
    query?: {
        email?: string;
        first_name?: string;
        group_uuid?: string;
        last_name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_uuid?: string;
        scope_type?: string;
        scope_uuid?: string;
        state?: Array<'active' | 'pending'>;
        username?: string;
    };
    url: '/api/keycloak-user-group-memberships/';
};

export type KeycloakUserGroupMembershipsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type KeycloakUserGroupMembershipsCreateData = {
    body: KeycloakUserGroupMembershipRequest;
    path?: never;
    query?: never;
    url: '/api/keycloak-user-group-memberships/';
};

export type KeycloakUserGroupMembershipsCreateResponses = {
    201: KeycloakUserGroupMembership;
};

export type KeycloakUserGroupMembershipsCreateResponse = KeycloakUserGroupMembershipsCreateResponses[keyof KeycloakUserGroupMembershipsCreateResponses];

export type KeycloakUserGroupMembershipsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keycloak-user-group-memberships/{uuid}/';
};

export type KeycloakUserGroupMembershipsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type KeycloakUserGroupMembershipsDestroyResponse = KeycloakUserGroupMembershipsDestroyResponses[keyof KeycloakUserGroupMembershipsDestroyResponses];

export type KeycloakUserGroupMembershipsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keycloak-user-group-memberships/{uuid}/';
};

export type KeycloakUserGroupMembershipsRetrieveResponses = {
    200: KeycloakUserGroupMembership;
};

export type KeycloakUserGroupMembershipsRetrieveResponse = KeycloakUserGroupMembershipsRetrieveResponses[keyof KeycloakUserGroupMembershipsRetrieveResponses];

export type KeycloakUserGroupMembershipsPartialUpdateData = {
    body?: PatchedKeycloakUserGroupMembershipRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keycloak-user-group-memberships/{uuid}/';
};

export type KeycloakUserGroupMembershipsPartialUpdateResponses = {
    200: KeycloakUserGroupMembership;
};

export type KeycloakUserGroupMembershipsPartialUpdateResponse = KeycloakUserGroupMembershipsPartialUpdateResponses[keyof KeycloakUserGroupMembershipsPartialUpdateResponses];

export type KeycloakUserGroupMembershipsUpdateData = {
    body: KeycloakUserGroupMembershipRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keycloak-user-group-memberships/{uuid}/';
};

export type KeycloakUserGroupMembershipsUpdateResponses = {
    200: KeycloakUserGroupMembership;
};

export type KeycloakUserGroupMembershipsUpdateResponse = KeycloakUserGroupMembershipsUpdateResponses[keyof KeycloakUserGroupMembershipsUpdateResponses];

export type KeysListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        field?: Array<'fingerprint_md5' | 'fingerprint_sha256' | 'fingerprint_sha512' | 'is_shared' | 'name' | 'public_key' | 'type' | 'url' | 'user_uuid' | 'uuid'>;
        fingerprint_md5?: string;
        fingerprint_sha256?: string;
        fingerprint_sha512?: string;
        is_shared?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-name' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user_uuid?: string;
        uuid?: string;
    };
    url: '/api/keys/';
};

export type KeysListResponses = {
    200: Array<SshKey>;
};

export type KeysListResponse = KeysListResponses[keyof KeysListResponses];

export type KeysCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        fingerprint_md5?: string;
        fingerprint_sha256?: string;
        fingerprint_sha512?: string;
        is_shared?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-name' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user_uuid?: string;
        uuid?: string;
    };
    url: '/api/keys/';
};

export type KeysCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type KeysCreateData = {
    body: SshKeyRequest;
    path?: never;
    query?: never;
    url: '/api/keys/';
};

export type KeysCreateResponses = {
    201: SshKey;
};

export type KeysCreateResponse = KeysCreateResponses[keyof KeysCreateResponses];

export type KeysDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/keys/{uuid}/';
};

export type KeysDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type KeysDestroyResponse = KeysDestroyResponses[keyof KeysDestroyResponses];

export type KeysRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'fingerprint_md5' | 'fingerprint_sha256' | 'fingerprint_sha512' | 'is_shared' | 'name' | 'public_key' | 'type' | 'url' | 'user_uuid' | 'uuid'>;
    };
    url: '/api/keys/{uuid}/';
};

export type KeysRetrieveResponses = {
    200: SshKey;
};

export type KeysRetrieveResponse = KeysRetrieveResponses[keyof KeysRetrieveResponses];

export type LexisLinksListData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        /**
         * Filter by robot account username or type
         */
        query?: string;
        resource_uuid?: string;
        uuid?: string;
    };
    url: '/api/lexis-links/';
};

export type LexisLinksListResponses = {
    200: Array<LexisLink>;
};

export type LexisLinksListResponse = LexisLinksListResponses[keyof LexisLinksListResponses];

export type LexisLinksCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        /**
         * Filter by robot account username or type
         */
        query?: string;
        resource_uuid?: string;
        uuid?: string;
    };
    url: '/api/lexis-links/';
};

export type LexisLinksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type LexisLinksCreateData = {
    body: LexisLinkCreateRequest;
    path?: never;
    query?: never;
    url: '/api/lexis-links/';
};

export type LexisLinksCreateResponses = {
    /**
     * No response body
     */
    201: unknown;
};

export type LexisLinksDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/lexis-links/{uuid}/';
};

export type LexisLinksDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type LexisLinksDestroyResponse = LexisLinksDestroyResponses[keyof LexisLinksDestroyResponses];

export type LexisLinksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/lexis-links/{uuid}/';
};

export type LexisLinksRetrieveResponses = {
    200: LexisLink;
};

export type LexisLinksRetrieveResponse = LexisLinksRetrieveResponses[keyof LexisLinksRetrieveResponses];

export type LexisLinksPartialUpdateData = {
    body?: PatchedLexisLinkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/lexis-links/{uuid}/';
};

export type LexisLinksPartialUpdateResponses = {
    200: LexisLink;
};

export type LexisLinksPartialUpdateResponse = LexisLinksPartialUpdateResponses[keyof LexisLinksPartialUpdateResponses];

export type LexisLinksUpdateData = {
    body?: LexisLinkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/lexis-links/{uuid}/';
};

export type LexisLinksUpdateResponses = {
    200: LexisLink;
};

export type LexisLinksUpdateResponse = LexisLinksUpdateResponses[keyof LexisLinksUpdateResponses];

export type MaintenanceAnnouncementOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/maintenance-announcement-offerings/';
};

export type MaintenanceAnnouncementOfferingsListResponses = {
    200: Array<MaintenanceAnnouncementOffering>;
};

export type MaintenanceAnnouncementOfferingsListResponse = MaintenanceAnnouncementOfferingsListResponses[keyof MaintenanceAnnouncementOfferingsListResponses];

export type MaintenanceAnnouncementOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/maintenance-announcement-offerings/';
};

export type MaintenanceAnnouncementOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MaintenanceAnnouncementOfferingsCreateData = {
    body: MaintenanceAnnouncementOfferingRequest;
    path?: never;
    query?: never;
    url: '/api/maintenance-announcement-offerings/';
};

export type MaintenanceAnnouncementOfferingsCreateResponses = {
    201: MaintenanceAnnouncementOffering;
};

export type MaintenanceAnnouncementOfferingsCreateResponse = MaintenanceAnnouncementOfferingsCreateResponses[keyof MaintenanceAnnouncementOfferingsCreateResponses];

export type MaintenanceAnnouncementOfferingsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-offerings/{uuid}/';
};

export type MaintenanceAnnouncementOfferingsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MaintenanceAnnouncementOfferingsDestroyResponse = MaintenanceAnnouncementOfferingsDestroyResponses[keyof MaintenanceAnnouncementOfferingsDestroyResponses];

export type MaintenanceAnnouncementOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-offerings/{uuid}/';
};

export type MaintenanceAnnouncementOfferingsRetrieveResponses = {
    200: MaintenanceAnnouncementOffering;
};

export type MaintenanceAnnouncementOfferingsRetrieveResponse = MaintenanceAnnouncementOfferingsRetrieveResponses[keyof MaintenanceAnnouncementOfferingsRetrieveResponses];

export type MaintenanceAnnouncementOfferingsPartialUpdateData = {
    body?: PatchedMaintenanceAnnouncementOfferingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-offerings/{uuid}/';
};

export type MaintenanceAnnouncementOfferingsPartialUpdateResponses = {
    200: MaintenanceAnnouncementOffering;
};

export type MaintenanceAnnouncementOfferingsPartialUpdateResponse = MaintenanceAnnouncementOfferingsPartialUpdateResponses[keyof MaintenanceAnnouncementOfferingsPartialUpdateResponses];

export type MaintenanceAnnouncementOfferingsUpdateData = {
    body: MaintenanceAnnouncementOfferingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-offerings/{uuid}/';
};

export type MaintenanceAnnouncementOfferingsUpdateResponses = {
    200: MaintenanceAnnouncementOffering;
};

export type MaintenanceAnnouncementOfferingsUpdateResponse = MaintenanceAnnouncementOfferingsUpdateResponses[keyof MaintenanceAnnouncementOfferingsUpdateResponses];

export type MaintenanceAnnouncementTemplateOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        impact_level?: number;
        maintenance_template_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        service_provider_uuid?: string;
    };
    url: '/api/maintenance-announcement-template-offerings/';
};

export type MaintenanceAnnouncementTemplateOfferingsListResponses = {
    200: Array<MaintenanceAnnouncementOfferingTemplate>;
};

export type MaintenanceAnnouncementTemplateOfferingsListResponse = MaintenanceAnnouncementTemplateOfferingsListResponses[keyof MaintenanceAnnouncementTemplateOfferingsListResponses];

export type MaintenanceAnnouncementTemplateOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        impact_level?: number;
        maintenance_template_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        service_provider_uuid?: string;
    };
    url: '/api/maintenance-announcement-template-offerings/';
};

export type MaintenanceAnnouncementTemplateOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MaintenanceAnnouncementTemplateOfferingsCreateData = {
    body: MaintenanceAnnouncementOfferingTemplateRequest;
    path?: never;
    query?: never;
    url: '/api/maintenance-announcement-template-offerings/';
};

export type MaintenanceAnnouncementTemplateOfferingsCreateResponses = {
    201: MaintenanceAnnouncementOfferingTemplate;
};

export type MaintenanceAnnouncementTemplateOfferingsCreateResponse = MaintenanceAnnouncementTemplateOfferingsCreateResponses[keyof MaintenanceAnnouncementTemplateOfferingsCreateResponses];

export type MaintenanceAnnouncementTemplateOfferingsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-template-offerings/{uuid}/';
};

export type MaintenanceAnnouncementTemplateOfferingsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MaintenanceAnnouncementTemplateOfferingsDestroyResponse = MaintenanceAnnouncementTemplateOfferingsDestroyResponses[keyof MaintenanceAnnouncementTemplateOfferingsDestroyResponses];

export type MaintenanceAnnouncementTemplateOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-template-offerings/{uuid}/';
};

export type MaintenanceAnnouncementTemplateOfferingsRetrieveResponses = {
    200: MaintenanceAnnouncementOfferingTemplate;
};

export type MaintenanceAnnouncementTemplateOfferingsRetrieveResponse = MaintenanceAnnouncementTemplateOfferingsRetrieveResponses[keyof MaintenanceAnnouncementTemplateOfferingsRetrieveResponses];

export type MaintenanceAnnouncementTemplateOfferingsPartialUpdateData = {
    body?: PatchedMaintenanceAnnouncementOfferingTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-template-offerings/{uuid}/';
};

export type MaintenanceAnnouncementTemplateOfferingsPartialUpdateResponses = {
    200: MaintenanceAnnouncementOfferingTemplate;
};

export type MaintenanceAnnouncementTemplateOfferingsPartialUpdateResponse = MaintenanceAnnouncementTemplateOfferingsPartialUpdateResponses[keyof MaintenanceAnnouncementTemplateOfferingsPartialUpdateResponses];

export type MaintenanceAnnouncementTemplateOfferingsUpdateData = {
    body: MaintenanceAnnouncementOfferingTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcement-template-offerings/{uuid}/';
};

export type MaintenanceAnnouncementTemplateOfferingsUpdateResponses = {
    200: MaintenanceAnnouncementOfferingTemplate;
};

export type MaintenanceAnnouncementTemplateOfferingsUpdateResponse = MaintenanceAnnouncementTemplateOfferingsUpdateResponses[keyof MaintenanceAnnouncementTemplateOfferingsUpdateResponses];

export type MaintenanceAnnouncementsListData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-scheduled_end' | '-scheduled_start' | 'created' | 'name' | 'scheduled_end' | 'scheduled_start'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scheduled_end_after?: string;
        scheduled_end_before?: string;
        scheduled_start_after?: string;
        scheduled_start_before?: string;
        service_provider_uuid?: string;
        state?: Array<'Cancelled' | 'Completed' | 'Draft' | 'In progress' | 'Scheduled'>;
    };
    url: '/api/maintenance-announcements/';
};

export type MaintenanceAnnouncementsListResponses = {
    200: Array<MaintenanceAnnouncement>;
};

export type MaintenanceAnnouncementsListResponse = MaintenanceAnnouncementsListResponses[keyof MaintenanceAnnouncementsListResponses];

export type MaintenanceAnnouncementsCountData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-scheduled_end' | '-scheduled_start' | 'created' | 'name' | 'scheduled_end' | 'scheduled_start'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scheduled_end_after?: string;
        scheduled_end_before?: string;
        scheduled_start_after?: string;
        scheduled_start_before?: string;
        service_provider_uuid?: string;
        state?: Array<'Cancelled' | 'Completed' | 'Draft' | 'In progress' | 'Scheduled'>;
    };
    url: '/api/maintenance-announcements/';
};

export type MaintenanceAnnouncementsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MaintenanceAnnouncementsCreateData = {
    body: MaintenanceAnnouncementRequest;
    path?: never;
    query?: never;
    url: '/api/maintenance-announcements/';
};

export type MaintenanceAnnouncementsCreateResponses = {
    201: MaintenanceAnnouncement;
};

export type MaintenanceAnnouncementsCreateResponse = MaintenanceAnnouncementsCreateResponses[keyof MaintenanceAnnouncementsCreateResponses];

export type MaintenanceAnnouncementsTemplateListData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        service_provider_uuid?: string;
    };
    url: '/api/maintenance-announcements-template/';
};

export type MaintenanceAnnouncementsTemplateListResponses = {
    200: Array<MaintenanceAnnouncementTemplate>;
};

export type MaintenanceAnnouncementsTemplateListResponse = MaintenanceAnnouncementsTemplateListResponses[keyof MaintenanceAnnouncementsTemplateListResponses];

export type MaintenanceAnnouncementsTemplateCountData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        service_provider_uuid?: string;
    };
    url: '/api/maintenance-announcements-template/';
};

export type MaintenanceAnnouncementsTemplateCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MaintenanceAnnouncementsTemplateCreateData = {
    body: MaintenanceAnnouncementTemplateRequest;
    path?: never;
    query?: never;
    url: '/api/maintenance-announcements-template/';
};

export type MaintenanceAnnouncementsTemplateCreateResponses = {
    201: MaintenanceAnnouncementTemplate;
};

export type MaintenanceAnnouncementsTemplateCreateResponse = MaintenanceAnnouncementsTemplateCreateResponses[keyof MaintenanceAnnouncementsTemplateCreateResponses];

export type MaintenanceAnnouncementsTemplateDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements-template/{uuid}/';
};

export type MaintenanceAnnouncementsTemplateDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MaintenanceAnnouncementsTemplateDestroyResponse = MaintenanceAnnouncementsTemplateDestroyResponses[keyof MaintenanceAnnouncementsTemplateDestroyResponses];

export type MaintenanceAnnouncementsTemplateRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements-template/{uuid}/';
};

export type MaintenanceAnnouncementsTemplateRetrieveResponses = {
    200: MaintenanceAnnouncementTemplate;
};

export type MaintenanceAnnouncementsTemplateRetrieveResponse = MaintenanceAnnouncementsTemplateRetrieveResponses[keyof MaintenanceAnnouncementsTemplateRetrieveResponses];

export type MaintenanceAnnouncementsTemplatePartialUpdateData = {
    body?: PatchedMaintenanceAnnouncementTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements-template/{uuid}/';
};

export type MaintenanceAnnouncementsTemplatePartialUpdateResponses = {
    200: MaintenanceAnnouncementTemplate;
};

export type MaintenanceAnnouncementsTemplatePartialUpdateResponse = MaintenanceAnnouncementsTemplatePartialUpdateResponses[keyof MaintenanceAnnouncementsTemplatePartialUpdateResponses];

export type MaintenanceAnnouncementsTemplateUpdateData = {
    body: MaintenanceAnnouncementTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements-template/{uuid}/';
};

export type MaintenanceAnnouncementsTemplateUpdateResponses = {
    200: MaintenanceAnnouncementTemplate;
};

export type MaintenanceAnnouncementsTemplateUpdateResponse = MaintenanceAnnouncementsTemplateUpdateResponses[keyof MaintenanceAnnouncementsTemplateUpdateResponses];

export type MaintenanceAnnouncementsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/';
};

export type MaintenanceAnnouncementsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MaintenanceAnnouncementsDestroyResponse = MaintenanceAnnouncementsDestroyResponses[keyof MaintenanceAnnouncementsDestroyResponses];

export type MaintenanceAnnouncementsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/';
};

export type MaintenanceAnnouncementsRetrieveResponses = {
    200: MaintenanceAnnouncement;
};

export type MaintenanceAnnouncementsRetrieveResponse = MaintenanceAnnouncementsRetrieveResponses[keyof MaintenanceAnnouncementsRetrieveResponses];

export type MaintenanceAnnouncementsPartialUpdateData = {
    body?: PatchedMaintenanceAnnouncementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/';
};

export type MaintenanceAnnouncementsPartialUpdateResponses = {
    200: MaintenanceAnnouncement;
};

export type MaintenanceAnnouncementsPartialUpdateResponse = MaintenanceAnnouncementsPartialUpdateResponses[keyof MaintenanceAnnouncementsPartialUpdateResponses];

export type MaintenanceAnnouncementsUpdateData = {
    body: MaintenanceAnnouncementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/';
};

export type MaintenanceAnnouncementsUpdateResponses = {
    200: MaintenanceAnnouncement;
};

export type MaintenanceAnnouncementsUpdateResponse = MaintenanceAnnouncementsUpdateResponses[keyof MaintenanceAnnouncementsUpdateResponses];

export type MaintenanceAnnouncementsCancelMaintenanceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/cancel_maintenance/';
};

export type MaintenanceAnnouncementsCancelMaintenanceResponses = {
    200: MaintenanceActionResponse;
};

export type MaintenanceAnnouncementsCancelMaintenanceResponse = MaintenanceAnnouncementsCancelMaintenanceResponses[keyof MaintenanceAnnouncementsCancelMaintenanceResponses];

export type MaintenanceAnnouncementsCompleteMaintenanceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/complete_maintenance/';
};

export type MaintenanceAnnouncementsCompleteMaintenanceResponses = {
    200: MaintenanceActionResponse;
};

export type MaintenanceAnnouncementsCompleteMaintenanceResponse = MaintenanceAnnouncementsCompleteMaintenanceResponses[keyof MaintenanceAnnouncementsCompleteMaintenanceResponses];

export type MaintenanceAnnouncementsScheduleData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/schedule/';
};

export type MaintenanceAnnouncementsScheduleResponses = {
    200: MaintenanceActionResponse;
};

export type MaintenanceAnnouncementsScheduleResponse = MaintenanceAnnouncementsScheduleResponses[keyof MaintenanceAnnouncementsScheduleResponses];

export type MaintenanceAnnouncementsStartMaintenanceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/start_maintenance/';
};

export type MaintenanceAnnouncementsStartMaintenanceResponses = {
    200: MaintenanceActionResponse;
};

export type MaintenanceAnnouncementsStartMaintenanceResponse = MaintenanceAnnouncementsStartMaintenanceResponses[keyof MaintenanceAnnouncementsStartMaintenanceResponses];

export type MaintenanceAnnouncementsUnscheduleData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/maintenance-announcements/{uuid}/unschedule/';
};

export type MaintenanceAnnouncementsUnscheduleResponses = {
    200: MaintenanceActionResponse;
};

export type MaintenanceAnnouncementsUnscheduleResponse = MaintenanceAnnouncementsUnscheduleResponses[keyof MaintenanceAnnouncementsUnscheduleResponses];

export type MarketplaceBookingsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-bookings/{uuid}/';
};

export type MarketplaceBookingsListResponses = {
    200: Array<Booking>;
};

export type MarketplaceBookingsListResponse = MarketplaceBookingsListResponses[keyof MarketplaceBookingsListResponses];

export type MarketplaceCategoriesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        /**
         * Customers offerings state
         *
         *
         */
        customers_offerings_state?: Array<1 | 2 | 3 | 4>;
        field?: Array<'articles' | 'available_offerings_count' | 'columns' | 'components' | 'default_tenant_category' | 'default_vm_category' | 'default_volume_category' | 'description' | 'group' | 'icon' | 'offering_count' | 'sections' | 'title' | 'url' | 'uuid'>;
        group_uuid?: string;
        /**
         * Has shared
         */
        has_shared?: boolean;
        offering_name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        resource_customer_uuid?: string;
        resource_project_uuid?: string;
        title?: string;
    };
    url: '/api/marketplace-categories/';
};

export type MarketplaceCategoriesListResponses = {
    200: Array<MarketplaceCategory>;
};

export type MarketplaceCategoriesListResponse = MarketplaceCategoriesListResponses[keyof MarketplaceCategoriesListResponses];

export type MarketplaceCategoriesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        /**
         * Customers offerings state
         *
         *
         */
        customers_offerings_state?: Array<1 | 2 | 3 | 4>;
        group_uuid?: string;
        /**
         * Has shared
         */
        has_shared?: boolean;
        offering_name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        resource_customer_uuid?: string;
        resource_project_uuid?: string;
        title?: string;
    };
    url: '/api/marketplace-categories/';
};

export type MarketplaceCategoriesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoriesCreateData = {
    body: MarketplaceCategoryRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-categories/';
};

export type MarketplaceCategoriesCreateResponses = {
    201: MarketplaceCategory;
};

export type MarketplaceCategoriesCreateResponse = MarketplaceCategoriesCreateResponses[keyof MarketplaceCategoriesCreateResponses];

export type MarketplaceCategoriesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-categories/{uuid}/';
};

export type MarketplaceCategoriesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCategoriesDestroyResponse = MarketplaceCategoriesDestroyResponses[keyof MarketplaceCategoriesDestroyResponses];

export type MarketplaceCategoriesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'articles' | 'available_offerings_count' | 'columns' | 'components' | 'default_tenant_category' | 'default_vm_category' | 'default_volume_category' | 'description' | 'group' | 'icon' | 'offering_count' | 'sections' | 'title' | 'url' | 'uuid'>;
    };
    url: '/api/marketplace-categories/{uuid}/';
};

export type MarketplaceCategoriesRetrieveResponses = {
    200: MarketplaceCategory;
};

export type MarketplaceCategoriesRetrieveResponse = MarketplaceCategoriesRetrieveResponses[keyof MarketplaceCategoriesRetrieveResponses];

export type MarketplaceCategoriesPartialUpdateData = {
    body?: PatchedMarketplaceCategoryRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-categories/{uuid}/';
};

export type MarketplaceCategoriesPartialUpdateResponses = {
    200: MarketplaceCategory;
};

export type MarketplaceCategoriesPartialUpdateResponse = MarketplaceCategoriesPartialUpdateResponses[keyof MarketplaceCategoriesPartialUpdateResponses];

export type MarketplaceCategoriesUpdateData = {
    body: MarketplaceCategoryRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-categories/{uuid}/';
};

export type MarketplaceCategoriesUpdateResponses = {
    200: MarketplaceCategory;
};

export type MarketplaceCategoriesUpdateResponse = MarketplaceCategoriesUpdateResponses[keyof MarketplaceCategoriesUpdateResponses];

export type MarketplaceCategoryColumnsListData = {
    body?: never;
    path?: never;
    query?: {
        category_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        title?: string;
    };
    url: '/api/marketplace-category-columns/';
};

export type MarketplaceCategoryColumnsListResponses = {
    200: Array<CategoryColumn>;
};

export type MarketplaceCategoryColumnsListResponse = MarketplaceCategoryColumnsListResponses[keyof MarketplaceCategoryColumnsListResponses];

export type MarketplaceCategoryColumnsCountData = {
    body?: never;
    path?: never;
    query?: {
        category_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        title?: string;
    };
    url: '/api/marketplace-category-columns/';
};

export type MarketplaceCategoryColumnsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoryColumnsCreateData = {
    body: CategoryColumnRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-category-columns/';
};

export type MarketplaceCategoryColumnsCreateResponses = {
    201: CategoryColumn;
};

export type MarketplaceCategoryColumnsCreateResponse = MarketplaceCategoryColumnsCreateResponses[keyof MarketplaceCategoryColumnsCreateResponses];

export type MarketplaceCategoryColumnsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-columns/{uuid}/';
};

export type MarketplaceCategoryColumnsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCategoryColumnsDestroyResponse = MarketplaceCategoryColumnsDestroyResponses[keyof MarketplaceCategoryColumnsDestroyResponses];

export type MarketplaceCategoryColumnsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-columns/{uuid}/';
};

export type MarketplaceCategoryColumnsRetrieveResponses = {
    200: CategoryColumn;
};

export type MarketplaceCategoryColumnsRetrieveResponse = MarketplaceCategoryColumnsRetrieveResponses[keyof MarketplaceCategoryColumnsRetrieveResponses];

export type MarketplaceCategoryColumnsPartialUpdateData = {
    body?: PatchedCategoryColumnRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-columns/{uuid}/';
};

export type MarketplaceCategoryColumnsPartialUpdateResponses = {
    200: CategoryColumn;
};

export type MarketplaceCategoryColumnsPartialUpdateResponse = MarketplaceCategoryColumnsPartialUpdateResponses[keyof MarketplaceCategoryColumnsPartialUpdateResponses];

export type MarketplaceCategoryColumnsUpdateData = {
    body: CategoryColumnRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-columns/{uuid}/';
};

export type MarketplaceCategoryColumnsUpdateResponses = {
    200: CategoryColumn;
};

export type MarketplaceCategoryColumnsUpdateResponse = MarketplaceCategoryColumnsUpdateResponses[keyof MarketplaceCategoryColumnsUpdateResponses];

export type MarketplaceCategoryComponentUsagesListData = {
    body?: never;
    path?: never;
    query?: {
        date_after?: string;
        date_before?: string;
        field?: Array<'category_title' | 'category_uuid' | 'date' | 'fixed_usage' | 'measured_unit' | 'name' | 'reported_usage' | 'scope' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-component-usages/';
};

export type MarketplaceCategoryComponentUsagesListResponses = {
    200: Array<CategoryComponentUsage>;
};

export type MarketplaceCategoryComponentUsagesListResponse = MarketplaceCategoryComponentUsagesListResponses[keyof MarketplaceCategoryComponentUsagesListResponses];

export type MarketplaceCategoryComponentUsagesCountData = {
    body?: never;
    path?: never;
    query?: {
        date_after?: string;
        date_before?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-component-usages/';
};

export type MarketplaceCategoryComponentUsagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoryComponentUsagesRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this category component usage.
         */
        id: number;
    };
    query?: {
        field?: Array<'category_title' | 'category_uuid' | 'date' | 'fixed_usage' | 'measured_unit' | 'name' | 'reported_usage' | 'scope' | 'type'>;
    };
    url: '/api/marketplace-category-component-usages/{id}/';
};

export type MarketplaceCategoryComponentUsagesRetrieveResponses = {
    200: CategoryComponentUsage;
};

export type MarketplaceCategoryComponentUsagesRetrieveResponse = MarketplaceCategoryComponentUsagesRetrieveResponses[keyof MarketplaceCategoryComponentUsagesRetrieveResponses];

export type MarketplaceCategoryComponentsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-components/';
};

export type MarketplaceCategoryComponentsListResponses = {
    200: Array<CategoryComponents>;
};

export type MarketplaceCategoryComponentsListResponse = MarketplaceCategoryComponentsListResponses[keyof MarketplaceCategoryComponentsListResponses];

export type MarketplaceCategoryComponentsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-components/';
};

export type MarketplaceCategoryComponentsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoryComponentsCreateData = {
    body: CategoryComponentsRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-category-components/';
};

export type MarketplaceCategoryComponentsCreateResponses = {
    201: CategoryComponents;
};

export type MarketplaceCategoryComponentsCreateResponse = MarketplaceCategoryComponentsCreateResponses[keyof MarketplaceCategoryComponentsCreateResponses];

export type MarketplaceCategoryComponentsDestroyData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this category component.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-components/{id}/';
};

export type MarketplaceCategoryComponentsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCategoryComponentsDestroyResponse = MarketplaceCategoryComponentsDestroyResponses[keyof MarketplaceCategoryComponentsDestroyResponses];

export type MarketplaceCategoryComponentsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this category component.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-components/{id}/';
};

export type MarketplaceCategoryComponentsRetrieveResponses = {
    200: CategoryComponents;
};

export type MarketplaceCategoryComponentsRetrieveResponse = MarketplaceCategoryComponentsRetrieveResponses[keyof MarketplaceCategoryComponentsRetrieveResponses];

export type MarketplaceCategoryComponentsPartialUpdateData = {
    body?: PatchedCategoryComponentsRequest;
    path: {
        /**
         * A unique integer value identifying this category component.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-components/{id}/';
};

export type MarketplaceCategoryComponentsPartialUpdateResponses = {
    200: CategoryComponents;
};

export type MarketplaceCategoryComponentsPartialUpdateResponse = MarketplaceCategoryComponentsPartialUpdateResponses[keyof MarketplaceCategoryComponentsPartialUpdateResponses];

export type MarketplaceCategoryComponentsUpdateData = {
    body: CategoryComponentsRequest;
    path: {
        /**
         * A unique integer value identifying this category component.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-components/{id}/';
};

export type MarketplaceCategoryComponentsUpdateResponses = {
    200: CategoryComponents;
};

export type MarketplaceCategoryComponentsUpdateResponse = MarketplaceCategoryComponentsUpdateResponses[keyof MarketplaceCategoryComponentsUpdateResponses];

export type MarketplaceCategoryGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'description' | 'icon' | 'title' | 'url' | 'uuid'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        title?: string;
    };
    url: '/api/marketplace-category-groups/';
};

export type MarketplaceCategoryGroupsListResponses = {
    200: Array<CategoryGroup>;
};

export type MarketplaceCategoryGroupsListResponse = MarketplaceCategoryGroupsListResponses[keyof MarketplaceCategoryGroupsListResponses];

export type MarketplaceCategoryGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        title?: string;
    };
    url: '/api/marketplace-category-groups/';
};

export type MarketplaceCategoryGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoryGroupsCreateData = {
    body: CategoryGroupRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-category-groups/';
};

export type MarketplaceCategoryGroupsCreateResponses = {
    201: CategoryGroup;
};

export type MarketplaceCategoryGroupsCreateResponse = MarketplaceCategoryGroupsCreateResponses[keyof MarketplaceCategoryGroupsCreateResponses];

export type MarketplaceCategoryGroupsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-groups/{uuid}/';
};

export type MarketplaceCategoryGroupsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCategoryGroupsDestroyResponse = MarketplaceCategoryGroupsDestroyResponses[keyof MarketplaceCategoryGroupsDestroyResponses];

export type MarketplaceCategoryGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'description' | 'icon' | 'title' | 'url' | 'uuid'>;
    };
    url: '/api/marketplace-category-groups/{uuid}/';
};

export type MarketplaceCategoryGroupsRetrieveResponses = {
    200: CategoryGroup;
};

export type MarketplaceCategoryGroupsRetrieveResponse = MarketplaceCategoryGroupsRetrieveResponses[keyof MarketplaceCategoryGroupsRetrieveResponses];

export type MarketplaceCategoryGroupsPartialUpdateData = {
    body?: PatchedCategoryGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-groups/{uuid}/';
};

export type MarketplaceCategoryGroupsPartialUpdateResponses = {
    200: CategoryGroup;
};

export type MarketplaceCategoryGroupsPartialUpdateResponse = MarketplaceCategoryGroupsPartialUpdateResponses[keyof MarketplaceCategoryGroupsPartialUpdateResponses];

export type MarketplaceCategoryGroupsUpdateData = {
    body: CategoryGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-category-groups/{uuid}/';
};

export type MarketplaceCategoryGroupsUpdateResponses = {
    200: CategoryGroup;
};

export type MarketplaceCategoryGroupsUpdateResponse = MarketplaceCategoryGroupsUpdateResponses[keyof MarketplaceCategoryGroupsUpdateResponses];

export type MarketplaceCategoryHelpArticlesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-help-articles/';
};

export type MarketplaceCategoryHelpArticlesListResponses = {
    200: Array<CategoryHelpArticles>;
};

export type MarketplaceCategoryHelpArticlesListResponse = MarketplaceCategoryHelpArticlesListResponses[keyof MarketplaceCategoryHelpArticlesListResponses];

export type MarketplaceCategoryHelpArticlesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-category-help-articles/';
};

export type MarketplaceCategoryHelpArticlesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCategoryHelpArticlesCreateData = {
    body: CategoryHelpArticlesRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-category-help-articles/';
};

export type MarketplaceCategoryHelpArticlesCreateResponses = {
    201: CategoryHelpArticles;
};

export type MarketplaceCategoryHelpArticlesCreateResponse = MarketplaceCategoryHelpArticlesCreateResponses[keyof MarketplaceCategoryHelpArticlesCreateResponses];

export type MarketplaceCategoryHelpArticlesDestroyData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this category help article.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-help-articles/{id}/';
};

export type MarketplaceCategoryHelpArticlesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCategoryHelpArticlesDestroyResponse = MarketplaceCategoryHelpArticlesDestroyResponses[keyof MarketplaceCategoryHelpArticlesDestroyResponses];

export type MarketplaceCategoryHelpArticlesRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this category help article.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-help-articles/{id}/';
};

export type MarketplaceCategoryHelpArticlesRetrieveResponses = {
    200: CategoryHelpArticles;
};

export type MarketplaceCategoryHelpArticlesRetrieveResponse = MarketplaceCategoryHelpArticlesRetrieveResponses[keyof MarketplaceCategoryHelpArticlesRetrieveResponses];

export type MarketplaceCategoryHelpArticlesPartialUpdateData = {
    body?: PatchedCategoryHelpArticlesRequest;
    path: {
        /**
         * A unique integer value identifying this category help article.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-help-articles/{id}/';
};

export type MarketplaceCategoryHelpArticlesPartialUpdateResponses = {
    200: CategoryHelpArticles;
};

export type MarketplaceCategoryHelpArticlesPartialUpdateResponse = MarketplaceCategoryHelpArticlesPartialUpdateResponses[keyof MarketplaceCategoryHelpArticlesPartialUpdateResponses];

export type MarketplaceCategoryHelpArticlesUpdateData = {
    body: CategoryHelpArticlesRequest;
    path: {
        /**
         * A unique integer value identifying this category help article.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-category-help-articles/{id}/';
};

export type MarketplaceCategoryHelpArticlesUpdateResponses = {
    200: CategoryHelpArticles;
};

export type MarketplaceCategoryHelpArticlesUpdateResponse = MarketplaceCategoryHelpArticlesUpdateResponses[keyof MarketplaceCategoryHelpArticlesUpdateResponses];

export type MarketplaceComponentUsagesListData = {
    body?: never;
    path?: never;
    query?: {
        billing_period?: string;
        customer_uuid?: string;
        date_after?: string;
        date_before?: string;
        field?: Array<'billing_period' | 'created' | 'customer_name' | 'customer_uuid' | 'date' | 'description' | 'measured_unit' | 'modified_by' | 'name' | 'offering_name' | 'offering_uuid' | 'project_name' | 'project_uuid' | 'recurring' | 'resource_name' | 'resource_uuid' | 'type' | 'usage' | 'uuid'>;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-billing_period' | '-usage' | 'billing_period' | 'usage'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        resource?: string;
        resource_uuid?: string;
        type?: string;
    };
    url: '/api/marketplace-component-usages/';
};

export type MarketplaceComponentUsagesListResponses = {
    200: Array<ComponentUsage>;
};

export type MarketplaceComponentUsagesListResponse = MarketplaceComponentUsagesListResponses[keyof MarketplaceComponentUsagesListResponses];

export type MarketplaceComponentUsagesCountData = {
    body?: never;
    path?: never;
    query?: {
        billing_period?: string;
        customer_uuid?: string;
        date_after?: string;
        date_before?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-billing_period' | '-usage' | 'billing_period' | 'usage'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        resource?: string;
        resource_uuid?: string;
        type?: string;
    };
    url: '/api/marketplace-component-usages/';
};

export type MarketplaceComponentUsagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceComponentUsagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'billing_period' | 'created' | 'customer_name' | 'customer_uuid' | 'date' | 'description' | 'measured_unit' | 'modified_by' | 'name' | 'offering_name' | 'offering_uuid' | 'project_name' | 'project_uuid' | 'recurring' | 'resource_name' | 'resource_uuid' | 'type' | 'usage' | 'uuid'>;
    };
    url: '/api/marketplace-component-usages/{uuid}/';
};

export type MarketplaceComponentUsagesRetrieveResponses = {
    200: ComponentUsage;
};

export type MarketplaceComponentUsagesRetrieveResponse = MarketplaceComponentUsagesRetrieveResponses[keyof MarketplaceComponentUsagesRetrieveResponses];

export type MarketplaceComponentUsagesSetUserUsageData = {
    body: ComponentUserUsageCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-component-usages/{uuid}/set_user_usage/';
};

export type MarketplaceComponentUsagesSetUserUsageResponses = {
    /**
     * No response body
     */
    201: unknown;
};

export type MarketplaceComponentUsagesSetUsageData = {
    body: ComponentUsageCreateRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-component-usages/set_usage/';
};

export type MarketplaceComponentUsagesSetUsageResponses = {
    /**
     * No response body
     */
    201: unknown;
};

export type MarketplaceComponentUserUsagesListData = {
    body?: never;
    path?: never;
    query?: {
        billing_period_month?: number;
        billing_period_year?: number;
        component_usage__billing_period?: string;
        customer_uuid?: string;
        date_after?: string;
        date_before?: string;
        field?: Array<'backend_id' | 'billing_period' | 'component_type' | 'component_usage' | 'created' | 'customer_name' | 'customer_uuid' | 'date' | 'description' | 'measured_unit' | 'modified' | 'offering_name' | 'offering_uuid' | 'project_name' | 'project_uuid' | 'resource_name' | 'resource_uuid' | 'usage' | 'user' | 'username' | 'uuid'>;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-component_usage__billing_period' | '-usage' | '-username' | 'component_usage__billing_period' | 'usage' | 'username'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        /**
         * Resource URL
         */
        resource?: string;
        resource_uuid?: string;
        type?: string;
        username?: string;
    };
    url: '/api/marketplace-component-user-usages/';
};

export type MarketplaceComponentUserUsagesListResponses = {
    200: Array<ComponentUserUsage>;
};

export type MarketplaceComponentUserUsagesListResponse = MarketplaceComponentUserUsagesListResponses[keyof MarketplaceComponentUserUsagesListResponses];

export type MarketplaceComponentUserUsagesCountData = {
    body?: never;
    path?: never;
    query?: {
        billing_period_month?: number;
        billing_period_year?: number;
        component_usage__billing_period?: string;
        customer_uuid?: string;
        date_after?: string;
        date_before?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-component_usage__billing_period' | '-usage' | '-username' | 'component_usage__billing_period' | 'usage' | 'username'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        /**
         * Resource URL
         */
        resource?: string;
        resource_uuid?: string;
        type?: string;
        username?: string;
    };
    url: '/api/marketplace-component-user-usages/';
};

export type MarketplaceComponentUserUsagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceComponentUserUsagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'billing_period' | 'component_type' | 'component_usage' | 'created' | 'customer_name' | 'customer_uuid' | 'date' | 'description' | 'measured_unit' | 'modified' | 'offering_name' | 'offering_uuid' | 'project_name' | 'project_uuid' | 'resource_name' | 'resource_uuid' | 'usage' | 'user' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-component-user-usages/{uuid}/';
};

export type MarketplaceComponentUserUsagesRetrieveResponses = {
    200: ComponentUserUsage;
};

export type MarketplaceComponentUserUsagesRetrieveResponse = MarketplaceComponentUserUsagesRetrieveResponses[keyof MarketplaceComponentUserUsagesRetrieveResponses];

export type MarketplaceCustomerEstimatedCostPoliciesListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-customer-estimated-cost-policies/';
};

export type MarketplaceCustomerEstimatedCostPoliciesListResponses = {
    200: Array<CustomerEstimatedCostPolicy>;
};

export type MarketplaceCustomerEstimatedCostPoliciesListResponse = MarketplaceCustomerEstimatedCostPoliciesListResponses[keyof MarketplaceCustomerEstimatedCostPoliciesListResponses];

export type MarketplaceCustomerEstimatedCostPoliciesCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-customer-estimated-cost-policies/';
};

export type MarketplaceCustomerEstimatedCostPoliciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCustomerEstimatedCostPoliciesCreateData = {
    body: CustomerEstimatedCostPolicyRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/';
};

export type MarketplaceCustomerEstimatedCostPoliciesCreateResponses = {
    201: CustomerEstimatedCostPolicy;
};

export type MarketplaceCustomerEstimatedCostPoliciesCreateResponse = MarketplaceCustomerEstimatedCostPoliciesCreateResponses[keyof MarketplaceCustomerEstimatedCostPoliciesCreateResponses];

export type MarketplaceCustomerEstimatedCostPoliciesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/{uuid}/';
};

export type MarketplaceCustomerEstimatedCostPoliciesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCustomerEstimatedCostPoliciesDestroyResponse = MarketplaceCustomerEstimatedCostPoliciesDestroyResponses[keyof MarketplaceCustomerEstimatedCostPoliciesDestroyResponses];

export type MarketplaceCustomerEstimatedCostPoliciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/{uuid}/';
};

export type MarketplaceCustomerEstimatedCostPoliciesRetrieveResponses = {
    200: CustomerEstimatedCostPolicy;
};

export type MarketplaceCustomerEstimatedCostPoliciesRetrieveResponse = MarketplaceCustomerEstimatedCostPoliciesRetrieveResponses[keyof MarketplaceCustomerEstimatedCostPoliciesRetrieveResponses];

export type MarketplaceCustomerEstimatedCostPoliciesPartialUpdateData = {
    body?: PatchedCustomerEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/{uuid}/';
};

export type MarketplaceCustomerEstimatedCostPoliciesPartialUpdateResponses = {
    200: CustomerEstimatedCostPolicy;
};

export type MarketplaceCustomerEstimatedCostPoliciesPartialUpdateResponse = MarketplaceCustomerEstimatedCostPoliciesPartialUpdateResponses[keyof MarketplaceCustomerEstimatedCostPoliciesPartialUpdateResponses];

export type MarketplaceCustomerEstimatedCostPoliciesUpdateData = {
    body: CustomerEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/{uuid}/';
};

export type MarketplaceCustomerEstimatedCostPoliciesUpdateResponses = {
    200: CustomerEstimatedCostPolicy;
};

export type MarketplaceCustomerEstimatedCostPoliciesUpdateResponse = MarketplaceCustomerEstimatedCostPoliciesUpdateResponses[keyof MarketplaceCustomerEstimatedCostPoliciesUpdateResponses];

export type MarketplaceCustomerEstimatedCostPoliciesActionsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/actions/';
};

export type MarketplaceCustomerEstimatedCostPoliciesActionsRetrieveResponses = {
    200: CustomerEstimatedCostPolicy;
};

export type MarketplaceCustomerEstimatedCostPoliciesActionsRetrieveResponse = MarketplaceCustomerEstimatedCostPoliciesActionsRetrieveResponses[keyof MarketplaceCustomerEstimatedCostPoliciesActionsRetrieveResponses];

export type MarketplaceCustomerEstimatedCostPoliciesActionsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-customer-estimated-cost-policies/actions/';
};

export type MarketplaceCustomerEstimatedCostPoliciesActionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCustomerServiceAccountsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        email?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        username?: string;
    };
    url: '/api/marketplace-customer-service-accounts/';
};

export type MarketplaceCustomerServiceAccountsListResponses = {
    200: Array<CustomerServiceAccount>;
};

export type MarketplaceCustomerServiceAccountsListResponse = MarketplaceCustomerServiceAccountsListResponses[keyof MarketplaceCustomerServiceAccountsListResponses];

export type MarketplaceCustomerServiceAccountsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        email?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        username?: string;
    };
    url: '/api/marketplace-customer-service-accounts/';
};

export type MarketplaceCustomerServiceAccountsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceCustomerServiceAccountsCreateData = {
    body: CustomerServiceAccountRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-customer-service-accounts/';
};

export type MarketplaceCustomerServiceAccountsCreateResponses = {
    201: CustomerServiceAccount;
};

export type MarketplaceCustomerServiceAccountsCreateResponse = MarketplaceCustomerServiceAccountsCreateResponses[keyof MarketplaceCustomerServiceAccountsCreateResponses];

export type MarketplaceCustomerServiceAccountsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-service-accounts/{uuid}/';
};

export type MarketplaceCustomerServiceAccountsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceCustomerServiceAccountsDestroyResponse = MarketplaceCustomerServiceAccountsDestroyResponses[keyof MarketplaceCustomerServiceAccountsDestroyResponses];

export type MarketplaceCustomerServiceAccountsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-service-accounts/{uuid}/';
};

export type MarketplaceCustomerServiceAccountsRetrieveResponses = {
    200: CustomerServiceAccount;
};

export type MarketplaceCustomerServiceAccountsRetrieveResponse = MarketplaceCustomerServiceAccountsRetrieveResponses[keyof MarketplaceCustomerServiceAccountsRetrieveResponses];

export type MarketplaceCustomerServiceAccountsPartialUpdateData = {
    body?: PatchedCustomerServiceAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-service-accounts/{uuid}/';
};

export type MarketplaceCustomerServiceAccountsPartialUpdateResponses = {
    200: CustomerServiceAccount;
};

export type MarketplaceCustomerServiceAccountsPartialUpdateResponse = MarketplaceCustomerServiceAccountsPartialUpdateResponses[keyof MarketplaceCustomerServiceAccountsPartialUpdateResponses];

export type MarketplaceCustomerServiceAccountsUpdateData = {
    body: CustomerServiceAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-service-accounts/{uuid}/';
};

export type MarketplaceCustomerServiceAccountsUpdateResponses = {
    200: CustomerServiceAccount;
};

export type MarketplaceCustomerServiceAccountsUpdateResponse = MarketplaceCustomerServiceAccountsUpdateResponses[keyof MarketplaceCustomerServiceAccountsUpdateResponses];

export type MarketplaceCustomerServiceAccountsRotateApiKeyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-customer-service-accounts/{uuid}/rotate_api_key/';
};

export type MarketplaceCustomerServiceAccountsRotateApiKeyResponses = {
    200: CustomerServiceAccount;
};

export type MarketplaceCustomerServiceAccountsRotateApiKeyResponse = MarketplaceCustomerServiceAccountsRotateApiKeyResponses[keyof MarketplaceCustomerServiceAccountsRotateApiKeyResponses];

export type MarketplaceGlobalCategoriesRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * UUID of the customer to filter resources by.
         */
        customer_uuid?: string;
        /**
         * UUID of the project to filter resources by.
         */
        project_uuid?: string;
    };
    url: '/api/marketplace-global-categories/';
};

export type MarketplaceGlobalCategoriesRetrieveResponses = {
    200: {
        [key: string]: number;
    };
};

export type MarketplaceGlobalCategoriesRetrieveResponse = MarketplaceGlobalCategoriesRetrieveResponses[keyof MarketplaceGlobalCategoriesRetrieveResponses];

export type MarketplaceIntegrationStatusesListData = {
    body?: never;
    path?: never;
    query?: {
        agent_type?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-last_request_timestamp' | 'last_request_timestamp'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        status?: Array<'Active' | 'Disconnected' | 'Unknown'>;
    };
    url: '/api/marketplace-integration-statuses/';
};

export type MarketplaceIntegrationStatusesListResponses = {
    200: Array<IntegrationStatusDetails>;
};

export type MarketplaceIntegrationStatusesListResponse = MarketplaceIntegrationStatusesListResponses[keyof MarketplaceIntegrationStatusesListResponses];

export type MarketplaceIntegrationStatusesCountData = {
    body?: never;
    path?: never;
    query?: {
        agent_type?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-last_request_timestamp' | 'last_request_timestamp'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        status?: Array<'Active' | 'Disconnected' | 'Unknown'>;
    };
    url: '/api/marketplace-integration-statuses/';
};

export type MarketplaceIntegrationStatusesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceIntegrationStatusesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-integration-statuses/{uuid}/';
};

export type MarketplaceIntegrationStatusesRetrieveResponses = {
    200: IntegrationStatusDetails;
};

export type MarketplaceIntegrationStatusesRetrieveResponse = MarketplaceIntegrationStatusesRetrieveResponses[keyof MarketplaceIntegrationStatusesRetrieveResponses];

export type MarketplaceOfferingEstimatedCostPoliciesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-offering-estimated-cost-policies/';
};

export type MarketplaceOfferingEstimatedCostPoliciesListResponses = {
    200: Array<OfferingEstimatedCostPolicy>;
};

export type MarketplaceOfferingEstimatedCostPoliciesListResponse = MarketplaceOfferingEstimatedCostPoliciesListResponses[keyof MarketplaceOfferingEstimatedCostPoliciesListResponses];

export type MarketplaceOfferingEstimatedCostPoliciesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-offering-estimated-cost-policies/';
};

export type MarketplaceOfferingEstimatedCostPoliciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingEstimatedCostPoliciesCreateData = {
    body: OfferingEstimatedCostPolicyRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/';
};

export type MarketplaceOfferingEstimatedCostPoliciesCreateResponses = {
    201: OfferingEstimatedCostPolicy;
};

export type MarketplaceOfferingEstimatedCostPoliciesCreateResponse = MarketplaceOfferingEstimatedCostPoliciesCreateResponses[keyof MarketplaceOfferingEstimatedCostPoliciesCreateResponses];

export type MarketplaceOfferingEstimatedCostPoliciesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/{uuid}/';
};

export type MarketplaceOfferingEstimatedCostPoliciesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOfferingEstimatedCostPoliciesDestroyResponse = MarketplaceOfferingEstimatedCostPoliciesDestroyResponses[keyof MarketplaceOfferingEstimatedCostPoliciesDestroyResponses];

export type MarketplaceOfferingEstimatedCostPoliciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/{uuid}/';
};

export type MarketplaceOfferingEstimatedCostPoliciesRetrieveResponses = {
    200: OfferingEstimatedCostPolicy;
};

export type MarketplaceOfferingEstimatedCostPoliciesRetrieveResponse = MarketplaceOfferingEstimatedCostPoliciesRetrieveResponses[keyof MarketplaceOfferingEstimatedCostPoliciesRetrieveResponses];

export type MarketplaceOfferingEstimatedCostPoliciesPartialUpdateData = {
    body?: PatchedOfferingEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/{uuid}/';
};

export type MarketplaceOfferingEstimatedCostPoliciesPartialUpdateResponses = {
    200: OfferingEstimatedCostPolicy;
};

export type MarketplaceOfferingEstimatedCostPoliciesPartialUpdateResponse = MarketplaceOfferingEstimatedCostPoliciesPartialUpdateResponses[keyof MarketplaceOfferingEstimatedCostPoliciesPartialUpdateResponses];

export type MarketplaceOfferingEstimatedCostPoliciesUpdateData = {
    body: OfferingEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/{uuid}/';
};

export type MarketplaceOfferingEstimatedCostPoliciesUpdateResponses = {
    200: OfferingEstimatedCostPolicy;
};

export type MarketplaceOfferingEstimatedCostPoliciesUpdateResponse = MarketplaceOfferingEstimatedCostPoliciesUpdateResponses[keyof MarketplaceOfferingEstimatedCostPoliciesUpdateResponses];

export type MarketplaceOfferingEstimatedCostPoliciesActionsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/actions/';
};

export type MarketplaceOfferingEstimatedCostPoliciesActionsRetrieveResponses = {
    200: OfferingEstimatedCostPolicy;
};

export type MarketplaceOfferingEstimatedCostPoliciesActionsRetrieveResponse = MarketplaceOfferingEstimatedCostPoliciesActionsRetrieveResponses[keyof MarketplaceOfferingEstimatedCostPoliciesActionsRetrieveResponses];

export type MarketplaceOfferingEstimatedCostPoliciesActionsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-estimated-cost-policies/actions/';
};

export type MarketplaceOfferingEstimatedCostPoliciesActionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingFilesListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'created' | 'file' | 'name' | 'offering' | 'url' | 'uuid'>;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-offering-files/';
};

export type MarketplaceOfferingFilesListResponses = {
    200: Array<OfferingFile>;
};

export type MarketplaceOfferingFilesListResponse = MarketplaceOfferingFilesListResponses[keyof MarketplaceOfferingFilesListResponses];

export type MarketplaceOfferingFilesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-offering-files/';
};

export type MarketplaceOfferingFilesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingFilesCreateData = {
    body: OfferingFileRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-files/';
};

export type MarketplaceOfferingFilesCreateResponses = {
    201: OfferingFile;
};

export type MarketplaceOfferingFilesCreateResponse = MarketplaceOfferingFilesCreateResponses[keyof MarketplaceOfferingFilesCreateResponses];

export type MarketplaceOfferingFilesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-files/{uuid}/';
};

export type MarketplaceOfferingFilesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOfferingFilesDestroyResponse = MarketplaceOfferingFilesDestroyResponses[keyof MarketplaceOfferingFilesDestroyResponses];

export type MarketplaceOfferingFilesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'created' | 'file' | 'name' | 'offering' | 'url' | 'uuid'>;
    };
    url: '/api/marketplace-offering-files/{uuid}/';
};

export type MarketplaceOfferingFilesRetrieveResponses = {
    200: OfferingFile;
};

export type MarketplaceOfferingFilesRetrieveResponse = MarketplaceOfferingFilesRetrieveResponses[keyof MarketplaceOfferingFilesRetrieveResponses];

export type MarketplaceOfferingPermissionsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        offering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/marketplace-offering-permissions/';
};

export type MarketplaceOfferingPermissionsListResponses = {
    200: Array<OfferingPermission>;
};

export type MarketplaceOfferingPermissionsListResponse = MarketplaceOfferingPermissionsListResponses[keyof MarketplaceOfferingPermissionsListResponses];

export type MarketplaceOfferingPermissionsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        offering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/marketplace-offering-permissions/';
};

export type MarketplaceOfferingPermissionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingPermissionsLogListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        offering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/marketplace-offering-permissions-log/';
};

export type MarketplaceOfferingPermissionsLogListResponses = {
    200: Array<OfferingPermission>;
};

export type MarketplaceOfferingPermissionsLogListResponse = MarketplaceOfferingPermissionsLogListResponses[keyof MarketplaceOfferingPermissionsLogListResponses];

export type MarketplaceOfferingPermissionsLogCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        offering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/marketplace-offering-permissions-log/';
};

export type MarketplaceOfferingPermissionsLogCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingPermissionsLogRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this user role.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-offering-permissions-log/{id}/';
};

export type MarketplaceOfferingPermissionsLogRetrieveResponses = {
    200: OfferingPermission;
};

export type MarketplaceOfferingPermissionsLogRetrieveResponse = MarketplaceOfferingPermissionsLogRetrieveResponses[keyof MarketplaceOfferingPermissionsLogRetrieveResponses];

export type MarketplaceOfferingPermissionsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this user role.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-offering-permissions/{id}/';
};

export type MarketplaceOfferingPermissionsRetrieveResponses = {
    200: OfferingPermission;
};

export type MarketplaceOfferingPermissionsRetrieveResponse = MarketplaceOfferingPermissionsRetrieveResponses[keyof MarketplaceOfferingPermissionsRetrieveResponses];

export type MarketplaceOfferingReferralsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-published' | '-relation_type' | '-resource_type' | 'published' | 'relation_type' | 'resource_type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-offering-referrals/';
};

export type MarketplaceOfferingReferralsListResponses = {
    200: Array<OfferingReferral>;
};

export type MarketplaceOfferingReferralsListResponse = MarketplaceOfferingReferralsListResponses[keyof MarketplaceOfferingReferralsListResponses];

export type MarketplaceOfferingReferralsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-published' | '-relation_type' | '-resource_type' | 'published' | 'relation_type' | 'resource_type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-offering-referrals/';
};

export type MarketplaceOfferingReferralsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingReferralsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-referrals/{uuid}/';
};

export type MarketplaceOfferingReferralsRetrieveResponses = {
    200: OfferingReferral;
};

export type MarketplaceOfferingReferralsRetrieveResponse = MarketplaceOfferingReferralsRetrieveResponses[keyof MarketplaceOfferingReferralsRetrieveResponses];

export type MarketplaceOfferingUsagePoliciesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-offering-usage-policies/';
};

export type MarketplaceOfferingUsagePoliciesListResponses = {
    200: Array<OfferingUsagePolicy>;
};

export type MarketplaceOfferingUsagePoliciesListResponse = MarketplaceOfferingUsagePoliciesListResponses[keyof MarketplaceOfferingUsagePoliciesListResponses];

export type MarketplaceOfferingUsagePoliciesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-offering-usage-policies/';
};

export type MarketplaceOfferingUsagePoliciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsagePoliciesCreateData = {
    body: OfferingUsagePolicyRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-usage-policies/';
};

export type MarketplaceOfferingUsagePoliciesCreateResponses = {
    201: OfferingUsagePolicy;
};

export type MarketplaceOfferingUsagePoliciesCreateResponse = MarketplaceOfferingUsagePoliciesCreateResponses[keyof MarketplaceOfferingUsagePoliciesCreateResponses];

export type MarketplaceOfferingUsagePoliciesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-usage-policies/{uuid}/';
};

export type MarketplaceOfferingUsagePoliciesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOfferingUsagePoliciesDestroyResponse = MarketplaceOfferingUsagePoliciesDestroyResponses[keyof MarketplaceOfferingUsagePoliciesDestroyResponses];

export type MarketplaceOfferingUsagePoliciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-usage-policies/{uuid}/';
};

export type MarketplaceOfferingUsagePoliciesRetrieveResponses = {
    200: OfferingUsagePolicy;
};

export type MarketplaceOfferingUsagePoliciesRetrieveResponse = MarketplaceOfferingUsagePoliciesRetrieveResponses[keyof MarketplaceOfferingUsagePoliciesRetrieveResponses];

export type MarketplaceOfferingUsagePoliciesPartialUpdateData = {
    body?: PatchedOfferingUsagePolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-usage-policies/{uuid}/';
};

export type MarketplaceOfferingUsagePoliciesPartialUpdateResponses = {
    200: OfferingUsagePolicy;
};

export type MarketplaceOfferingUsagePoliciesPartialUpdateResponse = MarketplaceOfferingUsagePoliciesPartialUpdateResponses[keyof MarketplaceOfferingUsagePoliciesPartialUpdateResponses];

export type MarketplaceOfferingUsagePoliciesUpdateData = {
    body: OfferingUsagePolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-usage-policies/{uuid}/';
};

export type MarketplaceOfferingUsagePoliciesUpdateResponses = {
    200: OfferingUsagePolicy;
};

export type MarketplaceOfferingUsagePoliciesUpdateResponse = MarketplaceOfferingUsagePoliciesUpdateResponses[keyof MarketplaceOfferingUsagePoliciesUpdateResponses];

export type MarketplaceOfferingUsagePoliciesActionsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-usage-policies/actions/';
};

export type MarketplaceOfferingUsagePoliciesActionsRetrieveResponses = {
    200: OfferingUsagePolicy;
};

export type MarketplaceOfferingUsagePoliciesActionsRetrieveResponse = MarketplaceOfferingUsagePoliciesActionsRetrieveResponses[keyof MarketplaceOfferingUsagePoliciesActionsRetrieveResponses];

export type MarketplaceOfferingUsagePoliciesActionsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-usage-policies/actions/';
};

export type MarketplaceOfferingUsagePoliciesActionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUserRolesListData = {
    body?: never;
    path?: never;
    query?: {
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-offering-user-roles/';
};

export type MarketplaceOfferingUserRolesListResponses = {
    200: Array<OfferingUserRole>;
};

export type MarketplaceOfferingUserRolesListResponse = MarketplaceOfferingUserRolesListResponses[keyof MarketplaceOfferingUserRolesListResponses];

export type MarketplaceOfferingUserRolesCountData = {
    body?: never;
    path?: never;
    query?: {
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-offering-user-roles/';
};

export type MarketplaceOfferingUserRolesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUserRolesCreateData = {
    body: OfferingUserRoleRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-user-roles/';
};

export type MarketplaceOfferingUserRolesCreateResponses = {
    201: OfferingUserRole;
};

export type MarketplaceOfferingUserRolesCreateResponse = MarketplaceOfferingUserRolesCreateResponses[keyof MarketplaceOfferingUserRolesCreateResponses];

export type MarketplaceOfferingUserRolesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-user-roles/{uuid}/';
};

export type MarketplaceOfferingUserRolesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOfferingUserRolesDestroyResponse = MarketplaceOfferingUserRolesDestroyResponses[keyof MarketplaceOfferingUserRolesDestroyResponses];

export type MarketplaceOfferingUserRolesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-user-roles/{uuid}/';
};

export type MarketplaceOfferingUserRolesRetrieveResponses = {
    200: OfferingUserRole;
};

export type MarketplaceOfferingUserRolesRetrieveResponse = MarketplaceOfferingUserRolesRetrieveResponses[keyof MarketplaceOfferingUserRolesRetrieveResponses];

export type MarketplaceOfferingUserRolesPartialUpdateData = {
    body?: PatchedOfferingUserRoleRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-user-roles/{uuid}/';
};

export type MarketplaceOfferingUserRolesPartialUpdateResponses = {
    200: OfferingUserRole;
};

export type MarketplaceOfferingUserRolesPartialUpdateResponse = MarketplaceOfferingUserRolesPartialUpdateResponses[keyof MarketplaceOfferingUserRolesPartialUpdateResponses];

export type MarketplaceOfferingUserRolesUpdateData = {
    body: OfferingUserRoleRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-user-roles/{uuid}/';
};

export type MarketplaceOfferingUserRolesUpdateResponses = {
    200: OfferingUserRole;
};

export type MarketplaceOfferingUserRolesUpdateResponse = MarketplaceOfferingUserRolesUpdateResponses[keyof MarketplaceOfferingUserRolesUpdateResponses];

export type MarketplaceOfferingUsersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        field?: Array<'created' | 'customer_name' | 'customer_uuid' | 'is_restricted' | 'modified' | 'offering' | 'offering_name' | 'offering_uuid' | 'service_provider_comment' | 'service_provider_comment_url' | 'state' | 'url' | 'user' | 'user_email' | 'user_full_name' | 'user_username' | 'user_uuid' | 'username' | 'uuid'>;
        is_restricted?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-modified' | '-username' | 'created' | 'modified' | 'username'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by offering name, username or user name
         */
        query?: string;
        state?: Array<'Creating' | 'Deleted' | 'Deleting' | 'Error creating' | 'Error deleting' | 'OK' | 'Pending account linking' | 'Pending additional validation' | 'Requested' | 'Requested deletion'>;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/marketplace-offering-users/';
};

export type MarketplaceOfferingUsersListResponses = {
    200: Array<OfferingUser>;
};

export type MarketplaceOfferingUsersListResponse = MarketplaceOfferingUsersListResponses[keyof MarketplaceOfferingUsersListResponses];

export type MarketplaceOfferingUsersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        is_restricted?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-modified' | '-username' | 'created' | 'modified' | 'username'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by offering name, username or user name
         */
        query?: string;
        state?: Array<'Creating' | 'Deleted' | 'Deleting' | 'Error creating' | 'Error deleting' | 'OK' | 'Pending account linking' | 'Pending additional validation' | 'Requested' | 'Requested deletion'>;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/marketplace-offering-users/';
};

export type MarketplaceOfferingUsersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersCreateData = {
    body?: OfferingUserRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-offering-users/';
};

export type MarketplaceOfferingUsersCreateResponses = {
    201: OfferingUser;
};

export type MarketplaceOfferingUsersCreateResponse = MarketplaceOfferingUsersCreateResponses[keyof MarketplaceOfferingUsersCreateResponses];

export type MarketplaceOfferingUsersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/';
};

export type MarketplaceOfferingUsersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOfferingUsersDestroyResponse = MarketplaceOfferingUsersDestroyResponses[keyof MarketplaceOfferingUsersDestroyResponses];

export type MarketplaceOfferingUsersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'created' | 'customer_name' | 'customer_uuid' | 'is_restricted' | 'modified' | 'offering' | 'offering_name' | 'offering_uuid' | 'service_provider_comment' | 'service_provider_comment_url' | 'state' | 'url' | 'user' | 'user_email' | 'user_full_name' | 'user_username' | 'user_uuid' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-offering-users/{uuid}/';
};

export type MarketplaceOfferingUsersRetrieveResponses = {
    200: OfferingUser;
};

export type MarketplaceOfferingUsersRetrieveResponse = MarketplaceOfferingUsersRetrieveResponses[keyof MarketplaceOfferingUsersRetrieveResponses];

export type MarketplaceOfferingUsersPartialUpdateData = {
    body?: PatchedOfferingUserRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/';
};

export type MarketplaceOfferingUsersPartialUpdateResponses = {
    200: OfferingUser;
};

export type MarketplaceOfferingUsersPartialUpdateResponse = MarketplaceOfferingUsersPartialUpdateResponses[keyof MarketplaceOfferingUsersPartialUpdateResponses];

export type MarketplaceOfferingUsersUpdateData = {
    body?: OfferingUserRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/';
};

export type MarketplaceOfferingUsersUpdateResponses = {
    200: OfferingUser;
};

export type MarketplaceOfferingUsersUpdateResponse = MarketplaceOfferingUsersUpdateResponses[keyof MarketplaceOfferingUsersUpdateResponses];

export type MarketplaceOfferingUsersBeginCreatingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/begin_creating/';
};

export type MarketplaceOfferingUsersBeginCreatingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersChecklistRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/checklist/';
};

export type MarketplaceOfferingUsersChecklistRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type MarketplaceOfferingUsersChecklistRetrieveResponses = {
    200: ChecklistResponse;
};

export type MarketplaceOfferingUsersChecklistRetrieveResponse = MarketplaceOfferingUsersChecklistRetrieveResponses[keyof MarketplaceOfferingUsersChecklistRetrieveResponses];

export type MarketplaceOfferingUsersChecklistReviewRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/checklist_review/';
};

export type MarketplaceOfferingUsersChecklistReviewRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type MarketplaceOfferingUsersChecklistReviewRetrieveResponses = {
    200: ChecklistReviewerResponse;
};

export type MarketplaceOfferingUsersChecklistReviewRetrieveResponse = MarketplaceOfferingUsersChecklistReviewRetrieveResponses[keyof MarketplaceOfferingUsersChecklistReviewRetrieveResponses];

export type MarketplaceOfferingUsersCompletionReviewStatusRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/completion_review_status/';
};

export type MarketplaceOfferingUsersCompletionReviewStatusRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type MarketplaceOfferingUsersCompletionReviewStatusRetrieveResponses = {
    200: ChecklistCompletionReviewer;
};

export type MarketplaceOfferingUsersCompletionReviewStatusRetrieveResponse = MarketplaceOfferingUsersCompletionReviewStatusRetrieveResponses[keyof MarketplaceOfferingUsersCompletionReviewStatusRetrieveResponses];

export type MarketplaceOfferingUsersCompletionStatusRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/completion_status/';
};

export type MarketplaceOfferingUsersCompletionStatusRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type MarketplaceOfferingUsersCompletionStatusRetrieveResponses = {
    200: ChecklistCompletion;
};

export type MarketplaceOfferingUsersCompletionStatusRetrieveResponse = MarketplaceOfferingUsersCompletionStatusRetrieveResponses[keyof MarketplaceOfferingUsersCompletionStatusRetrieveResponses];

export type MarketplaceOfferingUsersRequestDeletionData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/request_deletion/';
};

export type MarketplaceOfferingUsersRequestDeletionResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetDeletedData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_deleted/';
};

export type MarketplaceOfferingUsersSetDeletedResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetDeletingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_deleting/';
};

export type MarketplaceOfferingUsersSetDeletingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetErrorCreatingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_error_creating/';
};

export type MarketplaceOfferingUsersSetErrorCreatingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetErrorDeletingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_error_deleting/';
};

export type MarketplaceOfferingUsersSetErrorDeletingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetOkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_ok/';
};

export type MarketplaceOfferingUsersSetOkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetPendingAccountLinkingData = {
    body?: OfferingUserStateTransitionRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_pending_account_linking/';
};

export type MarketplaceOfferingUsersSetPendingAccountLinkingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetPendingAdditionalValidationData = {
    body?: OfferingUserStateTransitionRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_pending_additional_validation/';
};

export type MarketplaceOfferingUsersSetPendingAdditionalValidationResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSetValidationCompleteData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/set_validation_complete/';
};

export type MarketplaceOfferingUsersSetValidationCompleteResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOfferingUsersSubmitAnswersData = {
    body: Array<AnswerSubmitRequest>;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/submit_answers/';
};

export type MarketplaceOfferingUsersSubmitAnswersErrors = {
    /**
     * Validation error or no checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type MarketplaceOfferingUsersSubmitAnswersResponses = {
    200: AnswerSubmitResponse;
};

export type MarketplaceOfferingUsersSubmitAnswersResponse = MarketplaceOfferingUsersSubmitAnswersResponses[keyof MarketplaceOfferingUsersSubmitAnswersResponses];

export type MarketplaceOfferingUsersUpdateCommentsPartialUpdateData = {
    body?: PatchedOfferingUserServiceProviderCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/update_comments/';
};

export type MarketplaceOfferingUsersUpdateCommentsPartialUpdateResponses = {
    200: OfferingUserServiceProviderComment;
};

export type MarketplaceOfferingUsersUpdateCommentsPartialUpdateResponse = MarketplaceOfferingUsersUpdateCommentsPartialUpdateResponses[keyof MarketplaceOfferingUsersUpdateCommentsPartialUpdateResponses];

export type MarketplaceOfferingUsersUpdateRestrictedData = {
    body: OfferingUserUpdateRestrictionRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-offering-users/{uuid}/update_restricted/';
};

export type MarketplaceOfferingUsersUpdateRestrictedResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersListData = {
    body?: never;
    path?: never;
    query?: {
        can_approve_as_consumer?: boolean;
        can_approve_as_provider?: boolean;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer_uuid?: string;
        field?: Array<'accepting_terms_of_service' | 'activation_price' | 'attributes' | 'backend_id' | 'callback_url' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'completed_at' | 'consumer_reviewed_at' | 'consumer_reviewed_by' | 'consumer_reviewed_by_full_name' | 'consumer_reviewed_by_username' | 'cost' | 'created' | 'created_by_civil_number' | 'created_by_full_name' | 'created_by_username' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'error_message' | 'fixed_price' | 'issue' | 'limits' | 'marketplace_resource_uuid' | 'modified' | 'new_cost_estimate' | 'new_plan_name' | 'new_plan_uuid' | 'offering' | 'offering_billable' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'old_cost_estimate' | 'old_plan_name' | 'old_plan_uuid' | 'output' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project_description' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_reviewed_at' | 'provider_reviewed_by' | 'provider_reviewed_by_full_name' | 'provider_reviewed_by_username' | 'provider_uuid' | 'resource_name' | 'resource_type' | 'resource_uuid' | 'state' | 'termination_comment' | 'type' | 'uuid'>;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-consumer_reviewed_at' | '-cost' | '-created' | '-state' | 'consumer_reviewed_at' | 'cost' | 'created' | 'state'>;
        offering?: string;
        offering_type?: Array<string>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by order UUID, project name or resource name
         */
        query?: string;
        resource?: string;
        resource_uuid?: string;
        service_manager_uuid?: string;
        state?: Array<'canceled' | 'done' | 'erred' | 'executing' | 'pending-consumer' | 'pending-project' | 'pending-provider' | 'rejected'>;
        type?: Array<'Create' | 'Terminate' | 'Update'>;
    };
    url: '/api/marketplace-orders/';
};

export type MarketplaceOrdersListResponses = {
    200: Array<OrderDetails>;
};

export type MarketplaceOrdersListResponse = MarketplaceOrdersListResponses[keyof MarketplaceOrdersListResponses];

export type MarketplaceOrdersCountData = {
    body?: never;
    path?: never;
    query?: {
        can_approve_as_consumer?: boolean;
        can_approve_as_provider?: boolean;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer_uuid?: string;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-consumer_reviewed_at' | '-cost' | '-created' | '-state' | 'consumer_reviewed_at' | 'cost' | 'created' | 'state'>;
        offering?: string;
        offering_type?: Array<string>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by order UUID, project name or resource name
         */
        query?: string;
        resource?: string;
        resource_uuid?: string;
        service_manager_uuid?: string;
        state?: Array<'canceled' | 'done' | 'erred' | 'executing' | 'pending-consumer' | 'pending-project' | 'pending-provider' | 'rejected'>;
        type?: Array<'Create' | 'Terminate' | 'Update'>;
    };
    url: '/api/marketplace-orders/';
};

export type MarketplaceOrdersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersCreateData = {
    body: OrderCreateRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-orders/';
};

export type MarketplaceOrdersCreateResponses = {
    201: OrderCreate;
};

export type MarketplaceOrdersCreateResponse = MarketplaceOrdersCreateResponses[keyof MarketplaceOrdersCreateResponses];

export type MarketplaceOrdersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/';
};

export type MarketplaceOrdersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOrdersDestroyResponse = MarketplaceOrdersDestroyResponses[keyof MarketplaceOrdersDestroyResponses];

export type MarketplaceOrdersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'accepting_terms_of_service' | 'activation_price' | 'attributes' | 'backend_id' | 'callback_url' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'completed_at' | 'consumer_reviewed_at' | 'consumer_reviewed_by' | 'consumer_reviewed_by_full_name' | 'consumer_reviewed_by_username' | 'cost' | 'created' | 'created_by_civil_number' | 'created_by_full_name' | 'created_by_username' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'error_message' | 'fixed_price' | 'issue' | 'limits' | 'marketplace_resource_uuid' | 'modified' | 'new_cost_estimate' | 'new_plan_name' | 'new_plan_uuid' | 'offering' | 'offering_billable' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'old_cost_estimate' | 'old_plan_name' | 'old_plan_uuid' | 'output' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project_description' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_reviewed_at' | 'provider_reviewed_by' | 'provider_reviewed_by_full_name' | 'provider_reviewed_by_username' | 'provider_uuid' | 'resource_name' | 'resource_type' | 'resource_uuid' | 'state' | 'termination_comment' | 'type' | 'uuid'>;
    };
    url: '/api/marketplace-orders/{uuid}/';
};

export type MarketplaceOrdersRetrieveResponses = {
    200: OrderDetails;
};

export type MarketplaceOrdersRetrieveResponse = MarketplaceOrdersRetrieveResponses[keyof MarketplaceOrdersRetrieveResponses];

export type MarketplaceOrdersApproveByConsumerData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/approve_by_consumer/';
};

export type MarketplaceOrdersApproveByConsumerResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersApproveByProviderData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/approve_by_provider/';
};

export type MarketplaceOrdersApproveByProviderResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersCancelData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/cancel/';
};

export type MarketplaceOrdersCancelResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersOfferingRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/offering/';
};

export type MarketplaceOrdersOfferingRetrieveResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceOrdersOfferingRetrieveResponse = MarketplaceOrdersOfferingRetrieveResponses[keyof MarketplaceOrdersOfferingRetrieveResponses];

export type MarketplaceOrdersRejectByConsumerData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/reject_by_consumer/';
};

export type MarketplaceOrdersRejectByConsumerResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersRejectByProviderData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/reject_by_provider/';
};

export type MarketplaceOrdersRejectByProviderResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersSetStateDoneData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/set_state_done/';
};

export type MarketplaceOrdersSetStateDoneResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersSetStateErredData = {
    body?: OrderSetStateErredRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/set_state_erred/';
};

export type MarketplaceOrdersSetStateErredResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersSetStateExecutingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/set_state_executing/';
};

export type MarketplaceOrdersSetStateExecutingResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceOrdersUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-orders/{uuid}/unlink/';
};

export type MarketplaceOrdersUnlinkErrors = {
    /**
     * No response body
     */
    403: unknown;
};

export type MarketplaceOrdersUnlinkResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceOrdersUnlinkResponse = MarketplaceOrdersUnlinkResponses[keyof MarketplaceOrdersUnlinkResponses];

export type MarketplacePlanComponentsListData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
        /**
         * Offering UUID
         */
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Plan UUID
         */
        plan_uuid?: string;
        shared?: boolean;
    };
    url: '/api/marketplace-plan-components/';
};

export type MarketplacePlanComponentsListResponses = {
    200: Array<PlanComponent>;
};

export type MarketplacePlanComponentsListResponse = MarketplacePlanComponentsListResponses[keyof MarketplacePlanComponentsListResponses];

export type MarketplacePlanComponentsCountData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
        /**
         * Offering UUID
         */
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Plan UUID
         */
        plan_uuid?: string;
        shared?: boolean;
    };
    url: '/api/marketplace-plan-components/';
};

export type MarketplacePlanComponentsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlanComponentsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this plan component.
         */
        id: number;
    };
    query?: never;
    url: '/api/marketplace-plan-components/{id}/';
};

export type MarketplacePlanComponentsRetrieveResponses = {
    200: PlanComponent;
};

export type MarketplacePlanComponentsRetrieveResponse = MarketplacePlanComponentsRetrieveResponses[keyof MarketplacePlanComponentsRetrieveResponses];

export type MarketplacePlansListData = {
    body?: never;
    path?: never;
    query?: {
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-plans/';
};

export type MarketplacePlansListResponses = {
    200: Array<ProviderPlanDetails>;
};

export type MarketplacePlansListResponse = MarketplacePlansListResponses[keyof MarketplacePlansListResponses];

export type MarketplacePlansCountData = {
    body?: never;
    path?: never;
    query?: {
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-plans/';
};

export type MarketplacePlansCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansCreateData = {
    body: ProviderPlanDetailsRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-plans/';
};

export type MarketplacePlansCreateResponses = {
    201: ProviderPlanDetails;
};

export type MarketplacePlansCreateResponse = MarketplacePlansCreateResponses[keyof MarketplacePlansCreateResponses];

export type MarketplacePlansDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/';
};

export type MarketplacePlansDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplacePlansDestroyResponse = MarketplacePlansDestroyResponses[keyof MarketplacePlansDestroyResponses];

export type MarketplacePlansRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/';
};

export type MarketplacePlansRetrieveResponses = {
    200: ProviderPlanDetails;
};

export type MarketplacePlansRetrieveResponse = MarketplacePlansRetrieveResponses[keyof MarketplacePlansRetrieveResponses];

export type MarketplacePlansPartialUpdateData = {
    body?: PatchedProviderPlanDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/';
};

export type MarketplacePlansPartialUpdateResponses = {
    200: ProviderPlanDetails;
};

export type MarketplacePlansPartialUpdateResponse = MarketplacePlansPartialUpdateResponses[keyof MarketplacePlansPartialUpdateResponses];

export type MarketplacePlansUpdateData = {
    body: ProviderPlanDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/';
};

export type MarketplacePlansUpdateResponses = {
    200: ProviderPlanDetails;
};

export type MarketplacePlansUpdateResponse = MarketplacePlansUpdateResponses[keyof MarketplacePlansUpdateResponses];

export type MarketplacePlansArchiveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/archive/';
};

export type MarketplacePlansArchiveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansDeleteOrganizationGroupsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/delete_organization_groups/';
};

export type MarketplacePlansDeleteOrganizationGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansUpdateOrganizationGroupsData = {
    body?: OrganizationGroupsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/update_organization_groups/';
};

export type MarketplacePlansUpdateOrganizationGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansUpdatePricesData = {
    body: PricesUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/update_prices/';
};

export type MarketplacePlansUpdatePricesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansUpdateQuotasData = {
    body: QuotasUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-plans/{uuid}/update_quotas/';
};

export type MarketplacePlansUpdateQuotasResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePlansUsageStatsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_provider_uuid?: string;
        o?: string;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-plans/usage_stats/';
};

export type MarketplacePlansUsageStatsListResponses = {
    200: Array<PlanUsageResponse>;
};

export type MarketplacePlansUsageStatsListResponse = MarketplacePlansUsageStatsListResponses[keyof MarketplacePlansUsageStatsListResponses];

export type MarketplacePlansUsageStatsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_provider_uuid?: string;
        o?: string;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-plans/usage_stats/';
};

export type MarketplacePlansUsageStatsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePluginsListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-plugins/';
};

export type MarketplacePluginsListResponses = {
    200: Array<PluginOfferingType>;
};

export type MarketplacePluginsListResponse = MarketplacePluginsListResponses[keyof MarketplacePluginsListResponses];

export type MarketplaceProjectEstimatedCostPoliciesListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-project-estimated-cost-policies/';
};

export type MarketplaceProjectEstimatedCostPoliciesListResponses = {
    200: Array<ProjectEstimatedCostPolicy>;
};

export type MarketplaceProjectEstimatedCostPoliciesListResponse = MarketplaceProjectEstimatedCostPoliciesListResponses[keyof MarketplaceProjectEstimatedCostPoliciesListResponses];

export type MarketplaceProjectEstimatedCostPoliciesCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        scope?: string;
        scope_uuid?: string;
    };
    url: '/api/marketplace-project-estimated-cost-policies/';
};

export type MarketplaceProjectEstimatedCostPoliciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProjectEstimatedCostPoliciesCreateData = {
    body: ProjectEstimatedCostPolicyRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/';
};

export type MarketplaceProjectEstimatedCostPoliciesCreateResponses = {
    201: ProjectEstimatedCostPolicy;
};

export type MarketplaceProjectEstimatedCostPoliciesCreateResponse = MarketplaceProjectEstimatedCostPoliciesCreateResponses[keyof MarketplaceProjectEstimatedCostPoliciesCreateResponses];

export type MarketplaceProjectEstimatedCostPoliciesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/{uuid}/';
};

export type MarketplaceProjectEstimatedCostPoliciesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceProjectEstimatedCostPoliciesDestroyResponse = MarketplaceProjectEstimatedCostPoliciesDestroyResponses[keyof MarketplaceProjectEstimatedCostPoliciesDestroyResponses];

export type MarketplaceProjectEstimatedCostPoliciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/{uuid}/';
};

export type MarketplaceProjectEstimatedCostPoliciesRetrieveResponses = {
    200: ProjectEstimatedCostPolicy;
};

export type MarketplaceProjectEstimatedCostPoliciesRetrieveResponse = MarketplaceProjectEstimatedCostPoliciesRetrieveResponses[keyof MarketplaceProjectEstimatedCostPoliciesRetrieveResponses];

export type MarketplaceProjectEstimatedCostPoliciesPartialUpdateData = {
    body?: PatchedProjectEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/{uuid}/';
};

export type MarketplaceProjectEstimatedCostPoliciesPartialUpdateResponses = {
    200: ProjectEstimatedCostPolicy;
};

export type MarketplaceProjectEstimatedCostPoliciesPartialUpdateResponse = MarketplaceProjectEstimatedCostPoliciesPartialUpdateResponses[keyof MarketplaceProjectEstimatedCostPoliciesPartialUpdateResponses];

export type MarketplaceProjectEstimatedCostPoliciesUpdateData = {
    body: ProjectEstimatedCostPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/{uuid}/';
};

export type MarketplaceProjectEstimatedCostPoliciesUpdateResponses = {
    200: ProjectEstimatedCostPolicy;
};

export type MarketplaceProjectEstimatedCostPoliciesUpdateResponse = MarketplaceProjectEstimatedCostPoliciesUpdateResponses[keyof MarketplaceProjectEstimatedCostPoliciesUpdateResponses];

export type MarketplaceProjectEstimatedCostPoliciesActionsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/actions/';
};

export type MarketplaceProjectEstimatedCostPoliciesActionsRetrieveResponses = {
    200: ProjectEstimatedCostPolicy;
};

export type MarketplaceProjectEstimatedCostPoliciesActionsRetrieveResponse = MarketplaceProjectEstimatedCostPoliciesActionsRetrieveResponses[keyof MarketplaceProjectEstimatedCostPoliciesActionsRetrieveResponses];

export type MarketplaceProjectEstimatedCostPoliciesActionsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-project-estimated-cost-policies/actions/';
};

export type MarketplaceProjectEstimatedCostPoliciesActionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProjectServiceAccountsListData = {
    body?: never;
    path?: never;
    query?: {
        email?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        username?: string;
    };
    url: '/api/marketplace-project-service-accounts/';
};

export type MarketplaceProjectServiceAccountsListResponses = {
    200: Array<ProjectServiceAccount>;
};

export type MarketplaceProjectServiceAccountsListResponse = MarketplaceProjectServiceAccountsListResponses[keyof MarketplaceProjectServiceAccountsListResponses];

export type MarketplaceProjectServiceAccountsCountData = {
    body?: never;
    path?: never;
    query?: {
        email?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        username?: string;
    };
    url: '/api/marketplace-project-service-accounts/';
};

export type MarketplaceProjectServiceAccountsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProjectServiceAccountsCreateData = {
    body: ProjectServiceAccountRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-project-service-accounts/';
};

export type MarketplaceProjectServiceAccountsCreateResponses = {
    201: ProjectServiceAccount;
};

export type MarketplaceProjectServiceAccountsCreateResponse = MarketplaceProjectServiceAccountsCreateResponses[keyof MarketplaceProjectServiceAccountsCreateResponses];

export type MarketplaceProjectServiceAccountsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-service-accounts/{uuid}/';
};

export type MarketplaceProjectServiceAccountsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceProjectServiceAccountsDestroyResponse = MarketplaceProjectServiceAccountsDestroyResponses[keyof MarketplaceProjectServiceAccountsDestroyResponses];

export type MarketplaceProjectServiceAccountsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-service-accounts/{uuid}/';
};

export type MarketplaceProjectServiceAccountsRetrieveResponses = {
    200: ProjectServiceAccount;
};

export type MarketplaceProjectServiceAccountsRetrieveResponse = MarketplaceProjectServiceAccountsRetrieveResponses[keyof MarketplaceProjectServiceAccountsRetrieveResponses];

export type MarketplaceProjectServiceAccountsPartialUpdateData = {
    body?: PatchedProjectServiceAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-service-accounts/{uuid}/';
};

export type MarketplaceProjectServiceAccountsPartialUpdateResponses = {
    200: ProjectServiceAccount;
};

export type MarketplaceProjectServiceAccountsPartialUpdateResponse = MarketplaceProjectServiceAccountsPartialUpdateResponses[keyof MarketplaceProjectServiceAccountsPartialUpdateResponses];

export type MarketplaceProjectServiceAccountsUpdateData = {
    body: ProjectServiceAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-service-accounts/{uuid}/';
};

export type MarketplaceProjectServiceAccountsUpdateResponses = {
    200: ProjectServiceAccount;
};

export type MarketplaceProjectServiceAccountsUpdateResponse = MarketplaceProjectServiceAccountsUpdateResponses[keyof MarketplaceProjectServiceAccountsUpdateResponses];

export type MarketplaceProjectServiceAccountsRotateApiKeyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-service-accounts/{uuid}/rotate_api_key/';
};

export type MarketplaceProjectServiceAccountsRotateApiKeyResponses = {
    200: ProjectServiceAccount;
};

export type MarketplaceProjectServiceAccountsRotateApiKeyResponse = MarketplaceProjectServiceAccountsRotateApiKeyResponses[keyof MarketplaceProjectServiceAccountsRotateApiKeyResponses];

export type MarketplaceProjectUpdateRequestsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        offering_customer_uuid?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        state?: Array<'approved' | 'canceled' | 'draft' | 'pending' | 'rejected'>;
    };
    url: '/api/marketplace-project-update-requests/';
};

export type MarketplaceProjectUpdateRequestsListResponses = {
    200: Array<RemoteProjectUpdateRequest>;
};

export type MarketplaceProjectUpdateRequestsListResponse = MarketplaceProjectUpdateRequestsListResponses[keyof MarketplaceProjectUpdateRequestsListResponses];

export type MarketplaceProjectUpdateRequestsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        offering_customer_uuid?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        state?: Array<'approved' | 'canceled' | 'draft' | 'pending' | 'rejected'>;
    };
    url: '/api/marketplace-project-update-requests/';
};

export type MarketplaceProjectUpdateRequestsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProjectUpdateRequestsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-update-requests/{uuid}/';
};

export type MarketplaceProjectUpdateRequestsRetrieveResponses = {
    200: RemoteProjectUpdateRequest;
};

export type MarketplaceProjectUpdateRequestsRetrieveResponse = MarketplaceProjectUpdateRequestsRetrieveResponses[keyof MarketplaceProjectUpdateRequestsRetrieveResponses];

export type MarketplaceProjectUpdateRequestsApproveData = {
    body?: ReviewCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-update-requests/{uuid}/approve/';
};

export type MarketplaceProjectUpdateRequestsApproveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProjectUpdateRequestsRejectData = {
    body?: ReviewCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-project-update-requests/{uuid}/reject/';
};

export type MarketplaceProjectUpdateRequestsRejectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/';
};

export type MarketplaceProviderOfferingsListResponses = {
    200: Array<ProviderOfferingDetails>;
};

export type MarketplaceProviderOfferingsListResponse = MarketplaceProviderOfferingsListResponses[keyof MarketplaceProviderOfferingsListResponses];

export type MarketplaceProviderOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/';
};

export type MarketplaceProviderOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsCreateData = {
    body: OfferingCreateRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-provider-offerings/';
};

export type MarketplaceProviderOfferingsCreateResponses = {
    201: OfferingCreate;
};

export type MarketplaceProviderOfferingsCreateResponse = MarketplaceProviderOfferingsCreateResponses[keyof MarketplaceProviderOfferingsCreateResponses];

export type MarketplaceProviderOfferingsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/';
};

export type MarketplaceProviderOfferingsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceProviderOfferingsDestroyResponse = MarketplaceProviderOfferingsDestroyResponses[keyof MarketplaceProviderOfferingsDestroyResponses];

export type MarketplaceProviderOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/';
};

export type MarketplaceProviderOfferingsRetrieveResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsRetrieveResponse = MarketplaceProviderOfferingsRetrieveResponses[keyof MarketplaceProviderOfferingsRetrieveResponses];

export type MarketplaceProviderOfferingsActivateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/activate/';
};

export type MarketplaceProviderOfferingsActivateResponses = {
    200: DetailState;
};

export type MarketplaceProviderOfferingsActivateResponse = MarketplaceProviderOfferingsActivateResponses[keyof MarketplaceProviderOfferingsActivateResponses];

export type MarketplaceProviderOfferingsAddEndpointData = {
    body: NestedEndpointRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/add_endpoint/';
};

export type MarketplaceProviderOfferingsAddEndpointResponses = {
    201: EndpointUuid;
};

export type MarketplaceProviderOfferingsAddEndpointResponse = MarketplaceProviderOfferingsAddEndpointResponses[keyof MarketplaceProviderOfferingsAddEndpointResponses];

export type MarketplaceProviderOfferingsAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/add_user/';
};

export type MarketplaceProviderOfferingsAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type MarketplaceProviderOfferingsAddUserResponse = MarketplaceProviderOfferingsAddUserResponses[keyof MarketplaceProviderOfferingsAddUserResponses];

export type MarketplaceProviderOfferingsArchiveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/archive/';
};

export type MarketplaceProviderOfferingsArchiveResponses = {
    200: DetailState;
};

export type MarketplaceProviderOfferingsArchiveResponse = MarketplaceProviderOfferingsArchiveResponses[keyof MarketplaceProviderOfferingsArchiveResponses];

export type MarketplaceProviderOfferingsComponentStatsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * End date in format YYYY-MM.
         */
        end?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        /**
         * Start date in format YYYY-MM.
         */
        start?: string;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/component_stats/';
};

export type MarketplaceProviderOfferingsComponentStatsListResponses = {
    200: Array<OfferingComponentStat>;
};

export type MarketplaceProviderOfferingsComponentStatsListResponse = MarketplaceProviderOfferingsComponentStatsListResponses[keyof MarketplaceProviderOfferingsComponentStatsListResponses];

export type MarketplaceProviderOfferingsCostsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        accounting_is_running?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * End date in format YYYY-MM.
         */
        end?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        /**
         * Start date in format YYYY-MM.
         */
        start?: string;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/costs/';
};

export type MarketplaceProviderOfferingsCostsListResponses = {
    200: Array<ProviderOfferingCosts>;
};

export type MarketplaceProviderOfferingsCostsListResponse = MarketplaceProviderOfferingsCostsListResponses[keyof MarketplaceProviderOfferingsCostsListResponses];

export type MarketplaceProviderOfferingsCreateOfferingComponentData = {
    body: OfferingComponentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/create_offering_component/';
};

export type MarketplaceProviderOfferingsCreateOfferingComponentResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsCustomersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/customers/';
};

export type MarketplaceProviderOfferingsCustomersListResponses = {
    200: Array<ProviderOfferingCustomer>;
};

export type MarketplaceProviderOfferingsCustomersListResponse = MarketplaceProviderOfferingsCustomersListResponses[keyof MarketplaceProviderOfferingsCustomersListResponses];

export type MarketplaceProviderOfferingsDeleteEndpointData = {
    body: EndpointUuidRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/delete_endpoint/';
};

export type MarketplaceProviderOfferingsDeleteEndpointResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceProviderOfferingsDeleteEndpointResponse = MarketplaceProviderOfferingsDeleteEndpointResponses[keyof MarketplaceProviderOfferingsDeleteEndpointResponses];

export type MarketplaceProviderOfferingsDeleteImageData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/delete_image/';
};

export type MarketplaceProviderOfferingsDeleteImageResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsDeleteOrganizationGroupsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/delete_organization_groups/';
};

export type MarketplaceProviderOfferingsDeleteOrganizationGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsDeleteThumbnailData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/delete_thumbnail/';
};

export type MarketplaceProviderOfferingsDeleteThumbnailResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceProviderOfferingsDeleteThumbnailResponse = MarketplaceProviderOfferingsDeleteThumbnailResponses[keyof MarketplaceProviderOfferingsDeleteThumbnailResponses];

export type MarketplaceProviderOfferingsDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/delete_user/';
};

export type MarketplaceProviderOfferingsDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsDraftData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/draft/';
};

export type MarketplaceProviderOfferingsDraftResponses = {
    200: DetailState;
};

export type MarketplaceProviderOfferingsDraftResponse = MarketplaceProviderOfferingsDraftResponses[keyof MarketplaceProviderOfferingsDraftResponses];

export type MarketplaceProviderOfferingsGlauthUsersConfigRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/glauth_users_config/';
};

export type MarketplaceProviderOfferingsGlauthUsersConfigRetrieveResponses = {
    200: string;
};

export type MarketplaceProviderOfferingsGlauthUsersConfigRetrieveResponse = MarketplaceProviderOfferingsGlauthUsersConfigRetrieveResponses[keyof MarketplaceProviderOfferingsGlauthUsersConfigRetrieveResponses];

export type MarketplaceProviderOfferingsImportResourceData = {
    body: ImportResourceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/import_resource/';
};

export type MarketplaceProviderOfferingsImportResourceResponses = {
    200: Resource;
};

export type MarketplaceProviderOfferingsImportResourceResponse = MarketplaceProviderOfferingsImportResourceResponses[keyof MarketplaceProviderOfferingsImportResourceResponses];

export type MarketplaceProviderOfferingsImportableResourcesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/importable_resources/';
};

export type MarketplaceProviderOfferingsImportableResourcesListResponses = {
    200: Array<ImportableResource>;
};

export type MarketplaceProviderOfferingsImportableResourcesListResponse = MarketplaceProviderOfferingsImportableResourcesListResponses[keyof MarketplaceProviderOfferingsImportableResourcesListResponses];

export type MarketplaceProviderOfferingsListCustomerProjectsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/list_customer_projects/';
};

export type MarketplaceProviderOfferingsListCustomerProjectsListResponses = {
    200: Array<Project>;
};

export type MarketplaceProviderOfferingsListCustomerProjectsListResponse = MarketplaceProviderOfferingsListCustomerProjectsListResponses[keyof MarketplaceProviderOfferingsListCustomerProjectsListResponses];

export type MarketplaceProviderOfferingsListCustomerServiceAccountsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/list_customer_service_accounts/';
};

export type MarketplaceProviderOfferingsListCustomerServiceAccountsRetrieveResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsListCustomerServiceAccountsRetrieveResponse = MarketplaceProviderOfferingsListCustomerServiceAccountsRetrieveResponses[keyof MarketplaceProviderOfferingsListCustomerServiceAccountsRetrieveResponses];

export type MarketplaceProviderOfferingsListCustomerUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/list_customer_users/';
};

export type MarketplaceProviderOfferingsListCustomerUsersListResponses = {
    200: Array<User>;
};

export type MarketplaceProviderOfferingsListCustomerUsersListResponse = MarketplaceProviderOfferingsListCustomerUsersListResponses[keyof MarketplaceProviderOfferingsListCustomerUsersListResponses];

export type MarketplaceProviderOfferingsListProjectServiceAccountsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/list_project_service_accounts/';
};

export type MarketplaceProviderOfferingsListProjectServiceAccountsRetrieveResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsListProjectServiceAccountsRetrieveResponse = MarketplaceProviderOfferingsListProjectServiceAccountsRetrieveResponses[keyof MarketplaceProviderOfferingsListProjectServiceAccountsRetrieveResponses];

export type MarketplaceProviderOfferingsListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/list_users/';
};

export type MarketplaceProviderOfferingsListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type MarketplaceProviderOfferingsListUsersListResponse = MarketplaceProviderOfferingsListUsersListResponses[keyof MarketplaceProviderOfferingsListUsersListResponses];

export type MarketplaceProviderOfferingsMoveOfferingData = {
    body: MoveOfferingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/move_offering/';
};

export type MarketplaceProviderOfferingsMoveOfferingResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceProviderOfferingsMoveOfferingResponse = MarketplaceProviderOfferingsMoveOfferingResponses[keyof MarketplaceProviderOfferingsMoveOfferingResponses];

export type MarketplaceProviderOfferingsOrdersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/orders/';
};

export type MarketplaceProviderOfferingsOrdersListResponses = {
    200: Array<OrderDetails>;
};

export type MarketplaceProviderOfferingsOrdersListResponse = MarketplaceProviderOfferingsOrdersListResponses[keyof MarketplaceProviderOfferingsOrdersListResponses];

export type MarketplaceProviderOfferingsOrdersRetrieveData = {
    body?: never;
    path: {
        order_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/orders/{order_uuid}/';
};

export type MarketplaceProviderOfferingsOrdersRetrieveResponses = {
    200: OrderDetails;
};

export type MarketplaceProviderOfferingsOrdersRetrieveResponse = MarketplaceProviderOfferingsOrdersRetrieveResponses[keyof MarketplaceProviderOfferingsOrdersRetrieveResponses];

export type MarketplaceProviderOfferingsPauseData = {
    body?: OfferingPauseRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/pause/';
};

export type MarketplaceProviderOfferingsPauseResponses = {
    200: DetailState;
};

export type MarketplaceProviderOfferingsPauseResponse = MarketplaceProviderOfferingsPauseResponses[keyof MarketplaceProviderOfferingsPauseResponses];

export type MarketplaceProviderOfferingsRefreshOfferingUsernamesData = {
    body: ProviderOfferingDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/refresh_offering_usernames/';
};

export type MarketplaceProviderOfferingsRefreshOfferingUsernamesResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceProviderOfferingsRefreshOfferingUsernamesResponse = MarketplaceProviderOfferingsRefreshOfferingUsernamesResponses[keyof MarketplaceProviderOfferingsRefreshOfferingUsernamesResponses];

export type MarketplaceProviderOfferingsRemoveOfferingComponentData = {
    body: RemoveOfferingComponentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/remove_offering_component/';
};

export type MarketplaceProviderOfferingsRemoveOfferingComponentResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsSetBackendMetadataData = {
    body?: OfferingBackendMetadataRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/set_backend_metadata/';
};

export type MarketplaceProviderOfferingsSetBackendMetadataResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsStatsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/stats/';
};

export type MarketplaceProviderOfferingsStatsRetrieveResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsStatsRetrieveResponse = MarketplaceProviderOfferingsStatsRetrieveResponses[keyof MarketplaceProviderOfferingsStatsRetrieveResponses];

export type MarketplaceProviderOfferingsSyncData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/sync/';
};

export type MarketplaceProviderOfferingsSyncResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUnpauseData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/unpause/';
};

export type MarketplaceProviderOfferingsUnpauseResponses = {
    200: DetailState;
};

export type MarketplaceProviderOfferingsUnpauseResponse = MarketplaceProviderOfferingsUnpauseResponses[keyof MarketplaceProviderOfferingsUnpauseResponses];

export type MarketplaceProviderOfferingsUpdateAttributesData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_attributes/';
};

export type MarketplaceProviderOfferingsUpdateAttributesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateDescriptionData = {
    body: OfferingDescriptionUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_description/';
};

export type MarketplaceProviderOfferingsUpdateDescriptionResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateImageData = {
    body: OfferingImageRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_image/';
};

export type MarketplaceProviderOfferingsUpdateImageResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsUpdateImageResponse = MarketplaceProviderOfferingsUpdateImageResponses[keyof MarketplaceProviderOfferingsUpdateImageResponses];

export type MarketplaceProviderOfferingsUpdateIntegrationData = {
    body?: OfferingIntegrationUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_integration/';
};

export type MarketplaceProviderOfferingsUpdateIntegrationResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateLocationData = {
    body: OfferingLocationUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_location/';
};

export type MarketplaceProviderOfferingsUpdateLocationResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateOfferingComponentData = {
    body: UpdateOfferingComponentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_offering_component/';
};

export type MarketplaceProviderOfferingsUpdateOfferingComponentResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateOptionsData = {
    body: OfferingOptionsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_options/';
};

export type MarketplaceProviderOfferingsUpdateOptionsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateOrganizationGroupsData = {
    body?: OrganizationGroupsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_organization_groups/';
};

export type MarketplaceProviderOfferingsUpdateOrganizationGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateOverviewData = {
    body: OfferingOverviewUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_overview/';
};

export type MarketplaceProviderOfferingsUpdateOverviewResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateResourceOptionsData = {
    body: OfferingResourceOptionsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_resource_options/';
};

export type MarketplaceProviderOfferingsUpdateResourceOptionsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateThumbnailData = {
    body: OfferingThumbnailRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_thumbnail/';
};

export type MarketplaceProviderOfferingsUpdateThumbnailResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderOfferingsUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-offerings/{uuid}/update_user/';
};

export type MarketplaceProviderOfferingsUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type MarketplaceProviderOfferingsUpdateUserResponse = MarketplaceProviderOfferingsUpdateUserResponses[keyof MarketplaceProviderOfferingsUpdateUserResponses];

export type MarketplaceProviderOfferingsUserHasResourceAccessRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'integration_status' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'secret_options' | 'service_attributes' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
        /**
         * Username of the user to check.
         */
        username: string;
    };
    url: '/api/marketplace-provider-offerings/{uuid}/user_has_resource_access/';
};

export type MarketplaceProviderOfferingsUserHasResourceAccessRetrieveResponses = {
    200: ProviderOfferingDetails;
};

export type MarketplaceProviderOfferingsUserHasResourceAccessRetrieveResponse = MarketplaceProviderOfferingsUserHasResourceAccessRetrieveResponses[keyof MarketplaceProviderOfferingsUserHasResourceAccessRetrieveResponses];

export type MarketplaceProviderOfferingsGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/groups/';
};

export type MarketplaceProviderOfferingsGroupsListResponses = {
    200: Array<OfferingGroups>;
};

export type MarketplaceProviderOfferingsGroupsListResponse = MarketplaceProviderOfferingsGroupsListResponses[keyof MarketplaceProviderOfferingsGroupsListResponses];

export type MarketplaceProviderOfferingsGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-provider-offerings/groups/';
};

export type MarketplaceProviderOfferingsGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-project_name' | '-state' | 'created' | 'name' | 'project_name' | 'state'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/marketplace-provider-resources/';
};

export type MarketplaceProviderResourcesListResponses = {
    200: Array<Resource>;
};

export type MarketplaceProviderResourcesListResponse = MarketplaceProviderResourcesListResponses[keyof MarketplaceProviderResourcesListResponses];

export type MarketplaceProviderResourcesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-project_name' | '-state' | 'created' | 'name' | 'project_name' | 'state'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/marketplace-provider-resources/';
};

export type MarketplaceProviderResourcesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-provider-resources/{uuid}/';
};

export type MarketplaceProviderResourcesRetrieveResponses = {
    200: Resource;
};

export type MarketplaceProviderResourcesRetrieveResponse = MarketplaceProviderResourcesRetrieveResponses[keyof MarketplaceProviderResourcesRetrieveResponses];

export type MarketplaceProviderResourcesPartialUpdateData = {
    body?: PatchedResourceUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/';
};

export type MarketplaceProviderResourcesPartialUpdateResponses = {
    200: ResourceUpdate;
};

export type MarketplaceProviderResourcesPartialUpdateResponse = MarketplaceProviderResourcesPartialUpdateResponses[keyof MarketplaceProviderResourcesPartialUpdateResponses];

export type MarketplaceProviderResourcesUpdateData = {
    body: ResourceUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/';
};

export type MarketplaceProviderResourcesUpdateResponses = {
    200: ResourceUpdate;
};

export type MarketplaceProviderResourcesUpdateResponse = MarketplaceProviderResourcesUpdateResponses[keyof MarketplaceProviderResourcesUpdateResponses];

export type MarketplaceProviderResourcesDetailsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-provider-resources/{uuid}/details/';
};

export type MarketplaceProviderResourcesDetailsRetrieveResponses = {
    200: Resource;
};

export type MarketplaceProviderResourcesDetailsRetrieveResponse = MarketplaceProviderResourcesDetailsRetrieveResponses[keyof MarketplaceProviderResourcesDetailsRetrieveResponses];

export type MarketplaceProviderResourcesGlauthUsersConfigRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/glauth_users_config/';
};

export type MarketplaceProviderResourcesGlauthUsersConfigRetrieveResponses = {
    200: string;
};

export type MarketplaceProviderResourcesGlauthUsersConfigRetrieveResponse = MarketplaceProviderResourcesGlauthUsersConfigRetrieveResponses[keyof MarketplaceProviderResourcesGlauthUsersConfigRetrieveResponses];

export type MarketplaceProviderResourcesMoveResourceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/move_resource/';
};

export type MarketplaceProviderResourcesMoveResourceResponses = {
    200: Resource;
};

export type MarketplaceProviderResourcesMoveResourceResponse = MarketplaceProviderResourcesMoveResourceResponses[keyof MarketplaceProviderResourcesMoveResourceResponses];

export type MarketplaceProviderResourcesOfferingRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/offering/';
};

export type MarketplaceProviderResourcesOfferingRetrieveResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceProviderResourcesOfferingRetrieveResponse = MarketplaceProviderResourcesOfferingRetrieveResponses[keyof MarketplaceProviderResourcesOfferingRetrieveResponses];

export type MarketplaceProviderResourcesOfferingForSubresourcesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/offering_for_subresources/';
};

export type MarketplaceProviderResourcesOfferingForSubresourcesListResponses = {
    200: Array<SubresourceOffering>;
};

export type MarketplaceProviderResourcesOfferingForSubresourcesListResponse = MarketplaceProviderResourcesOfferingForSubresourcesListResponses[keyof MarketplaceProviderResourcesOfferingForSubresourcesListResponses];

export type MarketplaceProviderResourcesPlanPeriodsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/plan_periods/';
};

export type MarketplaceProviderResourcesPlanPeriodsListResponses = {
    200: Array<ResourcePlanPeriod>;
};

export type MarketplaceProviderResourcesPlanPeriodsListResponse = MarketplaceProviderResourcesPlanPeriodsListResponses[keyof MarketplaceProviderResourcesPlanPeriodsListResponses];

export type MarketplaceProviderResourcesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/pull/';
};

export type MarketplaceProviderResourcesPullResponses = {
    200: {
        [key: string]: string;
    };
};

export type MarketplaceProviderResourcesPullResponse = MarketplaceProviderResourcesPullResponses[keyof MarketplaceProviderResourcesPullResponses];

export type MarketplaceProviderResourcesRefreshLastSyncData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/refresh_last_sync/';
};

export type MarketplaceProviderResourcesRefreshLastSyncResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesSetAsErredData = {
    body?: ResourceSetStateErredRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_as_erred/';
};

export type MarketplaceProviderResourcesSetAsErredResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesSetAsOkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_as_ok/';
};

export type MarketplaceProviderResourcesSetAsOkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesSetBackendIdData = {
    body?: ResourceBackendIdRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_backend_id/';
};

export type MarketplaceProviderResourcesSetBackendIdResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceProviderResourcesSetBackendIdResponse = MarketplaceProviderResourcesSetBackendIdResponses[keyof MarketplaceProviderResourcesSetBackendIdResponses];

export type MarketplaceProviderResourcesSetBackendMetadataData = {
    body: ResourceBackendMetadataRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_backend_metadata/';
};

export type MarketplaceProviderResourcesSetBackendMetadataResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceProviderResourcesSetBackendMetadataResponse = MarketplaceProviderResourcesSetBackendMetadataResponses[keyof MarketplaceProviderResourcesSetBackendMetadataResponses];

export type MarketplaceProviderResourcesSetEndDateByProviderData = {
    body?: ResourceEndDateByProviderRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_end_date_by_provider/';
};

export type MarketplaceProviderResourcesSetEndDateByProviderResponses = {
    200: Resource;
};

export type MarketplaceProviderResourcesSetEndDateByProviderResponse = MarketplaceProviderResourcesSetEndDateByProviderResponses[keyof MarketplaceProviderResourcesSetEndDateByProviderResponses];

export type MarketplaceProviderResourcesSetEndDateByStaffData = {
    body?: ResourceEndDateByProviderRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_end_date_by_staff/';
};

export type MarketplaceProviderResourcesSetEndDateByStaffResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesSetLimitsData = {
    body: ResourceSetLimitsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_limits/';
};

export type MarketplaceProviderResourcesSetLimitsResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceProviderResourcesSetLimitsResponse = MarketplaceProviderResourcesSetLimitsResponses[keyof MarketplaceProviderResourcesSetLimitsResponses];

export type MarketplaceProviderResourcesSetSlugData = {
    body: ResourceSlugRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/set_slug/';
};

export type MarketplaceProviderResourcesSetSlugResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceProviderResourcesSubmitReportData = {
    body: ResourceReportRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/submit_report/';
};

export type MarketplaceProviderResourcesSubmitReportResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceProviderResourcesSubmitReportResponse = MarketplaceProviderResourcesSubmitReportResponses[keyof MarketplaceProviderResourcesSubmitReportResponses];

export type MarketplaceProviderResourcesTeamListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/team/';
};

export type MarketplaceProviderResourcesTeamListResponses = {
    200: Array<ProjectUser>;
};

export type MarketplaceProviderResourcesTeamListResponse = MarketplaceProviderResourcesTeamListResponses[keyof MarketplaceProviderResourcesTeamListResponses];

export type MarketplaceProviderResourcesTerminateData = {
    body?: ResourceTerminateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/terminate/';
};

export type MarketplaceProviderResourcesTerminateResponses = {
    200: OrderUuid;
};

export type MarketplaceProviderResourcesTerminateResponse = MarketplaceProviderResourcesTerminateResponses[keyof MarketplaceProviderResourcesTerminateResponses];

export type MarketplaceProviderResourcesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-provider-resources/{uuid}/unlink/';
};

export type MarketplaceProviderResourcesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePublicApiCheckSignatureData = {
    body: ServiceProviderSignatureRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-public-api/check_signature/';
};

export type MarketplacePublicApiCheckSignatureResponses = {
    200: ServiceProviderSignature;
};

export type MarketplacePublicApiCheckSignatureResponse = MarketplacePublicApiCheckSignatureResponses[keyof MarketplacePublicApiCheckSignatureResponses];

export type MarketplacePublicApiSetUsageData = {
    body: ServiceProviderSignatureRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-public-api/set_usage/';
};

export type MarketplacePublicApiSetUsageResponses = {
    200: ServiceProviderSignature;
};

export type MarketplacePublicApiSetUsageResponse = MarketplacePublicApiSetUsageResponses[keyof MarketplacePublicApiSetUsageResponses];

export type MarketplacePublicOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'promotion_campaigns' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-public-offerings/';
};

export type MarketplacePublicOfferingsListResponses = {
    200: Array<PublicOfferingDetails>;
};

export type MarketplacePublicOfferingsListResponse = MarketplacePublicOfferingsListResponses[keyof MarketplacePublicOfferingsListResponses];

export type MarketplacePublicOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-public-offerings/';
};

export type MarketplacePublicOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplacePublicOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'attributes' | 'backend_id' | 'backend_metadata' | 'billable' | 'category' | 'category_title' | 'category_uuid' | 'citation_count' | 'components' | 'country' | 'created' | 'customer' | 'customer_name' | 'customer_uuid' | 'datacite_doi' | 'description' | 'endpoints' | 'files' | 'full_description' | 'getting_started' | 'google_calendar_is_public' | 'google_calendar_link' | 'has_compliance_requirements' | 'image' | 'integration_guide' | 'latitude' | 'longitude' | 'name' | 'options' | 'order_count' | 'organization_groups' | 'parent_description' | 'parent_name' | 'parent_uuid' | 'paused_reason' | 'plans' | 'plugin_options' | 'privacy_policy_link' | 'project' | 'project_name' | 'project_uuid' | 'promotion_campaigns' | 'quotas' | 'resource_options' | 'roles' | 'scope' | 'scope_error_message' | 'scope_name' | 'scope_state' | 'scope_uuid' | 'screenshots' | 'shared' | 'slug' | 'state' | 'terms_of_service' | 'terms_of_service_link' | 'thumbnail' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type' | 'url' | 'uuid' | 'vendor_details'>;
    };
    url: '/api/marketplace-public-offerings/{uuid}/';
};

export type MarketplacePublicOfferingsRetrieveResponses = {
    200: PublicOfferingDetails;
};

export type MarketplacePublicOfferingsRetrieveResponse = MarketplacePublicOfferingsRetrieveResponses[keyof MarketplacePublicOfferingsRetrieveResponses];

export type MarketplacePublicOfferingsPlansListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-public-offerings/{uuid}/plans/';
};

export type MarketplacePublicOfferingsPlansListResponses = {
    200: Array<BasePublicPlan>;
};

export type MarketplacePublicOfferingsPlansListResponse = MarketplacePublicOfferingsPlansListResponses[keyof MarketplacePublicOfferingsPlansListResponses];

export type MarketplacePublicOfferingsPlansRetrieveData = {
    body?: never;
    path: {
        plan_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-public-offerings/{uuid}/plans/{plan_uuid}/';
};

export type MarketplacePublicOfferingsPlansRetrieveResponses = {
    200: BasePublicPlan;
};

export type MarketplacePublicOfferingsPlansRetrieveResponse = MarketplacePublicOfferingsPlansRetrieveResponses[keyof MarketplacePublicOfferingsPlansRetrieveResponses];

export type MarketplaceRelatedCustomersListData = {
    body?: never;
    path: {
        customer_uuid: string;
    };
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-related-customers/{customer_uuid}/';
};

export type MarketplaceRelatedCustomersListResponses = {
    200: Array<BasicCustomer>;
};

export type MarketplaceRelatedCustomersListResponse = MarketplaceRelatedCustomersListResponses[keyof MarketplaceRelatedCustomersListResponses];

export type MarketplaceRemoteSynchronisationsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-remote-synchronisations/';
};

export type MarketplaceRemoteSynchronisationsListResponses = {
    200: Array<RemoteSynchronisation>;
};

export type MarketplaceRemoteSynchronisationsListResponse = MarketplaceRemoteSynchronisationsListResponses[keyof MarketplaceRemoteSynchronisationsListResponses];

export type MarketplaceRemoteSynchronisationsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-remote-synchronisations/';
};

export type MarketplaceRemoteSynchronisationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceRemoteSynchronisationsCreateData = {
    body: RemoteSynchronisationRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-remote-synchronisations/';
};

export type MarketplaceRemoteSynchronisationsCreateResponses = {
    201: RemoteSynchronisation;
};

export type MarketplaceRemoteSynchronisationsCreateResponse = MarketplaceRemoteSynchronisationsCreateResponses[keyof MarketplaceRemoteSynchronisationsCreateResponses];

export type MarketplaceRemoteSynchronisationsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-remote-synchronisations/{uuid}/';
};

export type MarketplaceRemoteSynchronisationsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceRemoteSynchronisationsDestroyResponse = MarketplaceRemoteSynchronisationsDestroyResponses[keyof MarketplaceRemoteSynchronisationsDestroyResponses];

export type MarketplaceRemoteSynchronisationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-remote-synchronisations/{uuid}/';
};

export type MarketplaceRemoteSynchronisationsRetrieveResponses = {
    200: RemoteSynchronisation;
};

export type MarketplaceRemoteSynchronisationsRetrieveResponse = MarketplaceRemoteSynchronisationsRetrieveResponses[keyof MarketplaceRemoteSynchronisationsRetrieveResponses];

export type MarketplaceRemoteSynchronisationsPartialUpdateData = {
    body?: PatchedRemoteSynchronisationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-remote-synchronisations/{uuid}/';
};

export type MarketplaceRemoteSynchronisationsPartialUpdateResponses = {
    200: RemoteSynchronisation;
};

export type MarketplaceRemoteSynchronisationsPartialUpdateResponse = MarketplaceRemoteSynchronisationsPartialUpdateResponses[keyof MarketplaceRemoteSynchronisationsPartialUpdateResponses];

export type MarketplaceRemoteSynchronisationsUpdateData = {
    body: RemoteSynchronisationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-remote-synchronisations/{uuid}/';
};

export type MarketplaceRemoteSynchronisationsUpdateResponses = {
    200: RemoteSynchronisation;
};

export type MarketplaceRemoteSynchronisationsUpdateResponse = MarketplaceRemoteSynchronisationsUpdateResponses[keyof MarketplaceRemoteSynchronisationsUpdateResponses];

export type MarketplaceRemoteSynchronisationsRunSynchronisationData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-remote-synchronisations/{uuid}/run_synchronisation/';
};

export type MarketplaceRemoteSynchronisationsRunSynchronisationResponses = {
    200: RemoteSynchronisation;
};

export type MarketplaceRemoteSynchronisationsRunSynchronisationResponse = MarketplaceRemoteSynchronisationsRunSynchronisationResponses[keyof MarketplaceRemoteSynchronisationsRunSynchronisationResponses];

export type MarketplaceResourceOfferingsListData = {
    body?: never;
    path: {
        category_uuid: string;
    };
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-resource-offerings/{category_uuid}/';
};

export type MarketplaceResourceOfferingsListResponses = {
    200: Array<ResourceOffering>;
};

export type MarketplaceResourceOfferingsListResponse = MarketplaceResourceOfferingsListResponses[keyof MarketplaceResourceOfferingsListResponses];

export type MarketplaceResourceUsersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        resource?: string;
        resource_uuid?: string;
        role_name?: string;
        role_uuid?: string;
        user_uuid?: string;
    };
    url: '/api/marketplace-resource-users/';
};

export type MarketplaceResourceUsersListResponses = {
    200: Array<ResourceUser>;
};

export type MarketplaceResourceUsersListResponse = MarketplaceResourceUsersListResponses[keyof MarketplaceResourceUsersListResponses];

export type MarketplaceResourceUsersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        resource?: string;
        resource_uuid?: string;
        role_name?: string;
        role_uuid?: string;
        user_uuid?: string;
    };
    url: '/api/marketplace-resource-users/';
};

export type MarketplaceResourceUsersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceResourceUsersCreateData = {
    body: ResourceUserRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-resource-users/';
};

export type MarketplaceResourceUsersCreateResponses = {
    201: ResourceUser;
};

export type MarketplaceResourceUsersCreateResponse = MarketplaceResourceUsersCreateResponses[keyof MarketplaceResourceUsersCreateResponses];

export type MarketplaceResourceUsersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resource-users/{uuid}/';
};

export type MarketplaceResourceUsersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceResourceUsersDestroyResponse = MarketplaceResourceUsersDestroyResponses[keyof MarketplaceResourceUsersDestroyResponses];

export type MarketplaceResourceUsersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resource-users/{uuid}/';
};

export type MarketplaceResourceUsersRetrieveResponses = {
    200: ResourceUser;
};

export type MarketplaceResourceUsersRetrieveResponse = MarketplaceResourceUsersRetrieveResponses[keyof MarketplaceResourceUsersRetrieveResponses];

export type MarketplaceResourcesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-project_name' | '-state' | 'created' | 'name' | 'project_name' | 'state'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/marketplace-resources/';
};

export type MarketplaceResourcesListResponses = {
    200: Array<Resource>;
};

export type MarketplaceResourcesListResponse = MarketplaceResourcesListResponses[keyof MarketplaceResourcesListResponses];

export type MarketplaceResourcesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Backend ID
         */
        backend_id?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        downscaled?: boolean;
        /**
         * Has termination date
         */
        has_terminate_date?: boolean;
        /**
         * LEXIS links supported
         */
        lexis_links_supported?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-project_name' | '-state' | 'created' | 'name' | 'project_name' | 'state'>;
        offering?: string;
        offering_billable?: string;
        /**
         * Offering shared
         */
        offering_shared?: boolean;
        offering_type?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
        paused?: boolean;
        project_name?: string;
        project_uuid?: string;
        provider_uuid?: string;
        /**
         * Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
         */
        query?: string;
        restrict_member_access?: boolean;
        /**
         * Runtime state
         */
        runtime_state?: string;
        /**
         * Service Manager UUID
         */
        service_manager_uuid?: string;
        state?: Array<'Creating' | 'Erred' | 'OK' | 'Terminated' | 'Terminating' | 'Updating'>;
        /**
         * Visible to username
         */
        visible_to_username?: string;
    };
    url: '/api/marketplace-resources/';
};

export type MarketplaceResourcesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceResourcesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-resources/{uuid}/';
};

export type MarketplaceResourcesRetrieveResponses = {
    200: Resource;
};

export type MarketplaceResourcesRetrieveResponse = MarketplaceResourcesRetrieveResponses[keyof MarketplaceResourcesRetrieveResponses];

export type MarketplaceResourcesPartialUpdateData = {
    body?: PatchedResourceUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/';
};

export type MarketplaceResourcesPartialUpdateResponses = {
    200: ResourceUpdate;
};

export type MarketplaceResourcesPartialUpdateResponse = MarketplaceResourcesPartialUpdateResponses[keyof MarketplaceResourcesPartialUpdateResponses];

export type MarketplaceResourcesUpdateData = {
    body: ResourceUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/';
};

export type MarketplaceResourcesUpdateResponses = {
    200: ResourceUpdate;
};

export type MarketplaceResourcesUpdateResponse = MarketplaceResourcesUpdateResponses[keyof MarketplaceResourcesUpdateResponses];

export type MarketplaceResourcesDetailsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'attributes' | 'available_actions' | 'backend_id' | 'backend_metadata' | 'can_terminate' | 'category_icon' | 'category_title' | 'category_uuid' | 'created' | 'creation_order' | 'current_usages' | 'customer_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'downscaled' | 'effective_id' | 'end_date' | 'end_date_requested_by' | 'endpoints' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'last_sync' | 'limit_usage' | 'limits' | 'modified' | 'name' | 'offering' | 'offering_billable' | 'offering_customer_uuid' | 'offering_description' | 'offering_image' | 'offering_name' | 'offering_plugin_options' | 'offering_shared' | 'offering_slug' | 'offering_terms_of_service' | 'offering_thumbnail' | 'offering_type' | 'offering_uuid' | 'options' | 'order_in_progress' | 'parent_name' | 'parent_offering_name' | 'parent_offering_slug' | 'parent_offering_uuid' | 'parent_uuid' | 'paused' | 'plan' | 'plan_description' | 'plan_name' | 'plan_unit' | 'plan_uuid' | 'project' | 'project_description' | 'project_end_date' | 'project_end_date_requested_by' | 'project_name' | 'project_slug' | 'project_uuid' | 'provider_name' | 'provider_uuid' | 'report' | 'resource_type' | 'resource_uuid' | 'restrict_member_access' | 'scope' | 'service_settings_uuid' | 'slug' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/marketplace-resources/{uuid}/details/';
};

export type MarketplaceResourcesDetailsRetrieveResponses = {
    200: Resource;
};

export type MarketplaceResourcesDetailsRetrieveResponse = MarketplaceResourcesDetailsRetrieveResponses[keyof MarketplaceResourcesDetailsRetrieveResponses];

export type MarketplaceResourcesGlauthUsersConfigRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/glauth_users_config/';
};

export type MarketplaceResourcesGlauthUsersConfigRetrieveResponses = {
    200: string;
};

export type MarketplaceResourcesGlauthUsersConfigRetrieveResponse = MarketplaceResourcesGlauthUsersConfigRetrieveResponses[keyof MarketplaceResourcesGlauthUsersConfigRetrieveResponses];

export type MarketplaceResourcesMoveResourceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/move_resource/';
};

export type MarketplaceResourcesMoveResourceResponses = {
    200: Resource;
};

export type MarketplaceResourcesMoveResourceResponse = MarketplaceResourcesMoveResourceResponses[keyof MarketplaceResourcesMoveResourceResponses];

export type MarketplaceResourcesOfferingRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/offering/';
};

export type MarketplaceResourcesOfferingRetrieveResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceResourcesOfferingRetrieveResponse = MarketplaceResourcesOfferingRetrieveResponses[keyof MarketplaceResourcesOfferingRetrieveResponses];

export type MarketplaceResourcesOfferingForSubresourcesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/offering_for_subresources/';
};

export type MarketplaceResourcesOfferingForSubresourcesListResponses = {
    200: Array<SubresourceOffering>;
};

export type MarketplaceResourcesOfferingForSubresourcesListResponse = MarketplaceResourcesOfferingForSubresourcesListResponses[keyof MarketplaceResourcesOfferingForSubresourcesListResponses];

export type MarketplaceResourcesPlanPeriodsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/plan_periods/';
};

export type MarketplaceResourcesPlanPeriodsListResponses = {
    200: Array<ResourcePlanPeriod>;
};

export type MarketplaceResourcesPlanPeriodsListResponse = MarketplaceResourcesPlanPeriodsListResponses[keyof MarketplaceResourcesPlanPeriodsListResponses];

export type MarketplaceResourcesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/pull/';
};

export type MarketplaceResourcesPullResponses = {
    200: {
        [key: string]: string;
    };
};

export type MarketplaceResourcesPullResponse = MarketplaceResourcesPullResponses[keyof MarketplaceResourcesPullResponses];

export type MarketplaceResourcesSetEndDateByStaffData = {
    body?: ResourceEndDateByProviderRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/set_end_date_by_staff/';
};

export type MarketplaceResourcesSetEndDateByStaffResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceResourcesSetSlugData = {
    body: ResourceSlugRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/set_slug/';
};

export type MarketplaceResourcesSetSlugResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceResourcesSwitchPlanData = {
    body: ResourceSwitchPlanRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/switch_plan/';
};

export type MarketplaceResourcesSwitchPlanResponses = {
    200: OrderUuid;
};

export type MarketplaceResourcesSwitchPlanResponse = MarketplaceResourcesSwitchPlanResponses[keyof MarketplaceResourcesSwitchPlanResponses];

export type MarketplaceResourcesTeamListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/team/';
};

export type MarketplaceResourcesTeamListResponses = {
    200: Array<ProjectUser>;
};

export type MarketplaceResourcesTeamListResponse = MarketplaceResourcesTeamListResponses[keyof MarketplaceResourcesTeamListResponses];

export type MarketplaceResourcesTerminateData = {
    body?: ResourceTerminateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/terminate/';
};

export type MarketplaceResourcesTerminateResponses = {
    200: OrderUuid;
};

export type MarketplaceResourcesTerminateResponse = MarketplaceResourcesTerminateResponses[keyof MarketplaceResourcesTerminateResponses];

export type MarketplaceResourcesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/unlink/';
};

export type MarketplaceResourcesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceResourcesUpdateLimitsData = {
    body: ResourceUpdateLimitsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/update_limits/';
};

export type MarketplaceResourcesUpdateLimitsResponses = {
    200: OrderUuid;
};

export type MarketplaceResourcesUpdateLimitsResponse = MarketplaceResourcesUpdateLimitsResponses[keyof MarketplaceResourcesUpdateLimitsResponses];

export type MarketplaceResourcesUpdateOptionsData = {
    body?: ResourceOptionsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-resources/{uuid}/update_options/';
};

export type MarketplaceResourcesUpdateOptionsResponses = {
    200: ResourceResponseStatus;
};

export type MarketplaceResourcesUpdateOptionsResponse = MarketplaceResourcesUpdateOptionsResponses[keyof MarketplaceResourcesUpdateOptionsResponses];

export type MarketplaceResourcesSuggestNameData = {
    body: ResourceSuggestNameRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-resources/suggest_name/';
};

export type MarketplaceResourcesSuggestNameResponses = {
    200: ResourceSuggestName;
};

export type MarketplaceResourcesSuggestNameResponse = MarketplaceResourcesSuggestNameResponses[keyof MarketplaceResourcesSuggestNameResponses];

export type MarketplaceRobotAccountsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer_uuid?: string;
        field?: Array<'backend_id' | 'created' | 'customer_name' | 'customer_uuid' | 'description' | 'error_message' | 'error_traceback' | 'fingerprints' | 'keys' | 'modified' | 'offering_customer_uuid' | 'offering_plugin_options' | 'project_name' | 'project_uuid' | 'resource' | 'resource_name' | 'resource_uuid' | 'responsible_user' | 'state' | 'type' | 'url' | 'user_keys' | 'username' | 'users' | 'uuid'>;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        provider_uuid?: string;
        resource?: string;
        resource_uuid?: string;
        state?: 1 | 2 | 3 | 4 | 5 | 6;
        type?: string;
    };
    url: '/api/marketplace-robot-accounts/';
};

export type MarketplaceRobotAccountsListResponses = {
    200: Array<RobotAccountDetails>;
};

export type MarketplaceRobotAccountsListResponse = MarketplaceRobotAccountsListResponses[keyof MarketplaceRobotAccountsListResponses];

export type MarketplaceRobotAccountsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        customer_uuid?: string;
        /**
         * Modified after
         */
        modified?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        provider_uuid?: string;
        resource?: string;
        resource_uuid?: string;
        state?: 1 | 2 | 3 | 4 | 5 | 6;
        type?: string;
    };
    url: '/api/marketplace-robot-accounts/';
};

export type MarketplaceRobotAccountsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceRobotAccountsCreateData = {
    body: RobotAccountRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-robot-accounts/';
};

export type MarketplaceRobotAccountsCreateResponses = {
    201: RobotAccount;
};

export type MarketplaceRobotAccountsCreateResponse = MarketplaceRobotAccountsCreateResponses[keyof MarketplaceRobotAccountsCreateResponses];

export type MarketplaceRobotAccountsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/';
};

export type MarketplaceRobotAccountsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceRobotAccountsDestroyResponse = MarketplaceRobotAccountsDestroyResponses[keyof MarketplaceRobotAccountsDestroyResponses];

export type MarketplaceRobotAccountsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'created' | 'customer_name' | 'customer_uuid' | 'description' | 'error_message' | 'error_traceback' | 'fingerprints' | 'keys' | 'modified' | 'offering_customer_uuid' | 'offering_plugin_options' | 'project_name' | 'project_uuid' | 'resource' | 'resource_name' | 'resource_uuid' | 'responsible_user' | 'state' | 'type' | 'url' | 'user_keys' | 'username' | 'users' | 'uuid'>;
    };
    url: '/api/marketplace-robot-accounts/{uuid}/';
};

export type MarketplaceRobotAccountsRetrieveResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsRetrieveResponse = MarketplaceRobotAccountsRetrieveResponses[keyof MarketplaceRobotAccountsRetrieveResponses];

export type MarketplaceRobotAccountsPartialUpdateData = {
    body?: PatchedRobotAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/';
};

export type MarketplaceRobotAccountsPartialUpdateResponses = {
    200: RobotAccount;
};

export type MarketplaceRobotAccountsPartialUpdateResponse = MarketplaceRobotAccountsPartialUpdateResponses[keyof MarketplaceRobotAccountsPartialUpdateResponses];

export type MarketplaceRobotAccountsUpdateData = {
    body: RobotAccountRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/';
};

export type MarketplaceRobotAccountsUpdateResponses = {
    200: RobotAccount;
};

export type MarketplaceRobotAccountsUpdateResponse = MarketplaceRobotAccountsUpdateResponses[keyof MarketplaceRobotAccountsUpdateResponses];

export type MarketplaceRobotAccountsSetStateCreatingData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/set_state_creating/';
};

export type MarketplaceRobotAccountsSetStateCreatingErrors = {
    400: StateTransitionError;
};

export type MarketplaceRobotAccountsSetStateCreatingError = MarketplaceRobotAccountsSetStateCreatingErrors[keyof MarketplaceRobotAccountsSetStateCreatingErrors];

export type MarketplaceRobotAccountsSetStateCreatingResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsSetStateCreatingResponse = MarketplaceRobotAccountsSetStateCreatingResponses[keyof MarketplaceRobotAccountsSetStateCreatingResponses];

export type MarketplaceRobotAccountsSetStateDeletedData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/set_state_deleted/';
};

export type MarketplaceRobotAccountsSetStateDeletedResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsSetStateDeletedResponse = MarketplaceRobotAccountsSetStateDeletedResponses[keyof MarketplaceRobotAccountsSetStateDeletedResponses];

export type MarketplaceRobotAccountsSetStateErredData = {
    body?: RobotAccountErrorRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/set_state_erred/';
};

export type MarketplaceRobotAccountsSetStateErredResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsSetStateErredResponse = MarketplaceRobotAccountsSetStateErredResponses[keyof MarketplaceRobotAccountsSetStateErredResponses];

export type MarketplaceRobotAccountsSetStateOkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/set_state_ok/';
};

export type MarketplaceRobotAccountsSetStateOkResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsSetStateOkResponse = MarketplaceRobotAccountsSetStateOkResponses[keyof MarketplaceRobotAccountsSetStateOkResponses];

export type MarketplaceRobotAccountsSetStateRequestDeletionData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-robot-accounts/{uuid}/set_state_request_deletion/';
};

export type MarketplaceRobotAccountsSetStateRequestDeletionResponses = {
    200: RobotAccountDetails;
};

export type MarketplaceRobotAccountsSetStateRequestDeletionResponse = MarketplaceRobotAccountsSetStateRequestDeletionResponses[keyof MarketplaceRobotAccountsSetStateRequestDeletionResponses];

export type MarketplaceRuntimeStatesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * UUID of the category to filter runtime states by.
         */
        category_uuid?: string;
        /**
         * UUID of the project to filter runtime states by.
         */
        project_uuid?: string;
    };
    url: '/api/marketplace-runtime-states/';
};

export type MarketplaceRuntimeStatesListResponses = {
    200: Array<RuntimeStates>;
};

export type MarketplaceRuntimeStatesListResponse = MarketplaceRuntimeStatesListResponses[keyof MarketplaceRuntimeStatesListResponses];

export type MarketplaceScreenshotsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-screenshots/';
};

export type MarketplaceScreenshotsListResponses = {
    200: Array<Screenshot>;
};

export type MarketplaceScreenshotsListResponse = MarketplaceScreenshotsListResponses[keyof MarketplaceScreenshotsListResponses];

export type MarketplaceScreenshotsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | 'created' | 'name'>;
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_offering_uuid?: string;
    };
    url: '/api/marketplace-screenshots/';
};

export type MarketplaceScreenshotsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceScreenshotsCreateData = {
    body: ScreenshotRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-screenshots/';
};

export type MarketplaceScreenshotsCreateResponses = {
    201: Screenshot;
};

export type MarketplaceScreenshotsCreateResponse = MarketplaceScreenshotsCreateResponses[keyof MarketplaceScreenshotsCreateResponses];

export type MarketplaceScreenshotsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-screenshots/{uuid}/';
};

export type MarketplaceScreenshotsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceScreenshotsDestroyResponse = MarketplaceScreenshotsDestroyResponses[keyof MarketplaceScreenshotsDestroyResponses];

export type MarketplaceScreenshotsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-screenshots/{uuid}/';
};

export type MarketplaceScreenshotsRetrieveResponses = {
    200: Screenshot;
};

export type MarketplaceScreenshotsRetrieveResponse = MarketplaceScreenshotsRetrieveResponses[keyof MarketplaceScreenshotsRetrieveResponses];

export type MarketplaceScreenshotsPartialUpdateData = {
    body?: PatchedScreenshotRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-screenshots/{uuid}/';
};

export type MarketplaceScreenshotsPartialUpdateResponses = {
    200: Screenshot;
};

export type MarketplaceScreenshotsPartialUpdateResponse = MarketplaceScreenshotsPartialUpdateResponses[keyof MarketplaceScreenshotsPartialUpdateResponses];

export type MarketplaceScreenshotsUpdateData = {
    body: ScreenshotRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-screenshots/{uuid}/';
};

export type MarketplaceScreenshotsUpdateResponses = {
    200: Screenshot;
};

export type MarketplaceScreenshotsUpdateResponse = MarketplaceScreenshotsUpdateResponses[keyof MarketplaceScreenshotsUpdateResponses];

export type MarketplaceScriptAsyncDryRunListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-script-async-dry-run/';
};

export type MarketplaceScriptAsyncDryRunListResponses = {
    200: Array<DryRun>;
};

export type MarketplaceScriptAsyncDryRunListResponse = MarketplaceScriptAsyncDryRunListResponses[keyof MarketplaceScriptAsyncDryRunListResponses];

export type MarketplaceScriptAsyncDryRunCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-script-async-dry-run/';
};

export type MarketplaceScriptAsyncDryRunCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceScriptAsyncDryRunRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-script-async-dry-run/{uuid}/';
};

export type MarketplaceScriptAsyncDryRunRetrieveResponses = {
    200: DryRun;
};

export type MarketplaceScriptAsyncDryRunRetrieveResponse = MarketplaceScriptAsyncDryRunRetrieveResponses[keyof MarketplaceScriptAsyncDryRunRetrieveResponses];

export type MarketplaceScriptDryRunAsyncRunData = {
    body?: DryRunRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-script-dry-run/{uuid}/async_run/';
};

export type MarketplaceScriptDryRunAsyncRunResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceScriptDryRunAsyncRunResponse = MarketplaceScriptDryRunAsyncRunResponses[keyof MarketplaceScriptDryRunAsyncRunResponses];

export type MarketplaceScriptDryRunRunData = {
    body?: DryRunRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-script-dry-run/{uuid}/run/';
};

export type MarketplaceScriptDryRunRunResponses = {
    200: PublicOfferingDetails;
};

export type MarketplaceScriptDryRunRunResponse = MarketplaceScriptDryRunRunResponses[keyof MarketplaceScriptDryRunRunResponses];

export type MarketplaceScriptSyncResourceData = {
    body: PullMarketplaceScriptResourceRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-script-sync-resource/';
};

export type MarketplaceScriptSyncResourceErrors = {
    /**
     * No response body
     */
    404: unknown;
};

export type MarketplaceScriptSyncResourceResponses = {
    /**
     * No response body
     */
    202: unknown;
};

export type MarketplaceSectionsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-sections/';
};

export type MarketplaceSectionsListResponses = {
    200: Array<Section>;
};

export type MarketplaceSectionsListResponse = MarketplaceSectionsListResponses[keyof MarketplaceSectionsListResponses];

export type MarketplaceSectionsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-sections/';
};

export type MarketplaceSectionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceSectionsCreateData = {
    body: SectionRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-sections/';
};

export type MarketplaceSectionsCreateResponses = {
    201: Section;
};

export type MarketplaceSectionsCreateResponse = MarketplaceSectionsCreateResponses[keyof MarketplaceSectionsCreateResponses];

export type MarketplaceSectionsDestroyData = {
    body?: never;
    path: {
        /**
         * A unique value identifying this section.
         */
        key: string;
    };
    query?: never;
    url: '/api/marketplace-sections/{key}/';
};

export type MarketplaceSectionsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceSectionsDestroyResponse = MarketplaceSectionsDestroyResponses[keyof MarketplaceSectionsDestroyResponses];

export type MarketplaceSectionsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique value identifying this section.
         */
        key: string;
    };
    query?: never;
    url: '/api/marketplace-sections/{key}/';
};

export type MarketplaceSectionsRetrieveResponses = {
    200: Section;
};

export type MarketplaceSectionsRetrieveResponse = MarketplaceSectionsRetrieveResponses[keyof MarketplaceSectionsRetrieveResponses];

export type MarketplaceSectionsPartialUpdateData = {
    body?: PatchedSectionRequest;
    path: {
        /**
         * A unique value identifying this section.
         */
        key: string;
    };
    query?: never;
    url: '/api/marketplace-sections/{key}/';
};

export type MarketplaceSectionsPartialUpdateResponses = {
    200: Section;
};

export type MarketplaceSectionsPartialUpdateResponse = MarketplaceSectionsPartialUpdateResponses[keyof MarketplaceSectionsPartialUpdateResponses];

export type MarketplaceSectionsUpdateData = {
    body: SectionRequest;
    path: {
        /**
         * A unique value identifying this section.
         */
        key: string;
    };
    query?: never;
    url: '/api/marketplace-sections/{key}/';
};

export type MarketplaceSectionsUpdateResponses = {
    200: Section;
};

export type MarketplaceSectionsUpdateResponse = MarketplaceSectionsUpdateResponses[keyof MarketplaceSectionsUpdateResponses];

export type MarketplaceServiceProvidersListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        field?: Array<'created' | 'customer' | 'customer_abbreviation' | 'customer_country' | 'customer_image' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'image' | 'offering_count' | 'organization_groups' | 'url' | 'uuid'>;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | 'customer_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/';
};

export type MarketplaceServiceProvidersListResponses = {
    200: Array<ServiceProvider>;
};

export type MarketplaceServiceProvidersListResponse = MarketplaceServiceProvidersListResponses[keyof MarketplaceServiceProvidersListResponses];

export type MarketplaceServiceProvidersCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-customer_name' | 'customer_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/';
};

export type MarketplaceServiceProvidersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceServiceProvidersCreateData = {
    body: ServiceProviderRequest;
    path?: never;
    query?: never;
    url: '/api/marketplace-service-providers/';
};

export type MarketplaceServiceProvidersCreateResponses = {
    201: ServiceProvider;
};

export type MarketplaceServiceProvidersCreateResponse = MarketplaceServiceProvidersCreateResponses[keyof MarketplaceServiceProvidersCreateResponses];

export type ServiceProviderComplianceOverviewData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/compliance/compliance_overview/';
};

export type ServiceProviderComplianceOverviewResponses = {
    200: Array<ServiceProviderComplianceOverview>;
};

export type ServiceProviderComplianceOverviewResponse = ServiceProviderComplianceOverviewResponses[keyof ServiceProviderComplianceOverviewResponses];

export type ServiceProviderOfferingUsersComplianceData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * Filter by compliance status: completed, pending, no_checklist
         */
        compliance_status?: string;
        /**
         * Filter by offering UUID
         */
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/compliance/offering_users/';
};

export type ServiceProviderOfferingUsersComplianceResponses = {
    200: Array<ServiceProviderOfferingUserCompliance>;
};

export type ServiceProviderOfferingUsersComplianceResponse = ServiceProviderOfferingUsersComplianceResponses[keyof ServiceProviderOfferingUsersComplianceResponses];

export type MarketplaceServiceProvidersCustomerProjectsListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        backend_id?: string;
        /**
         * Return a list of projects where current user is admin.
         */
        can_admin?: boolean;
        /**
         * Return a list of projects where current user is manager or a customer owner.
         */
        can_manage?: boolean;
        /**
         * Conceal finished projects
         */
        conceal_finished_projects?: boolean;
        /**
         * Created after
         */
        created?: string;
        /**
         * Multiple values may be separated by commas.
         */
        customer?: Array<string>;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        description?: string;
        field?: Array<'billing_price_estimate' | 'description' | 'end_date' | 'name' | 'resources_count' | 'users_count' | 'uuid'>;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-customer_abbreviation' | '-customer_name' | '-customer_native_name' | '-end_date' | '-estimated_cost' | '-name' | '-start_date' | 'created' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'end_date' | 'estimated_cost' | 'name' | 'start_date'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, UUID, backend ID or resource effective ID
         */
        query?: string;
        slug?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/customer_projects/';
};

export type MarketplaceServiceProvidersCustomerProjectsListResponses = {
    200: Array<MarketplaceProviderCustomerProject>;
};

export type MarketplaceServiceProvidersCustomerProjectsListResponse = MarketplaceServiceProvidersCustomerProjectsListResponses[keyof MarketplaceServiceProvidersCustomerProjectsListResponses];

export type MarketplaceServiceProvidersCustomersListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        field?: Array<'abbreviation' | 'billing_price_estimate' | 'email' | 'name' | 'payment_profiles' | 'phone_number' | 'projects' | 'projects_count' | 'slug' | 'users' | 'users_count' | 'uuid'>;
        name?: string;
        name_exact?: string;
        native_name?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/customers/';
};

export type MarketplaceServiceProvidersCustomersListResponses = {
    200: Array<MarketplaceProviderCustomer>;
};

export type MarketplaceServiceProvidersCustomersListResponse = MarketplaceServiceProvidersCustomersListResponses[keyof MarketplaceServiceProvidersCustomersListResponses];

export type MarketplaceServiceProvidersKeysListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * Created after
         */
        created?: string;
        field?: Array<'fingerprint_md5' | 'fingerprint_sha256' | 'fingerprint_sha512' | 'is_shared' | 'name' | 'public_key' | 'type' | 'url' | 'user_uuid' | 'uuid'>;
        fingerprint_md5?: string;
        fingerprint_sha256?: string;
        fingerprint_sha512?: string;
        is_shared?: boolean;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-name' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user_uuid?: string;
        uuid?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/keys/';
};

export type MarketplaceServiceProvidersKeysListResponses = {
    200: Array<SshKey>;
};

export type MarketplaceServiceProvidersKeysListResponse = MarketplaceServiceProvidersKeysListResponses[keyof MarketplaceServiceProvidersKeysListResponses];

export type MarketplaceServiceProvidersOfferingsListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * Accessible via calls
         */
        accessible_via_calls?: boolean;
        /**
         * Allowed customer UUID
         */
        allowed_customer_uuid?: string;
        attributes?: string;
        billable?: boolean;
        category_group_uuid?: string;
        category_uuid?: string;
        /**
         * Created after
         */
        created?: string;
        customer?: string;
        customer_uuid?: string;
        description?: string;
        field?: Array<'billing_price_estimate' | 'category_title' | 'components' | 'customer_uuid' | 'name' | 'options' | 'plans' | 'resource_options' | 'resources_count' | 'secret_options' | 'slug' | 'state' | 'type' | 'uuid'>;
        /**
         * Keyword
         */
        keyword?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-state' | '-total_cost' | '-total_cost_estimated' | '-total_customers' | '-type' | 'created' | 'name' | 'state' | 'total_cost' | 'total_cost_estimated' | 'total_customers' | 'type'>;
        organization_group_uuid?: Array<string>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent_uuid?: string;
        /**
         * Project UUID
         */
        project_uuid?: string;
        /**
         * Resource customer UUID
         */
        resource_customer_uuid?: string;
        /**
         * Resource project UUID
         */
        resource_project_uuid?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        /**
         * Service manager UUID
         */
        service_manager_uuid?: string;
        shared?: boolean;
        state?: Array<'Active' | 'Archived' | 'Draft' | 'Paused'>;
        type?: Array<string>;
        /**
         * Comma-separated offering UUIDs
         */
        uuid_list?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/offerings/';
};

export type MarketplaceServiceProvidersOfferingsListResponses = {
    200: Array<ProviderOffering>;
};

export type MarketplaceServiceProvidersOfferingsListResponse = MarketplaceServiceProvidersOfferingsListResponses[keyof MarketplaceServiceProvidersOfferingsListResponses];

export type MarketplaceServiceProvidersProjectPermissionsListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * Created after
         */
        created?: string;
        expiration_time?: string;
        field?: Array<'created' | 'created_by' | 'created_by_full_name' | 'created_by_username' | 'customer_name' | 'customer_uuid' | 'expiration_time' | 'project' | 'project_created' | 'project_end_date' | 'project_name' | 'project_uuid' | 'role' | 'role_name' | 'user' | 'user_email' | 'user_full_name' | 'user_native_name' | 'user_username' | 'user_uuid'>;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/project_permissions/';
};

export type MarketplaceServiceProvidersProjectPermissionsListResponses = {
    200: Array<ProjectPermissionLog>;
};

export type MarketplaceServiceProvidersProjectPermissionsListResponse = MarketplaceServiceProvidersProjectPermissionsListResponses[keyof MarketplaceServiceProvidersProjectPermissionsListResponses];

export type MarketplaceServiceProvidersProjectServiceAccountsListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        email?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        username?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/project_service_accounts/';
};

export type MarketplaceServiceProvidersProjectServiceAccountsListResponses = {
    200: Array<ProjectServiceAccount>;
};

export type MarketplaceServiceProvidersProjectServiceAccountsListResponse = MarketplaceServiceProvidersProjectServiceAccountsListResponses[keyof MarketplaceServiceProvidersProjectServiceAccountsListResponses];

export type MarketplaceServiceProvidersProjectsListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        backend_id?: string;
        /**
         * Return a list of projects where current user is admin.
         */
        can_admin?: boolean;
        /**
         * Return a list of projects where current user is manager or a customer owner.
         */
        can_manage?: boolean;
        /**
         * Conceal finished projects
         */
        conceal_finished_projects?: boolean;
        /**
         * Created after
         */
        created?: string;
        /**
         * Multiple values may be separated by commas.
         */
        customer?: Array<string>;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        description?: string;
        field?: Array<'backend_id' | 'billing_price_estimate' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'end_date' | 'end_date_requested_by' | 'image' | 'is_industry' | 'marketplace_resource_count' | 'max_service_accounts' | 'name' | 'oecd_fos_2007_code' | 'oecd_fos_2007_label' | 'project_credit' | 'resources_count' | 'slug' | 'start_date' | 'type' | 'type_name' | 'type_uuid' | 'url' | 'uuid'>;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-customer_abbreviation' | '-customer_name' | '-customer_native_name' | '-end_date' | '-estimated_cost' | '-name' | '-start_date' | 'created' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'end_date' | 'estimated_cost' | 'name' | 'start_date'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, UUID, backend ID or resource effective ID
         */
        query?: string;
        slug?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/projects/';
};

export type MarketplaceServiceProvidersProjectsListResponses = {
    200: Array<Project>;
};

export type MarketplaceServiceProvidersProjectsListResponse = MarketplaceServiceProvidersProjectsListResponses[keyof MarketplaceServiceProvidersProjectsListResponses];

export type MarketplaceServiceProvidersUserCustomersListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query: {
        abbreviation?: string;
        agreement_number?: string;
        archived?: boolean;
        backend_id?: string;
        contact_details?: string;
        field?: Array<'abbreviation' | 'billing_price_estimate' | 'email' | 'name' | 'payment_profiles' | 'phone_number' | 'projects' | 'projects_count' | 'slug' | 'users' | 'users_count' | 'uuid'>;
        name?: string;
        name_exact?: string;
        native_name?: string;
        organization_group_name?: string;
        /**
         * organization_group_uuid
         */
        organization_group_uuid?: Array<string>;
        /**
         * Return a list of customers where current user is owner.
         */
        owned_by_current_user?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, native name, abbreviation, domain, UUID, registration code or agreement number
         */
        query?: string;
        registration_code?: string;
        /**
         * UUID of user to get related customers for
         */
        user_uuid: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/user_customers/';
};

export type MarketplaceServiceProvidersUserCustomersListResponses = {
    200: Array<MarketplaceProviderCustomer>;
};

export type MarketplaceServiceProvidersUserCustomersListResponse = MarketplaceServiceProvidersUserCustomersListResponses[keyof MarketplaceServiceProvidersUserCustomersListResponses];

export type MarketplaceServiceProvidersUsersListData = {
    body?: never;
    path: {
        service_provider_uuid: string;
    };
    query?: {
        /**
         * Agreement date after
         */
        agreement_date?: string;
        civil_number?: string;
        customer_uuid?: string;
        /**
         * Date joined after
         */
        date_joined?: string;
        description?: string;
        email?: string;
        field?: Array<'affiliations' | 'email' | 'first_name' | 'full_name' | 'is_active' | 'last_name' | 'organization' | 'phone_number' | 'projects_count' | 'registration_method' | 'username' | 'uuid'>;
        /**
         * Full name
         */
        full_name?: string;
        is_active?: boolean;
        is_staff?: boolean;
        is_support?: boolean;
        job_title?: string;
        /**
         * Date modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-description' | '-email' | '-full_name' | '-is_active' | '-is_staff' | '-is_support' | '-job_title' | '-native_name' | '-organization' | '-phone_number' | '-registration_method' | '-username' | 'description' | 'email' | 'full_name' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'native_name' | 'organization' | 'phone_number' | 'registration_method' | 'username'>;
        organization?: string;
        /**
         * Organization roles
         */
        organization_roles?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        phone_number?: string;
        /**
         * Project roles
         */
        project_roles?: string;
        project_uuid?: string;
        /**
         * Filter by first name, last name, civil number, username or email
         */
        query?: string;
        registration_method?: string;
        /**
         * User keyword
         */
        user_keyword?: string;
        username?: string;
        /**
         * Comma-separated usernames
         */
        username_list?: string;
    };
    url: '/api/marketplace-service-providers/{service_provider_uuid}/users/';
};

export type MarketplaceServiceProvidersUsersListResponses = {
    200: Array<MarketplaceServiceProviderUser>;
};

export type MarketplaceServiceProvidersUsersListResponse = MarketplaceServiceProvidersUsersListResponses[keyof MarketplaceServiceProvidersUsersListResponses];

export type MarketplaceServiceProvidersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/';
};

export type MarketplaceServiceProvidersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type MarketplaceServiceProvidersDestroyResponse = MarketplaceServiceProvidersDestroyResponses[keyof MarketplaceServiceProvidersDestroyResponses];

export type MarketplaceServiceProvidersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'created' | 'customer' | 'customer_abbreviation' | 'customer_country' | 'customer_image' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'image' | 'offering_count' | 'organization_groups' | 'url' | 'uuid'>;
    };
    url: '/api/marketplace-service-providers/{uuid}/';
};

export type MarketplaceServiceProvidersRetrieveResponses = {
    200: ServiceProvider;
};

export type MarketplaceServiceProvidersRetrieveResponse = MarketplaceServiceProvidersRetrieveResponses[keyof MarketplaceServiceProvidersRetrieveResponses];

export type MarketplaceServiceProvidersPartialUpdateData = {
    body?: PatchedServiceProviderRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/';
};

export type MarketplaceServiceProvidersPartialUpdateResponses = {
    200: ServiceProvider;
};

export type MarketplaceServiceProvidersPartialUpdateResponse = MarketplaceServiceProvidersPartialUpdateResponses[keyof MarketplaceServiceProvidersPartialUpdateResponses];

export type MarketplaceServiceProvidersUpdateData = {
    body: ServiceProviderRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/';
};

export type MarketplaceServiceProvidersUpdateResponses = {
    200: ServiceProvider;
};

export type MarketplaceServiceProvidersUpdateResponse = MarketplaceServiceProvidersUpdateResponses[keyof MarketplaceServiceProvidersUpdateResponses];

export type MarketplaceServiceProvidersAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/add_user/';
};

export type MarketplaceServiceProvidersAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type MarketplaceServiceProvidersAddUserResponse = MarketplaceServiceProvidersAddUserResponses[keyof MarketplaceServiceProvidersAddUserResponses];

export type ServiceProviderApiSecretCodeRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/api_secret_code/';
};

export type ServiceProviderApiSecretCodeRetrieveResponses = {
    200: ServiceProviderApiSecretCode;
};

export type ServiceProviderApiSecretCodeRetrieveResponse = ServiceProviderApiSecretCodeRetrieveResponses[keyof ServiceProviderApiSecretCodeRetrieveResponses];

export type ServiceProviderApiSecretCodeGenerateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/api_secret_code/';
};

export type ServiceProviderApiSecretCodeGenerateResponses = {
    200: ServiceProviderApiSecretCode;
};

export type ServiceProviderApiSecretCodeGenerateResponse = ServiceProviderApiSecretCodeGenerateResponses[keyof ServiceProviderApiSecretCodeGenerateResponses];

export type MarketplaceServiceProvidersDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/delete_user/';
};

export type MarketplaceServiceProvidersDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceServiceProvidersListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/marketplace-service-providers/{uuid}/list_users/';
};

export type MarketplaceServiceProvidersListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type MarketplaceServiceProvidersListUsersListResponse = MarketplaceServiceProvidersListUsersListResponses[keyof MarketplaceServiceProvidersListUsersListResponses];

export type MarketplaceServiceProvidersRevenueListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/{uuid}/revenue/';
};

export type MarketplaceServiceProvidersRevenueListResponses = {
    200: Array<ServiceProviderRevenues>;
};

export type MarketplaceServiceProvidersRevenueListResponse = MarketplaceServiceProvidersRevenueListResponses[keyof MarketplaceServiceProvidersRevenueListResponses];

export type MarketplaceServiceProvidersRobotAccountCustomersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        customer_name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-service-providers/{uuid}/robot_account_customers/';
};

export type MarketplaceServiceProvidersRobotAccountCustomersListResponses = {
    200: Array<NameUuid>;
};

export type MarketplaceServiceProvidersRobotAccountCustomersListResponse = MarketplaceServiceProvidersRobotAccountCustomersListResponses[keyof MarketplaceServiceProvidersRobotAccountCustomersListResponses];

export type MarketplaceServiceProvidersRobotAccountProjectsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_name?: string;
    };
    url: '/api/marketplace-service-providers/{uuid}/robot_account_projects/';
};

export type MarketplaceServiceProvidersRobotAccountProjectsListResponses = {
    200: Array<NameUuid>;
};

export type MarketplaceServiceProvidersRobotAccountProjectsListResponse = MarketplaceServiceProvidersRobotAccountProjectsListResponses[keyof MarketplaceServiceProvidersRobotAccountProjectsListResponses];

export type MarketplaceServiceProvidersSetOfferingsUsernameData = {
    body: SetOfferingsUsernameRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/set_offerings_username/';
};

export type MarketplaceServiceProvidersSetOfferingsUsernameResponses = {
    200: SetOfferingsUsername;
};

export type MarketplaceServiceProvidersSetOfferingsUsernameResponse = MarketplaceServiceProvidersSetOfferingsUsernameResponses[keyof MarketplaceServiceProvidersSetOfferingsUsernameResponses];

export type MarketplaceServiceProvidersStatRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/stat/';
};

export type MarketplaceServiceProvidersStatRetrieveResponses = {
    200: ServiceProviderStatistics;
};

export type MarketplaceServiceProvidersStatRetrieveResponse = MarketplaceServiceProvidersStatRetrieveResponses[keyof MarketplaceServiceProvidersStatRetrieveResponses];

export type MarketplaceServiceProvidersUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/marketplace-service-providers/{uuid}/update_user/';
};

export type MarketplaceServiceProvidersUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type MarketplaceServiceProvidersUpdateUserResponse = MarketplaceServiceProvidersUpdateUserResponses[keyof MarketplaceServiceProvidersUpdateUserResponses];

export type MarketplaceStatsComponentUsagesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages/';
};

export type MarketplaceStatsComponentUsagesListResponses = {
    200: Array<ComponentUsagesStats>;
};

export type MarketplaceStatsComponentUsagesListResponse = MarketplaceStatsComponentUsagesListResponses[keyof MarketplaceStatsComponentUsagesListResponses];

export type MarketplaceStatsComponentUsagesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages/';
};

export type MarketplaceStatsComponentUsagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsComponentUsagesPerMonthListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages_per_month/';
};

export type MarketplaceStatsComponentUsagesPerMonthListResponses = {
    200: Array<ComponentUsagesPerMonthStats>;
};

export type MarketplaceStatsComponentUsagesPerMonthListResponse = MarketplaceStatsComponentUsagesPerMonthListResponses[keyof MarketplaceStatsComponentUsagesPerMonthListResponses];

export type MarketplaceStatsComponentUsagesPerMonthCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages_per_month/';
};

export type MarketplaceStatsComponentUsagesPerMonthCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsComponentUsagesPerProjectListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages_per_project/';
};

export type MarketplaceStatsComponentUsagesPerProjectListResponses = {
    200: Array<ComponentUsagesPerProject>;
};

export type MarketplaceStatsComponentUsagesPerProjectListResponse = MarketplaceStatsComponentUsagesPerProjectListResponses[keyof MarketplaceStatsComponentUsagesPerProjectListResponses];

export type MarketplaceStatsComponentUsagesPerProjectCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/component_usages_per_project/';
};

export type MarketplaceStatsComponentUsagesPerProjectCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_offering/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingListResponses = {
    200: Array<OfferingStats>;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingListResponse = MarketplaceStatsCountActiveResourcesGroupedByOfferingListResponses[keyof MarketplaceStatsCountActiveResourcesGroupedByOfferingListResponses];

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_offering/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_offering_country/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryListResponses = {
    200: Array<OfferingCountryStats>;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryListResponse = MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryListResponses[keyof MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryListResponses];

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_offering_country/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOfferingCountryCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_organization_group/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupListResponses = {
    200: Array<CountStats>;
};

export type MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupListResponse = MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupListResponses[keyof MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupListResponses];

export type MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_active_resources_grouped_by_organization_group/';
};

export type MarketplaceStatsCountActiveResourcesGroupedByOrganizationGroupCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_grouped_by_provider_and_industry_flag/';
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagListResponses = {
    200: Array<CustomerIndustryFlagStats>;
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagListResponse = MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagListResponses[keyof MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagListResponses];

export type MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_grouped_by_provider_and_industry_flag/';
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndIndustryFlagCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndOecdListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_grouped_by_provider_and_oecd/';
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndOecdListResponses = {
    200: Array<CustomerOecdCodeStats>;
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndOecdListResponse = MarketplaceStatsCountProjectsGroupedByProviderAndOecdListResponses[keyof MarketplaceStatsCountProjectsGroupedByProviderAndOecdListResponses];

export type MarketplaceStatsCountProjectsGroupedByProviderAndOecdCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_grouped_by_provider_and_oecd/';
};

export type MarketplaceStatsCountProjectsGroupedByProviderAndOecdCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountProjectsOfServiceProvidersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_of_service_providers/';
};

export type MarketplaceStatsCountProjectsOfServiceProvidersListResponses = {
    200: Array<CountProjectsOfServiceProviders>;
};

export type MarketplaceStatsCountProjectsOfServiceProvidersListResponse = MarketplaceStatsCountProjectsOfServiceProvidersListResponses[keyof MarketplaceStatsCountProjectsOfServiceProvidersListResponses];

export type MarketplaceStatsCountProjectsOfServiceProvidersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_of_service_providers/';
};

export type MarketplaceStatsCountProjectsOfServiceProvidersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_of_service_providers_grouped_by_oecd/';
};

export type MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdListResponses = {
    200: Array<CountProjectsOfServiceProvidersGroupedByOecd>;
};

export type MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdListResponse = MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdListResponses[keyof MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdListResponses];

export type MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_projects_of_service_providers_grouped_by_oecd/';
};

export type MarketplaceStatsCountProjectsOfServiceProvidersGroupedByOecdCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_unique_users_connected_with_active_resources_of_service_provider/';
};

export type MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderListResponses = {
    200: Array<CountUniqueUsersConnectedWithActiveResourcesOfServiceProvider>;
};

export type MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderListResponse = MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderListResponses[keyof MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderListResponses];

export type MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_unique_users_connected_with_active_resources_of_service_provider/';
};

export type MarketplaceStatsCountUniqueUsersConnectedWithActiveResourcesOfServiceProviderCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCountUsersOfServiceProvidersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_users_of_service_providers/';
};

export type MarketplaceStatsCountUsersOfServiceProvidersListResponses = {
    200: Array<CountUsersOfServiceProviders>;
};

export type MarketplaceStatsCountUsersOfServiceProvidersListResponse = MarketplaceStatsCountUsersOfServiceProvidersListResponses[keyof MarketplaceStatsCountUsersOfServiceProvidersListResponses];

export type MarketplaceStatsCountUsersOfServiceProvidersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/count_users_of_service_providers/';
};

export type MarketplaceStatsCountUsersOfServiceProvidersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsCustomerMemberCountListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/customer_member_count/';
};

export type MarketplaceStatsCustomerMemberCountListResponses = {
    200: Array<CustomerMemberCount>;
};

export type MarketplaceStatsCustomerMemberCountListResponse = MarketplaceStatsCustomerMemberCountListResponses[keyof MarketplaceStatsCustomerMemberCountListResponses];

export type MarketplaceStatsCustomerMemberCountCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/customer_member_count/';
};

export type MarketplaceStatsCustomerMemberCountCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsOfferingsCounterStatsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/offerings_counter_stats/';
};

export type MarketplaceStatsOfferingsCounterStatsListResponses = {
    200: Array<OfferingStatsCounter>;
};

export type MarketplaceStatsOfferingsCounterStatsListResponse = MarketplaceStatsOfferingsCounterStatsListResponses[keyof MarketplaceStatsOfferingsCounterStatsListResponses];

export type MarketplaceStatsOfferingsCounterStatsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/offerings_counter_stats/';
};

export type MarketplaceStatsOfferingsCounterStatsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsOrganizationProjectCountListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/organization_project_count/';
};

export type MarketplaceStatsOrganizationProjectCountListResponses = {
    200: Array<MarketplaceCustomerStats>;
};

export type MarketplaceStatsOrganizationProjectCountListResponse = MarketplaceStatsOrganizationProjectCountListResponses[keyof MarketplaceStatsOrganizationProjectCountListResponses];

export type MarketplaceStatsOrganizationProjectCountCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/organization_project_count/';
};

export type MarketplaceStatsOrganizationProjectCountCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsOrganizationResourceCountListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/organization_resource_count/';
};

export type MarketplaceStatsOrganizationResourceCountListResponses = {
    200: Array<MarketplaceCustomerStats>;
};

export type MarketplaceStatsOrganizationResourceCountListResponse = MarketplaceStatsOrganizationResourceCountListResponses[keyof MarketplaceStatsOrganizationResourceCountListResponses];

export type MarketplaceStatsOrganizationResourceCountCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/organization_resource_count/';
};

export type MarketplaceStatsOrganizationResourceCountCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsProjectsLimitsGroupedByIndustryFlagRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_limits_grouped_by_industry_flag/';
};

export type MarketplaceStatsProjectsLimitsGroupedByIndustryFlagRetrieveResponses = {
    200: ProjectsLimitsGroupedByIndustryFlag;
};

export type MarketplaceStatsProjectsLimitsGroupedByIndustryFlagRetrieveResponse = MarketplaceStatsProjectsLimitsGroupedByIndustryFlagRetrieveResponses[keyof MarketplaceStatsProjectsLimitsGroupedByIndustryFlagRetrieveResponses];

export type MarketplaceStatsProjectsLimitsGroupedByIndustryFlagCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_limits_grouped_by_industry_flag/';
};

export type MarketplaceStatsProjectsLimitsGroupedByIndustryFlagCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsProjectsLimitsGroupedByOecdRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_limits_grouped_by_oecd/';
};

export type MarketplaceStatsProjectsLimitsGroupedByOecdRetrieveResponses = {
    200: ProjectsLimitsGroupedByOecd;
};

export type MarketplaceStatsProjectsLimitsGroupedByOecdRetrieveResponse = MarketplaceStatsProjectsLimitsGroupedByOecdRetrieveResponses[keyof MarketplaceStatsProjectsLimitsGroupedByOecdRetrieveResponses];

export type MarketplaceStatsProjectsLimitsGroupedByOecdCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_limits_grouped_by_oecd/';
};

export type MarketplaceStatsProjectsLimitsGroupedByOecdCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsProjectsUsagesGroupedByIndustryFlagRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_usages_grouped_by_industry_flag/';
};

export type MarketplaceStatsProjectsUsagesGroupedByIndustryFlagRetrieveResponses = {
    200: ProjectsUsagesGroupedByIndustryFlag;
};

export type MarketplaceStatsProjectsUsagesGroupedByIndustryFlagRetrieveResponse = MarketplaceStatsProjectsUsagesGroupedByIndustryFlagRetrieveResponses[keyof MarketplaceStatsProjectsUsagesGroupedByIndustryFlagRetrieveResponses];

export type MarketplaceStatsProjectsUsagesGroupedByIndustryFlagCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_usages_grouped_by_industry_flag/';
};

export type MarketplaceStatsProjectsUsagesGroupedByIndustryFlagCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsProjectsUsagesGroupedByOecdRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_usages_grouped_by_oecd/';
};

export type MarketplaceStatsProjectsUsagesGroupedByOecdRetrieveResponses = {
    200: ProjectsUsagesGroupedByOecd;
};

export type MarketplaceStatsProjectsUsagesGroupedByOecdRetrieveResponse = MarketplaceStatsProjectsUsagesGroupedByOecdRetrieveResponses[keyof MarketplaceStatsProjectsUsagesGroupedByOecdRetrieveResponses];

export type MarketplaceStatsProjectsUsagesGroupedByOecdCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/marketplace-stats/projects_usages_grouped_by_oecd/';
};

export type MarketplaceStatsProjectsUsagesGroupedByOecdCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsResourcesLimitsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/resources_limits/';
};

export type MarketplaceStatsResourcesLimitsListResponses = {
    200: Array<ResourcesLimits>;
};

export type MarketplaceStatsResourcesLimitsListResponse = MarketplaceStatsResourcesLimitsListResponses[keyof MarketplaceStatsResourcesLimitsListResponses];

export type MarketplaceStatsResourcesLimitsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/resources_limits/';
};

export type MarketplaceStatsResourcesLimitsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MarketplaceStatsTotalCostOfActiveResourcesPerOfferingListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/total_cost_of_active_resources_per_offering/';
};

export type MarketplaceStatsTotalCostOfActiveResourcesPerOfferingListResponses = {
    200: Array<OfferingCost>;
};

export type MarketplaceStatsTotalCostOfActiveResourcesPerOfferingListResponse = MarketplaceStatsTotalCostOfActiveResourcesPerOfferingListResponses[keyof MarketplaceStatsTotalCostOfActiveResourcesPerOfferingListResponses];

export type MarketplaceStatsTotalCostOfActiveResourcesPerOfferingCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/marketplace-stats/total_cost_of_active_resources_per_offering/';
};

export type MarketplaceStatsTotalCostOfActiveResourcesPerOfferingCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type MediaRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/media/{uuid}/';
};

export type MediaRetrieveResponses = {
    200: Blob | File;
};

export type MediaRetrieveResponse = MediaRetrieveResponses[keyof MediaRetrieveResponses];

export type NotificationMessagesListData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        is_overridden?: boolean;
        key?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by key or description
         */
        query?: string;
    };
    url: '/api/notification-messages/';
};

export type NotificationMessagesListResponses = {
    200: Array<Notification>;
};

export type NotificationMessagesListResponse = NotificationMessagesListResponses[keyof NotificationMessagesListResponses];

export type NotificationMessagesCountData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        is_overridden?: boolean;
        key?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by key or description
         */
        query?: string;
    };
    url: '/api/notification-messages/';
};

export type NotificationMessagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type NotificationMessagesCreateData = {
    body: NotificationRequest;
    path?: never;
    query?: never;
    url: '/api/notification-messages/';
};

export type NotificationMessagesCreateResponses = {
    201: Notification;
};

export type NotificationMessagesCreateResponse = NotificationMessagesCreateResponses[keyof NotificationMessagesCreateResponses];

export type NotificationMessagesTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        is_overridden?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        path?: string;
        path_exact?: string;
    };
    url: '/api/notification-messages-templates/';
};

export type NotificationMessagesTemplatesListResponses = {
    200: Array<NotificationTemplateDetailSerializers>;
};

export type NotificationMessagesTemplatesListResponse = NotificationMessagesTemplatesListResponses[keyof NotificationMessagesTemplatesListResponses];

export type NotificationMessagesTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        is_overridden?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        path?: string;
        path_exact?: string;
    };
    url: '/api/notification-messages-templates/';
};

export type NotificationMessagesTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type NotificationMessagesTemplatesCreateData = {
    body: NotificationTemplateDetailSerializersRequest;
    path?: never;
    query?: never;
    url: '/api/notification-messages-templates/';
};

export type NotificationMessagesTemplatesCreateResponses = {
    201: NotificationTemplateDetailSerializers;
};

export type NotificationMessagesTemplatesCreateResponse = NotificationMessagesTemplatesCreateResponses[keyof NotificationMessagesTemplatesCreateResponses];

export type NotificationMessagesTemplatesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages-templates/{uuid}/';
};

export type NotificationMessagesTemplatesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type NotificationMessagesTemplatesDestroyResponse = NotificationMessagesTemplatesDestroyResponses[keyof NotificationMessagesTemplatesDestroyResponses];

export type NotificationMessagesTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages-templates/{uuid}/';
};

export type NotificationMessagesTemplatesRetrieveResponses = {
    200: NotificationTemplateDetailSerializers;
};

export type NotificationMessagesTemplatesRetrieveResponse = NotificationMessagesTemplatesRetrieveResponses[keyof NotificationMessagesTemplatesRetrieveResponses];

export type NotificationMessagesTemplatesPartialUpdateData = {
    body?: PatchedNotificationTemplateDetailSerializersRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages-templates/{uuid}/';
};

export type NotificationMessagesTemplatesPartialUpdateResponses = {
    200: NotificationTemplateDetailSerializers;
};

export type NotificationMessagesTemplatesPartialUpdateResponse = NotificationMessagesTemplatesPartialUpdateResponses[keyof NotificationMessagesTemplatesPartialUpdateResponses];

export type NotificationMessagesTemplatesUpdateData = {
    body: NotificationTemplateDetailSerializersRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages-templates/{uuid}/';
};

export type NotificationMessagesTemplatesUpdateResponses = {
    200: NotificationTemplateDetailSerializers;
};

export type NotificationMessagesTemplatesUpdateResponse = NotificationMessagesTemplatesUpdateResponses[keyof NotificationMessagesTemplatesUpdateResponses];

export type NotificationMessagesTemplatesOverrideData = {
    body: NotificationTemplateUpdateSerializersRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages-templates/{uuid}/override/';
};

export type NotificationMessagesTemplatesOverrideResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type NotificationMessagesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/';
};

export type NotificationMessagesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type NotificationMessagesDestroyResponse = NotificationMessagesDestroyResponses[keyof NotificationMessagesDestroyResponses];

export type NotificationMessagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/';
};

export type NotificationMessagesRetrieveResponses = {
    200: Notification;
};

export type NotificationMessagesRetrieveResponse = NotificationMessagesRetrieveResponses[keyof NotificationMessagesRetrieveResponses];

export type NotificationMessagesPartialUpdateData = {
    body?: PatchedNotificationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/';
};

export type NotificationMessagesPartialUpdateResponses = {
    200: Notification;
};

export type NotificationMessagesPartialUpdateResponse = NotificationMessagesPartialUpdateResponses[keyof NotificationMessagesPartialUpdateResponses];

export type NotificationMessagesUpdateData = {
    body: NotificationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/';
};

export type NotificationMessagesUpdateResponses = {
    200: Notification;
};

export type NotificationMessagesUpdateResponse = NotificationMessagesUpdateResponses[keyof NotificationMessagesUpdateResponses];

export type NotificationMessagesDisableData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/disable/';
};

export type NotificationMessagesDisableResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type NotificationMessagesEnableData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/notification-messages/{uuid}/enable/';
};

export type NotificationMessagesEnableResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackBackupsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'instance' | 'instance_floating_ips' | 'instance_marketplace_uuid' | 'instance_name' | 'instance_ports' | 'instance_security_groups' | 'is_limit_based' | 'is_usage_based' | 'kept_until' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'restorations' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant_uuid' | 'url' | 'uuid'>;
        instance?: string;
        instance_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-backups/';
};

export type OpenstackBackupsListResponses = {
    200: Array<OpenStackBackup>;
};

export type OpenstackBackupsListResponse = OpenstackBackupsListResponses[keyof OpenstackBackupsListResponses];

export type OpenstackBackupsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        instance?: string;
        instance_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-backups/';
};

export type OpenstackBackupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackBackupsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/';
};

export type OpenstackBackupsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackBackupsDestroyResponse = OpenstackBackupsDestroyResponses[keyof OpenstackBackupsDestroyResponses];

export type OpenstackBackupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'instance' | 'instance_floating_ips' | 'instance_marketplace_uuid' | 'instance_name' | 'instance_ports' | 'instance_security_groups' | 'is_limit_based' | 'is_usage_based' | 'kept_until' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'restorations' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-backups/{uuid}/';
};

export type OpenstackBackupsRetrieveResponses = {
    200: OpenStackBackup;
};

export type OpenstackBackupsRetrieveResponse = OpenstackBackupsRetrieveResponses[keyof OpenstackBackupsRetrieveResponses];

export type OpenstackBackupsPartialUpdateData = {
    body?: PatchedOpenStackBackupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/';
};

export type OpenstackBackupsPartialUpdateResponses = {
    200: OpenStackBackup;
};

export type OpenstackBackupsPartialUpdateResponse = OpenstackBackupsPartialUpdateResponses[keyof OpenstackBackupsPartialUpdateResponses];

export type OpenstackBackupsUpdateData = {
    body: OpenStackBackupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/';
};

export type OpenstackBackupsUpdateResponses = {
    200: OpenStackBackup;
};

export type OpenstackBackupsUpdateResponse = OpenstackBackupsUpdateResponses[keyof OpenstackBackupsUpdateResponses];

export type OpenstackBackupsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/pull/';
};

export type OpenstackBackupsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackBackupsRestoreData = {
    body: OpenStackBackupRestorationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/restore/';
};

export type OpenstackBackupsRestoreResponses = {
    200: OpenStackInstance;
};

export type OpenstackBackupsRestoreResponse = OpenstackBackupsRestoreResponses[keyof OpenstackBackupsRestoreResponses];

export type OpenstackBackupsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-backups/{uuid}/unlink/';
};

export type OpenstackBackupsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFlavorsListData = {
    body?: never;
    path?: never;
    query?: {
        cores?: number;
        cores__gte?: number;
        cores__lte?: number;
        disk?: number;
        disk__gte?: number;
        disk__lte?: number;
        field?: Array<'backend_id' | 'cores' | 'disk' | 'display_name' | 'name' | 'ram' | 'settings' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        name_iregex?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cores' | '-disk' | '-ram' | 'cores' | 'disk' | 'ram'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        ram?: number;
        ram__gte?: number;
        ram__lte?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-flavors/';
};

export type OpenstackFlavorsListResponses = {
    200: Array<OpenStackFlavor>;
};

export type OpenstackFlavorsListResponse = OpenstackFlavorsListResponses[keyof OpenstackFlavorsListResponses];

export type OpenstackFlavorsCountData = {
    body?: never;
    path?: never;
    query?: {
        cores?: number;
        cores__gte?: number;
        cores__lte?: number;
        disk?: number;
        disk__gte?: number;
        disk__lte?: number;
        name?: string;
        name_exact?: string;
        name_iregex?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cores' | '-disk' | '-ram' | 'cores' | 'disk' | 'ram'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        ram?: number;
        ram__gte?: number;
        ram__lte?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-flavors/';
};

export type OpenstackFlavorsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFlavorsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'cores' | 'disk' | 'display_name' | 'name' | 'ram' | 'settings' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-flavors/{uuid}/';
};

export type OpenstackFlavorsRetrieveResponses = {
    200: OpenStackFlavor;
};

export type OpenstackFlavorsRetrieveResponse = OpenstackFlavorsRetrieveResponses[keyof OpenstackFlavorsRetrieveResponses];

export type OpenstackFlavorsUsageStatsRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'backend_id' | 'cores' | 'disk' | 'display_name' | 'name' | 'ram' | 'settings' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-flavors/usage_stats/';
};

export type OpenstackFlavorsUsageStatsRetrieveResponses = {
    200: OpenStackFlavor;
};

export type OpenstackFlavorsUsageStatsRetrieveResponse = OpenstackFlavorsUsageStatsRetrieveResponses[keyof OpenstackFlavorsUsageStatsRetrieveResponses];

export type OpenstackFlavorsUsageStatsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openstack-flavors/usage_stats/';
};

export type OpenstackFlavorsUsageStatsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsListData = {
    body?: never;
    path?: never;
    query?: {
        address?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'address' | 'backend_id' | 'backend_network_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'external_address' | 'instance_name' | 'instance_url' | 'instance_uuid' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'port' | 'port_fixed_ips' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
        free?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-floating-ips/';
};

export type OpenstackFloatingIpsListResponses = {
    200: Array<OpenStackFloatingIp>;
};

export type OpenstackFloatingIpsListResponse = OpenstackFloatingIpsListResponses[keyof OpenstackFloatingIpsListResponses];

export type OpenstackFloatingIpsCountData = {
    body?: never;
    path?: never;
    query?: {
        address?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        free?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-floating-ips/';
};

export type OpenstackFloatingIpsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/';
};

export type OpenstackFloatingIpsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackFloatingIpsDestroyResponse = OpenstackFloatingIpsDestroyResponses[keyof OpenstackFloatingIpsDestroyResponses];

export type OpenstackFloatingIpsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'address' | 'backend_id' | 'backend_network_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'external_address' | 'instance_name' | 'instance_url' | 'instance_uuid' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'port' | 'port_fixed_ips' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-floating-ips/{uuid}/';
};

export type OpenstackFloatingIpsRetrieveResponses = {
    200: OpenStackFloatingIp;
};

export type OpenstackFloatingIpsRetrieveResponse = OpenstackFloatingIpsRetrieveResponses[keyof OpenstackFloatingIpsRetrieveResponses];

export type OpenstackFloatingIpsAttachToPortData = {
    body: OpenStackFloatingIpAttachRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/attach_to_port/';
};

export type OpenstackFloatingIpsAttachToPortResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsDetachFromPortData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/detach_from_port/';
};

export type OpenstackFloatingIpsDetachFromPortResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/pull/';
};

export type OpenstackFloatingIpsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/unlink/';
};

export type OpenstackFloatingIpsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackFloatingIpsUpdateDescriptionData = {
    body?: OpenStackFloatingIpDescriptionUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-floating-ips/{uuid}/update_description/';
};

export type OpenstackFloatingIpsUpdateDescriptionResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackImagesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-images/';
};

export type OpenstackImagesListResponses = {
    200: Array<OpenStackImage>;
};

export type OpenstackImagesListResponse = OpenstackImagesListResponses[keyof OpenstackImagesListResponses];

export type OpenstackImagesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-images/';
};

export type OpenstackImagesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackImagesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-images/{uuid}/';
};

export type OpenstackImagesRetrieveResponses = {
    200: OpenStackImage;
};

export type OpenstackImagesRetrieveResponse = OpenstackImagesRetrieveResponses[keyof OpenstackImagesRetrieveResponses];

export type OpenstackImagesUsageStatsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openstack-images/usage_stats/';
};

export type OpenstackImagesUsageStatsRetrieveResponses = {
    200: OpenStackImage;
};

export type OpenstackImagesUsageStatsRetrieveResponse = OpenstackImagesUsageStatsRetrieveResponses[keyof OpenstackImagesUsageStatsRetrieveResponses];

export type OpenstackImagesUsageStatsCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openstack-images/usage_stats/';
};

export type OpenstackImagesUsageStatsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstanceAvailabilityZonesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-instance-availability-zones/';
};

export type OpenstackInstanceAvailabilityZonesListResponses = {
    200: Array<OpenStackInstanceAvailabilityZone>;
};

export type OpenstackInstanceAvailabilityZonesListResponse = OpenstackInstanceAvailabilityZonesListResponses[keyof OpenstackInstanceAvailabilityZonesListResponses];

export type OpenstackInstanceAvailabilityZonesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-instance-availability-zones/';
};

export type OpenstackInstanceAvailabilityZonesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstanceAvailabilityZonesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instance-availability-zones/{uuid}/';
};

export type OpenstackInstanceAvailabilityZonesRetrieveResponses = {
    200: OpenStackInstanceAvailabilityZone;
};

export type OpenstackInstanceAvailabilityZonesRetrieveResponse = OpenstackInstanceAvailabilityZonesRetrieveResponses[keyof OpenstackInstanceAvailabilityZonesRetrieveResponses];

export type OpenstackInstancesListData = {
    body?: never;
    path?: never;
    query?: {
        attach_volume_uuid?: string;
        availability_zone_name?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'action' | 'action_details' | 'availability_zone' | 'availability_zone_name' | 'backend_id' | 'connect_directly_to_external_network' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'data_volume_size' | 'data_volume_type' | 'data_volumes' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_address' | 'external_ips' | 'flavor' | 'flavor_disk' | 'flavor_name' | 'floating_ips' | 'hypervisor_hostname' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'rancher_cluster' | 'resource_type' | 'runtime_state' | 'security_groups' | 'server_group' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'ssh_public_key' | 'start_time' | 'state' | 'system_volume_size' | 'system_volume_type' | 'tenant' | 'tenant_uuid' | 'url' | 'user_data' | 'uuid' | 'volumes'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * Search by name, internal IP, or external IP
         */
        query?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-instances/';
};

export type OpenstackInstancesListResponses = {
    200: Array<OpenStackInstance>;
};

export type OpenstackInstancesListResponse = OpenstackInstancesListResponses[keyof OpenstackInstancesListResponses];

export type OpenstackInstancesCountData = {
    body?: never;
    path?: never;
    query?: {
        attach_volume_uuid?: string;
        availability_zone_name?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * Search by name, internal IP, or external IP
         */
        query?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-instances/';
};

export type OpenstackInstancesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'action' | 'action_details' | 'availability_zone' | 'availability_zone_name' | 'backend_id' | 'connect_directly_to_external_network' | 'cores' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'data_volume_size' | 'data_volume_type' | 'data_volumes' | 'description' | 'disk' | 'error_message' | 'error_traceback' | 'external_address' | 'external_ips' | 'flavor' | 'flavor_disk' | 'flavor_name' | 'floating_ips' | 'hypervisor_hostname' | 'image' | 'image_name' | 'internal_ips' | 'is_limit_based' | 'is_usage_based' | 'key_fingerprint' | 'key_name' | 'latitude' | 'longitude' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'min_disk' | 'min_ram' | 'modified' | 'name' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'rancher_cluster' | 'resource_type' | 'runtime_state' | 'security_groups' | 'server_group' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'ssh_public_key' | 'start_time' | 'state' | 'system_volume_size' | 'system_volume_type' | 'tenant' | 'tenant_uuid' | 'url' | 'user_data' | 'uuid' | 'volumes'>;
    };
    url: '/api/openstack-instances/{uuid}/';
};

export type OpenstackInstancesRetrieveResponses = {
    200: OpenStackInstance;
};

export type OpenstackInstancesRetrieveResponse = OpenstackInstancesRetrieveResponses[keyof OpenstackInstancesRetrieveResponses];

export type OpenstackInstancesPartialUpdateData = {
    body?: PatchedOpenStackInstanceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/';
};

export type OpenstackInstancesPartialUpdateResponses = {
    200: OpenStackInstance;
};

export type OpenstackInstancesPartialUpdateResponse = OpenstackInstancesPartialUpdateResponses[keyof OpenstackInstancesPartialUpdateResponses];

export type OpenstackInstancesUpdateData = {
    body: OpenStackInstanceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/';
};

export type OpenstackInstancesUpdateResponses = {
    200: OpenStackInstance;
};

export type OpenstackInstancesUpdateResponse = OpenstackInstancesUpdateResponses[keyof OpenstackInstancesUpdateResponses];

export type OpenstackInstancesBackupData = {
    body: OpenStackBackupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/backup/';
};

export type OpenstackInstancesBackupResponses = {
    200: OpenStackBackup;
};

export type OpenstackInstancesBackupResponse = OpenstackInstancesBackupResponses[keyof OpenstackInstancesBackupResponses];

export type OpenstackInstancesChangeFlavorData = {
    body: InstanceFlavorChangeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/change_flavor/';
};

export type OpenstackInstancesChangeFlavorResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesConsoleRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/console/';
};

export type OpenstackInstancesConsoleRetrieveResponses = {
    200: ConsoleUrl;
};

export type OpenstackInstancesConsoleRetrieveResponse = OpenstackInstancesConsoleRetrieveResponses[keyof OpenstackInstancesConsoleRetrieveResponses];

export type OpenstackInstancesConsoleLogRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        length?: number;
    };
    url: '/api/openstack-instances/{uuid}/console_log/';
};

export type OpenstackInstancesConsoleLogRetrieveResponses = {
    200: string;
};

export type OpenstackInstancesConsoleLogRetrieveResponse = OpenstackInstancesConsoleLogRetrieveResponses[keyof OpenstackInstancesConsoleLogRetrieveResponses];

export type OpenstackInstancesFloatingIpsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/openstack-instances/{uuid}/floating_ips/';
};

export type OpenstackInstancesFloatingIpsListResponses = {
    200: Array<OpenStackNestedFloatingIp>;
};

export type OpenstackInstancesFloatingIpsListResponse = OpenstackInstancesFloatingIpsListResponses[keyof OpenstackInstancesFloatingIpsListResponses];

export type OpenstackInstancesPortsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/openstack-instances/{uuid}/ports/';
};

export type OpenstackInstancesPortsListResponses = {
    200: Array<OpenStackNestedPort>;
};

export type OpenstackInstancesPortsListResponse = OpenstackInstancesPortsListResponses[keyof OpenstackInstancesPortsListResponses];

export type OpenstackInstancesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/pull/';
};

export type OpenstackInstancesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesRestartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/restart/';
};

export type OpenstackInstancesRestartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesStartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/start/';
};

export type OpenstackInstancesStartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesStopData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/stop/';
};

export type OpenstackInstancesStopResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/unlink/';
};

export type OpenstackInstancesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesUpdateAllowedAddressPairsData = {
    body: OpenStackInstanceAllowedAddressPairsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/update_allowed_address_pairs/';
};

export type OpenstackInstancesUpdateAllowedAddressPairsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesUpdateFloatingIpsData = {
    body?: OpenStackInstanceFloatingIpsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/update_floating_ips/';
};

export type OpenstackInstancesUpdateFloatingIpsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesUpdatePortsData = {
    body: OpenStackInstancePortsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/update_ports/';
};

export type OpenstackInstancesUpdatePortsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackInstancesUpdateSecurityGroupsData = {
    body: OpenStackInstanceSecurityGroupsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-instances/{uuid}/update_security_groups/';
};

export type OpenstackInstancesUpdateSecurityGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackMarketplaceTenantsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-marketplace-tenants/';
};

export type OpenstackMarketplaceTenantsListResponses = {
    200: Array<Tenant>;
};

export type OpenstackMarketplaceTenantsListResponse = OpenstackMarketplaceTenantsListResponses[keyof OpenstackMarketplaceTenantsListResponses];

export type OpenstackMarketplaceTenantsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-marketplace-tenants/';
};

export type OpenstackMarketplaceTenantsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackMarketplaceTenantsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-marketplace-tenants/{uuid}/';
};

export type OpenstackMarketplaceTenantsRetrieveResponses = {
    200: Tenant;
};

export type OpenstackMarketplaceTenantsRetrieveResponse = OpenstackMarketplaceTenantsRetrieveResponses[keyof OpenstackMarketplaceTenantsRetrieveResponses];

export type OpenstackMarketplaceTenantsCreateImageData = {
    body: ImageCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-marketplace-tenants/{uuid}/create_image/';
};

export type OpenstackMarketplaceTenantsCreateImageResponses = {
    201: ImageCreateResponse;
};

export type OpenstackMarketplaceTenantsCreateImageResponse = OpenstackMarketplaceTenantsCreateImageResponses[keyof OpenstackMarketplaceTenantsCreateImageResponses];

export type OpenstackMarketplaceTenantsUploadImageDataData = {
    body?: Blob | File;
    path: {
        image_id: string;
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-marketplace-tenants/{uuid}/upload_image_data/{image_id}/';
};

export type OpenstackMarketplaceTenantsUploadImageDataResponses = {
    200: ImageUploadResponse;
};

export type OpenstackMarketplaceTenantsUploadImageDataResponse = OpenstackMarketplaceTenantsUploadImageDataResponses[keyof OpenstackMarketplaceTenantsUploadImageDataResponses];

export type OpenstackMigrationsListData = {
    body?: never;
    path?: never;
    query?: {
        dst_resource_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        src_resource_uuid?: string;
    };
    url: '/api/openstack-migrations/';
};

export type OpenstackMigrationsListResponses = {
    200: Array<MigrationDetails>;
};

export type OpenstackMigrationsListResponse = OpenstackMigrationsListResponses[keyof OpenstackMigrationsListResponses];

export type OpenstackMigrationsCountData = {
    body?: never;
    path?: never;
    query?: {
        dst_resource_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        src_resource_uuid?: string;
    };
    url: '/api/openstack-migrations/';
};

export type OpenstackMigrationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackMigrationsCreateData = {
    body: MigrationCreateRequest;
    path?: never;
    query?: never;
    url: '/api/openstack-migrations/';
};

export type OpenstackMigrationsCreateResponses = {
    201: MigrationCreate;
};

export type OpenstackMigrationsCreateResponse = OpenstackMigrationsCreateResponses[keyof OpenstackMigrationsCreateResponses];

export type OpenstackMigrationsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-migrations/{uuid}/';
};

export type OpenstackMigrationsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackMigrationsDestroyResponse = OpenstackMigrationsDestroyResponses[keyof OpenstackMigrationsDestroyResponses];

export type OpenstackMigrationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-migrations/{uuid}/';
};

export type OpenstackMigrationsRetrieveResponses = {
    200: MigrationDetails;
};

export type OpenstackMigrationsRetrieveResponse = OpenstackMigrationsRetrieveResponses[keyof OpenstackMigrationsRetrieveResponses];

export type OpenstackMigrationsPartialUpdateData = {
    body?: PatchedMigrationDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-migrations/{uuid}/';
};

export type OpenstackMigrationsPartialUpdateResponses = {
    200: MigrationDetails;
};

export type OpenstackMigrationsPartialUpdateResponse = OpenstackMigrationsPartialUpdateResponses[keyof OpenstackMigrationsPartialUpdateResponses];

export type OpenstackMigrationsUpdateData = {
    body: MigrationDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-migrations/{uuid}/';
};

export type OpenstackMigrationsUpdateResponses = {
    200: MigrationDetails;
};

export type OpenstackMigrationsUpdateResponse = OpenstackMigrationsUpdateResponses[keyof OpenstackMigrationsUpdateResponses];

export type OpenstackNetworkRbacPoliciesListData = {
    body?: never;
    path?: never;
    query?: {
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Type of access granted - either shared access or external network access
         *
         *
         */
        policy_type?: 'access_as_external' | 'access_as_shared';
        target_tenant?: string;
        target_tenant_uuid?: string;
    };
    url: '/api/openstack-network-rbac-policies/';
};

export type OpenstackNetworkRbacPoliciesListResponses = {
    200: Array<NetworkRbacPolicy>;
};

export type OpenstackNetworkRbacPoliciesListResponse = OpenstackNetworkRbacPoliciesListResponses[keyof OpenstackNetworkRbacPoliciesListResponses];

export type OpenstackNetworkRbacPoliciesCountData = {
    body?: never;
    path?: never;
    query?: {
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Type of access granted - either shared access or external network access
         *
         *
         */
        policy_type?: 'access_as_external' | 'access_as_shared';
        target_tenant?: string;
        target_tenant_uuid?: string;
    };
    url: '/api/openstack-network-rbac-policies/';
};

export type OpenstackNetworkRbacPoliciesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackNetworkRbacPoliciesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-network-rbac-policies/{uuid}/';
};

export type OpenstackNetworkRbacPoliciesRetrieveResponses = {
    200: NetworkRbacPolicy;
};

export type OpenstackNetworkRbacPoliciesRetrieveResponse = OpenstackNetworkRbacPoliciesRetrieveResponses[keyof OpenstackNetworkRbacPoliciesRetrieveResponses];

export type OpenstackNetworksListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Direct only
         */
        direct_only?: boolean;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_external' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'mtu' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'rbac_policies' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'subnets' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'type' | 'url' | 'uuid'>;
        is_external?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * RBAC only
         */
        rbac_only?: boolean;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        /**
         * Tenant URL
         */
        tenant?: string;
        /**
         * Tenant UUID
         */
        tenant_uuid?: string;
        type?: string;
        uuid?: string;
    };
    url: '/api/openstack-networks/';
};

export type OpenstackNetworksListResponses = {
    200: Array<OpenStackNetwork>;
};

export type OpenstackNetworksListResponse = OpenstackNetworksListResponses[keyof OpenstackNetworksListResponses];

export type OpenstackNetworksCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Direct only
         */
        direct_only?: boolean;
        external_ip?: string;
        is_external?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * RBAC only
         */
        rbac_only?: boolean;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        /**
         * Tenant URL
         */
        tenant?: string;
        /**
         * Tenant UUID
         */
        tenant_uuid?: string;
        type?: string;
        uuid?: string;
    };
    url: '/api/openstack-networks/';
};

export type OpenstackNetworksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackNetworksDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/';
};

export type OpenstackNetworksDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackNetworksDestroyResponse = OpenstackNetworksDestroyResponses[keyof OpenstackNetworksDestroyResponses];

export type OpenstackNetworksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_external' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'mtu' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'rbac_policies' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'subnets' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'type' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-networks/{uuid}/';
};

export type OpenstackNetworksRetrieveResponses = {
    200: OpenStackNetwork;
};

export type OpenstackNetworksRetrieveResponse = OpenstackNetworksRetrieveResponses[keyof OpenstackNetworksRetrieveResponses];

export type OpenstackNetworksPartialUpdateData = {
    body?: PatchedOpenStackNetworkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/';
};

export type OpenstackNetworksPartialUpdateResponses = {
    200: OpenStackNetwork;
};

export type OpenstackNetworksPartialUpdateResponse = OpenstackNetworksPartialUpdateResponses[keyof OpenstackNetworksPartialUpdateResponses];

export type OpenstackNetworksUpdateData = {
    body: OpenStackNetworkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/';
};

export type OpenstackNetworksUpdateResponses = {
    200: OpenStackNetwork;
};

export type OpenstackNetworksUpdateResponse = OpenstackNetworksUpdateResponses[keyof OpenstackNetworksUpdateResponses];

export type OpenstackNetworksCreateSubnetData = {
    body: OpenStackSubNetRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/create_subnet/';
};

export type OpenstackNetworksCreateSubnetResponses = {
    200: OpenStackSubNet;
};

export type OpenstackNetworksCreateSubnetResponse = OpenstackNetworksCreateSubnetResponses[keyof OpenstackNetworksCreateSubnetResponses];

export type OpenstackNetworksPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/pull/';
};

export type OpenstackNetworksPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackNetworksRbacPolicyCreateData = {
    body: NetworkRbacPolicyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/rbac_policy_create/';
};

export type OpenstackNetworksRbacPolicyCreateResponses = {
    200: NetworkRbacPolicy;
};

export type OpenstackNetworksRbacPolicyCreateResponse = OpenstackNetworksRbacPolicyCreateResponses[keyof OpenstackNetworksRbacPolicyCreateResponses];

export type OpenstackNetworksRbacPolicyDeleteDestroyData = {
    body?: never;
    path: {
        /**
         * UUID of the RBAC policy to delete
         */
        rbac_policy_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/rbac_policy_delete/{rbac_policy_uuid}/';
};

export type OpenstackNetworksRbacPolicyDeleteDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackNetworksRbacPolicyDeleteDestroyResponse = OpenstackNetworksRbacPolicyDeleteDestroyResponses[keyof OpenstackNetworksRbacPolicyDeleteDestroyResponses];

export type OpenstackNetworksSetMtuData = {
    body: SetMtuRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/set_mtu/';
};

export type OpenstackNetworksSetMtuResponses = {
    200: SetMtu;
};

export type OpenstackNetworksSetMtuResponse = OpenstackNetworksSetMtuResponses[keyof OpenstackNetworksSetMtuResponses];

export type OpenstackNetworksUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-networks/{uuid}/unlink/';
};

export type OpenstackNetworksUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsListData = {
    body?: never;
    path?: never;
    query?: {
        admin_state_up?: boolean;
        backend_id?: string;
        device_id?: string;
        device_owner?: string;
        /**
         * Exclude Subnet UUIDs (comma-separated)
         */
        exclude_subnet_uuids?: string;
        field?: Array<'access_url' | 'admin_state_up' | 'allowed_address_pairs' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device_id' | 'device_owner' | 'error_message' | 'error_traceback' | 'fixed_ips' | 'floating_ips' | 'is_limit_based' | 'is_usage_based' | 'mac_address' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'network_uuid' | 'port_security_enabled' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'security_groups' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'status' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
        /**
         * Has device owner
         */
        has_device_owner?: boolean;
        mac_address?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-network_name' | 'network_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Search by name, MAC address or backend ID
         */
        query?: string;
        status?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-ports/';
};

export type OpenstackPortsListResponses = {
    200: Array<OpenStackPort>;
};

export type OpenstackPortsListResponse = OpenstackPortsListResponses[keyof OpenstackPortsListResponses];

export type OpenstackPortsCountData = {
    body?: never;
    path?: never;
    query?: {
        admin_state_up?: boolean;
        backend_id?: string;
        device_id?: string;
        device_owner?: string;
        /**
         * Exclude Subnet UUIDs (comma-separated)
         */
        exclude_subnet_uuids?: string;
        /**
         * Has device owner
         */
        has_device_owner?: boolean;
        mac_address?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-network_name' | 'network_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Search by name, MAC address or backend ID
         */
        query?: string;
        status?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-ports/';
};

export type OpenstackPortsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsCreateData = {
    body: OpenStackPortRequest;
    path?: never;
    query?: never;
    url: '/api/openstack-ports/';
};

export type OpenstackPortsCreateResponses = {
    201: OpenStackPort;
};

export type OpenstackPortsCreateResponse = OpenstackPortsCreateResponses[keyof OpenstackPortsCreateResponses];

export type OpenstackPortsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/';
};

export type OpenstackPortsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackPortsDestroyResponse = OpenstackPortsDestroyResponses[keyof OpenstackPortsDestroyResponses];

export type OpenstackPortsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'admin_state_up' | 'allowed_address_pairs' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device_id' | 'device_owner' | 'error_message' | 'error_traceback' | 'fixed_ips' | 'floating_ips' | 'is_limit_based' | 'is_usage_based' | 'mac_address' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'network_uuid' | 'port_security_enabled' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'security_groups' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'status' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-ports/{uuid}/';
};

export type OpenstackPortsRetrieveResponses = {
    200: OpenStackPort;
};

export type OpenstackPortsRetrieveResponse = OpenstackPortsRetrieveResponses[keyof OpenstackPortsRetrieveResponses];

export type OpenstackPortsPartialUpdateData = {
    body?: PatchedOpenStackPortRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/';
};

export type OpenstackPortsPartialUpdateResponses = {
    200: OpenStackPort;
};

export type OpenstackPortsPartialUpdateResponse = OpenstackPortsPartialUpdateResponses[keyof OpenstackPortsPartialUpdateResponses];

export type OpenstackPortsUpdateData = {
    body: OpenStackPortRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/';
};

export type OpenstackPortsUpdateResponses = {
    200: OpenStackPort;
};

export type OpenstackPortsUpdateResponse = OpenstackPortsUpdateResponses[keyof OpenstackPortsUpdateResponses];

export type OpenstackPortsDisablePortData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/disable_port/';
};

export type OpenstackPortsDisablePortResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsDisablePortSecurityData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/disable_port_security/';
};

export type OpenstackPortsDisablePortSecurityResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsEnablePortData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/enable_port/';
};

export type OpenstackPortsEnablePortResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsEnablePortSecurityData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/enable_port_security/';
};

export type OpenstackPortsEnablePortSecurityResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/pull/';
};

export type OpenstackPortsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/unlink/';
};

export type OpenstackPortsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsUpdatePortIpData = {
    body: OpenStackPortIpUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/update_port_ip/';
};

export type OpenstackPortsUpdatePortIpResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackPortsUpdateSecurityGroupsData = {
    body: OpenStackInstanceSecurityGroupsUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-ports/{uuid}/update_security_groups/';
};

export type OpenstackPortsUpdateSecurityGroupsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackRoutersListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'fixed_ips' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'offering_external_ips' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'routes' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-routers/';
};

export type OpenstackRoutersListResponses = {
    200: Array<OpenStackRouter>;
};

export type OpenstackRoutersListResponse = OpenstackRoutersListResponses[keyof OpenstackRoutersListResponses];

export type OpenstackRoutersCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-routers/';
};

export type OpenstackRoutersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackRoutersCreateData = {
    body: CreateRouterRequest;
    path?: never;
    query?: never;
    url: '/api/openstack-routers/';
};

export type OpenstackRoutersCreateResponses = {
    201: CreateRouter;
};

export type OpenstackRoutersCreateResponse = OpenstackRoutersCreateResponses[keyof OpenstackRoutersCreateResponses];

export type OpenstackRoutersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-routers/{uuid}/';
};

export type OpenstackRoutersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackRoutersDestroyResponse = OpenstackRoutersDestroyResponses[keyof OpenstackRoutersDestroyResponses];

export type OpenstackRoutersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'fixed_ips' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'offering_external_ips' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'routes' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-routers/{uuid}/';
};

export type OpenstackRoutersRetrieveResponses = {
    200: OpenStackRouter;
};

export type OpenstackRoutersRetrieveResponse = OpenstackRoutersRetrieveResponses[keyof OpenstackRoutersRetrieveResponses];

export type OpenstackRoutersAddRouterInterfaceData = {
    body?: OpenStackRouterInterfaceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-routers/{uuid}/add_router_interface/';
};

export type OpenstackRoutersAddRouterInterfaceResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackRoutersRemoveRouterInterfaceData = {
    body?: OpenStackRouterInterfaceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-routers/{uuid}/remove_router_interface/';
};

export type OpenstackRoutersRemoveRouterInterfaceResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackRoutersSetRoutesData = {
    body: OpenStackRouterSetRoutesRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-routers/{uuid}/set_routes/';
};

export type OpenstackRoutersSetRoutesResponses = {
    200: OpenStackRouterSetRoutes;
};

export type OpenstackRoutersSetRoutesResponse = OpenstackRoutersSetRoutesResponses[keyof OpenstackRoutersSetRoutesResponses];

export type OpenstackSecurityGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'rules' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * Search by name or description
         */
        query?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-security-groups/';
};

export type OpenstackSecurityGroupsListResponses = {
    200: Array<OpenStackSecurityGroup>;
};

export type OpenstackSecurityGroupsListResponse = OpenstackSecurityGroupsListResponses[keyof OpenstackSecurityGroupsListResponses];

export type OpenstackSecurityGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * Search by name or description
         */
        query?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-security-groups/';
};

export type OpenstackSecurityGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSecurityGroupsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/';
};

export type OpenstackSecurityGroupsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackSecurityGroupsDestroyResponse = OpenstackSecurityGroupsDestroyResponses[keyof OpenstackSecurityGroupsDestroyResponses];

export type OpenstackSecurityGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'rules' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-security-groups/{uuid}/';
};

export type OpenstackSecurityGroupsRetrieveResponses = {
    200: OpenStackSecurityGroup;
};

export type OpenstackSecurityGroupsRetrieveResponse = OpenstackSecurityGroupsRetrieveResponses[keyof OpenstackSecurityGroupsRetrieveResponses];

export type OpenstackSecurityGroupsPartialUpdateData = {
    body?: PatchedOpenStackSecurityGroupUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/';
};

export type OpenstackSecurityGroupsPartialUpdateResponses = {
    200: OpenStackSecurityGroupUpdate;
};

export type OpenstackSecurityGroupsPartialUpdateResponse = OpenstackSecurityGroupsPartialUpdateResponses[keyof OpenstackSecurityGroupsPartialUpdateResponses];

export type OpenstackSecurityGroupsUpdateData = {
    body: OpenStackSecurityGroupUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/';
};

export type OpenstackSecurityGroupsUpdateResponses = {
    200: OpenStackSecurityGroupUpdate;
};

export type OpenstackSecurityGroupsUpdateResponse = OpenstackSecurityGroupsUpdateResponses[keyof OpenstackSecurityGroupsUpdateResponses];

export type OpenstackSecurityGroupsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/pull/';
};

export type OpenstackSecurityGroupsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSecurityGroupsSetRulesData = {
    body: Array<OpenStackSecurityGroupRuleUpdateRequest>;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/set_rules/';
};

export type OpenstackSecurityGroupsSetRulesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSecurityGroupsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-security-groups/{uuid}/unlink/';
};

export type OpenstackSecurityGroupsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackServerGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'display_name' | 'error_message' | 'error_traceback' | 'instances' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'policy' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-server-groups/';
};

export type OpenstackServerGroupsListResponses = {
    200: Array<OpenStackServerGroup>;
};

export type OpenstackServerGroupsListResponse = OpenstackServerGroupsListResponses[keyof OpenstackServerGroupsListResponses];

export type OpenstackServerGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-server-groups/';
};

export type OpenstackServerGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackServerGroupsCreateData = {
    body: OpenStackServerGroupRequest;
    path?: never;
    query?: never;
    url: '/api/openstack-server-groups/';
};

export type OpenstackServerGroupsCreateResponses = {
    201: OpenStackServerGroup;
};

export type OpenstackServerGroupsCreateResponse = OpenstackServerGroupsCreateResponses[keyof OpenstackServerGroupsCreateResponses];

export type OpenstackServerGroupsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-server-groups/{uuid}/';
};

export type OpenstackServerGroupsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackServerGroupsDestroyResponse = OpenstackServerGroupsDestroyResponses[keyof OpenstackServerGroupsDestroyResponses];

export type OpenstackServerGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'display_name' | 'error_message' | 'error_traceback' | 'instances' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'policy' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'tenant_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-server-groups/{uuid}/';
};

export type OpenstackServerGroupsRetrieveResponses = {
    200: OpenStackServerGroup;
};

export type OpenstackServerGroupsRetrieveResponse = OpenstackServerGroupsRetrieveResponses[keyof OpenstackServerGroupsRetrieveResponses];

export type OpenstackServerGroupsPartialUpdateData = {
    body?: PatchedOpenStackServerGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-server-groups/{uuid}/';
};

export type OpenstackServerGroupsPartialUpdateResponses = {
    200: OpenStackServerGroup;
};

export type OpenstackServerGroupsPartialUpdateResponse = OpenstackServerGroupsPartialUpdateResponses[keyof OpenstackServerGroupsPartialUpdateResponses];

export type OpenstackServerGroupsUpdateData = {
    body: OpenStackServerGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-server-groups/{uuid}/';
};

export type OpenstackServerGroupsUpdateResponses = {
    200: OpenStackServerGroup;
};

export type OpenstackServerGroupsUpdateResponse = OpenstackServerGroupsUpdateResponses[keyof OpenstackServerGroupsUpdateResponses];

export type OpenstackServerGroupsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-server-groups/{uuid}/pull/';
};

export type OpenstackServerGroupsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackServerGroupsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-server-groups/{uuid}/unlink/';
};

export type OpenstackServerGroupsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSnapshotsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        backup?: string;
        backup_uuid?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'action' | 'action_details' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'kept_until' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'restorations' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'source_volume' | 'source_volume_marketplace_uuid' | 'source_volume_name' | 'state' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        source_volume?: string;
        source_volume_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-snapshots/';
};

export type OpenstackSnapshotsListResponses = {
    200: Array<OpenStackSnapshot>;
};

export type OpenstackSnapshotsListResponse = OpenstackSnapshotsListResponses[keyof OpenstackSnapshotsListResponses];

export type OpenstackSnapshotsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        backup?: string;
        backup_uuid?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        source_volume?: string;
        source_volume_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-snapshots/';
};

export type OpenstackSnapshotsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSnapshotsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/';
};

export type OpenstackSnapshotsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackSnapshotsDestroyResponse = OpenstackSnapshotsDestroyResponses[keyof OpenstackSnapshotsDestroyResponses];

export type OpenstackSnapshotsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'action' | 'action_details' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'kept_until' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'restorations' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'source_volume' | 'source_volume_marketplace_uuid' | 'source_volume_name' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-snapshots/{uuid}/';
};

export type OpenstackSnapshotsRetrieveResponses = {
    200: OpenStackSnapshot;
};

export type OpenstackSnapshotsRetrieveResponse = OpenstackSnapshotsRetrieveResponses[keyof OpenstackSnapshotsRetrieveResponses];

export type OpenstackSnapshotsPartialUpdateData = {
    body?: PatchedOpenStackSnapshotRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/';
};

export type OpenstackSnapshotsPartialUpdateResponses = {
    200: OpenStackSnapshot;
};

export type OpenstackSnapshotsPartialUpdateResponse = OpenstackSnapshotsPartialUpdateResponses[keyof OpenstackSnapshotsPartialUpdateResponses];

export type OpenstackSnapshotsUpdateData = {
    body: OpenStackSnapshotRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/';
};

export type OpenstackSnapshotsUpdateResponses = {
    200: OpenStackSnapshot;
};

export type OpenstackSnapshotsUpdateResponse = OpenstackSnapshotsUpdateResponses[keyof OpenstackSnapshotsUpdateResponses];

export type OpenstackSnapshotsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/pull/';
};

export type OpenstackSnapshotsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSnapshotsRestorationsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/openstack-snapshots/{uuid}/restorations/';
};

export type OpenstackSnapshotsRestorationsListResponses = {
    200: Array<OpenStackSnapshotRestoration>;
};

export type OpenstackSnapshotsRestorationsListResponse = OpenstackSnapshotsRestorationsListResponses[keyof OpenstackSnapshotsRestorationsListResponses];

export type OpenstackSnapshotsRestoreData = {
    body: OpenStackSnapshotRestorationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/restore/';
};

export type OpenstackSnapshotsRestoreResponses = {
    200: OpenStackVolume;
};

export type OpenstackSnapshotsRestoreResponse = OpenstackSnapshotsRestoreResponses[keyof OpenstackSnapshotsRestoreResponses];

export type OpenstackSnapshotsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-snapshots/{uuid}/unlink/';
};

export type OpenstackSnapshotsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSubnetsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Direct only
         */
        direct_only?: boolean;
        enable_dhcp?: boolean;
        external_ip?: string;
        field?: Array<'access_url' | 'allocation_pools' | 'backend_id' | 'cidr' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disable_gateway' | 'dns_nameservers' | 'enable_dhcp' | 'error_message' | 'error_traceback' | 'gateway_ip' | 'host_routes' | 'ip_version' | 'is_connected' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'url' | 'uuid'>;
        ip_version?: number;
        name?: string;
        name_exact?: string;
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * RBAC only
         */
        rbac_only?: boolean;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        /**
         * Tenant URL
         */
        tenant?: string;
        /**
         * Tenant UUID
         */
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-subnets/';
};

export type OpenstackSubnetsListResponses = {
    200: Array<OpenStackSubNet>;
};

export type OpenstackSubnetsListResponse = OpenstackSubnetsListResponses[keyof OpenstackSubnetsListResponses];

export type OpenstackSubnetsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        /**
         * Direct only
         */
        direct_only?: boolean;
        enable_dhcp?: boolean;
        external_ip?: string;
        ip_version?: number;
        name?: string;
        name_exact?: string;
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        /**
         * RBAC only
         */
        rbac_only?: boolean;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        /**
         * Tenant URL
         */
        tenant?: string;
        /**
         * Tenant UUID
         */
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-subnets/';
};

export type OpenstackSubnetsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSubnetsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/';
};

export type OpenstackSubnetsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackSubnetsDestroyResponse = OpenstackSubnetsDestroyResponses[keyof OpenstackSubnetsDestroyResponses];

export type OpenstackSubnetsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'allocation_pools' | 'backend_id' | 'cidr' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'disable_gateway' | 'dns_nameservers' | 'enable_dhcp' | 'error_message' | 'error_traceback' | 'gateway_ip' | 'host_routes' | 'ip_version' | 'is_connected' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'tenant' | 'tenant_name' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-subnets/{uuid}/';
};

export type OpenstackSubnetsRetrieveResponses = {
    200: OpenStackSubNet;
};

export type OpenstackSubnetsRetrieveResponse = OpenstackSubnetsRetrieveResponses[keyof OpenstackSubnetsRetrieveResponses];

export type OpenstackSubnetsPartialUpdateData = {
    body?: PatchedOpenStackSubNetRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/';
};

export type OpenstackSubnetsPartialUpdateResponses = {
    200: OpenStackSubNet;
};

export type OpenstackSubnetsPartialUpdateResponse = OpenstackSubnetsPartialUpdateResponses[keyof OpenstackSubnetsPartialUpdateResponses];

export type OpenstackSubnetsUpdateData = {
    body: OpenStackSubNetRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/';
};

export type OpenstackSubnetsUpdateResponses = {
    200: OpenStackSubNet;
};

export type OpenstackSubnetsUpdateResponse = OpenstackSubnetsUpdateResponses[keyof OpenstackSubnetsUpdateResponses];

export type OpenstackSubnetsConnectData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/connect/';
};

export type OpenstackSubnetsConnectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSubnetsDisconnectData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/disconnect/';
};

export type OpenstackSubnetsDisconnectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSubnetsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/pull/';
};

export type OpenstackSubnetsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackSubnetsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-subnets/{uuid}/unlink/';
};

export type OpenstackSubnetsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackTenantsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'availability_zone' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'default_volume_type_name' | 'description' | 'error_message' | 'error_traceback' | 'external_network_id' | 'internal_network_id' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'subnet_cidr' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-tenants/';
};

export type OpenstackTenantsListResponses = {
    200: Array<OpenStackTenant>;
};

export type OpenstackTenantsListResponse = OpenstackTenantsListResponses[keyof OpenstackTenantsListResponses];

export type OpenstackTenantsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-tenants/';
};

export type OpenstackTenantsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackTenantsCreateData = {
    body: OpenStackTenantRequest;
    path?: never;
    query?: never;
    url: '/api/openstack-tenants/';
};

export type OpenstackTenantsCreateResponses = {
    201: OpenStackTenant;
};

export type OpenstackTenantsCreateResponse = OpenstackTenantsCreateResponses[keyof OpenstackTenantsCreateResponses];

export type OpenstackTenantsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/';
};

export type OpenstackTenantsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OpenstackTenantsDestroyResponse = OpenstackTenantsDestroyResponses[keyof OpenstackTenantsDestroyResponses];

export type OpenstackTenantsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'availability_zone' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'default_volume_type_name' | 'description' | 'error_message' | 'error_traceback' | 'external_network_id' | 'internal_network_id' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'quotas' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'subnet_cidr' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-tenants/{uuid}/';
};

export type OpenstackTenantsRetrieveResponses = {
    200: OpenStackTenant;
};

export type OpenstackTenantsRetrieveResponse = OpenstackTenantsRetrieveResponses[keyof OpenstackTenantsRetrieveResponses];

export type OpenstackTenantsPartialUpdateData = {
    body?: PatchedOpenStackTenantRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/';
};

export type OpenstackTenantsPartialUpdateResponses = {
    200: OpenStackTenant;
};

export type OpenstackTenantsPartialUpdateResponse = OpenstackTenantsPartialUpdateResponses[keyof OpenstackTenantsPartialUpdateResponses];

export type OpenstackTenantsUpdateData = {
    body: OpenStackTenantRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/';
};

export type OpenstackTenantsUpdateResponses = {
    200: OpenStackTenant;
};

export type OpenstackTenantsUpdateResponse = OpenstackTenantsUpdateResponses[keyof OpenstackTenantsUpdateResponses];

export type OpenstackTenantsBackendInstancesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-tenants/{uuid}/backend_instances/';
};

export type OpenstackTenantsBackendInstancesListResponses = {
    200: Array<OpenStackBackendInstance>;
};

export type OpenstackTenantsBackendInstancesListResponse = OpenstackTenantsBackendInstancesListResponses[keyof OpenstackTenantsBackendInstancesListResponses];

export type OpenstackTenantsBackendVolumesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/openstack-tenants/{uuid}/backend_volumes/';
};

export type OpenstackTenantsBackendVolumesListResponses = {
    200: Array<OpenStackBackendVolumes>;
};

export type OpenstackTenantsBackendVolumesListResponse = OpenstackTenantsBackendVolumesListResponses[keyof OpenstackTenantsBackendVolumesListResponses];

export type OpenstackTenantsChangePasswordData = {
    body: OpenStackTenantChangePasswordRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/change_password/';
};

export type OpenstackTenantsChangePasswordResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackTenantsCreateFloatingIpData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/create_floating_ip/';
};

export type OpenstackTenantsCreateFloatingIpResponses = {
    200: OpenStackFloatingIp;
};

export type OpenstackTenantsCreateFloatingIpResponse = OpenstackTenantsCreateFloatingIpResponses[keyof OpenstackTenantsCreateFloatingIpResponses];

export type OpenstackTenantsCreateNetworkData = {
    body: OpenStackNetworkRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/create_network/';
};

export type OpenstackTenantsCreateNetworkResponses = {
    200: OpenStackNetwork;
};

export type OpenstackTenantsCreateNetworkResponse = OpenstackTenantsCreateNetworkResponses[keyof OpenstackTenantsCreateNetworkResponses];

export type OpenstackTenantsCreateSecurityGroupData = {
    body: OpenStackSecurityGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/create_security_group/';
};

export type OpenstackTenantsCreateSecurityGroupResponses = {
    201: OpenStackSecurityGroup;
};

export type OpenstackTenantsCreateSecurityGroupResponse = OpenstackTenantsCreateSecurityGroupResponses[keyof OpenstackTenantsCreateSecurityGroupResponses];

export type OpenstackTenantsCreateServerGroupData = {
    body: OpenStackServerGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/create_server_group/';
};

export type OpenstackTenantsCreateServerGroupResponses = {
    200: OpenStackServerGroup;
};

export type OpenstackTenantsCreateServerGroupResponse = OpenstackTenantsCreateServerGroupResponses[keyof OpenstackTenantsCreateServerGroupResponses];

export type OpenstackTenantsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/pull/';
};

export type OpenstackTenantsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackTenantsPullFloatingIpsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/pull_floating_ips/';
};

export type OpenstackTenantsPullFloatingIpsResponses = {
    /**
     * No response body
     */
    202: unknown;
};

export type OpenstackTenantsPullQuotasData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/pull_quotas/';
};

export type OpenstackTenantsPullQuotasResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackTenantsPullSecurityGroupsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/pull_security_groups/';
};

export type OpenstackTenantsPullSecurityGroupsResponses = {
    200: OpenStackTenant;
};

export type OpenstackTenantsPullSecurityGroupsResponse = OpenstackTenantsPullSecurityGroupsResponses[keyof OpenstackTenantsPullSecurityGroupsResponses];

export type OpenstackTenantsPullServerGroupsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/pull_server_groups/';
};

export type OpenstackTenantsPullServerGroupsResponses = {
    200: OpenStackTenant;
};

export type OpenstackTenantsPullServerGroupsResponse = OpenstackTenantsPullServerGroupsResponses[keyof OpenstackTenantsPullServerGroupsResponses];

export type OpenstackTenantsSetQuotasData = {
    body?: OpenStackTenantQuotaRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/set_quotas/';
};

export type OpenstackTenantsSetQuotasResponses = {
    200: OpenStackTenantQuota;
};

export type OpenstackTenantsSetQuotasResponse = OpenstackTenantsSetQuotasResponses[keyof OpenstackTenantsSetQuotasResponses];

export type OpenstackTenantsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-tenants/{uuid}/unlink/';
};

export type OpenstackTenantsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumeAvailabilityZonesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-volume-availability-zones/';
};

export type OpenstackVolumeAvailabilityZonesListResponses = {
    200: Array<OpenStackVolumeAvailabilityZone>;
};

export type OpenstackVolumeAvailabilityZonesListResponse = OpenstackVolumeAvailabilityZonesListResponses[keyof OpenstackVolumeAvailabilityZonesListResponses];

export type OpenstackVolumeAvailabilityZonesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-volume-availability-zones/';
};

export type OpenstackVolumeAvailabilityZonesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumeAvailabilityZonesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volume-availability-zones/{uuid}/';
};

export type OpenstackVolumeAvailabilityZonesRetrieveResponses = {
    200: OpenStackVolumeAvailabilityZone;
};

export type OpenstackVolumeAvailabilityZonesRetrieveResponse = OpenstackVolumeAvailabilityZonesRetrieveResponses[keyof OpenstackVolumeAvailabilityZonesRetrieveResponses];

export type OpenstackVolumeTypesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-volume-types/';
};

export type OpenstackVolumeTypesListResponses = {
    200: Array<OpenStackVolumeType>;
};

export type OpenstackVolumeTypesListResponse = OpenstackVolumeTypesListResponses[keyof OpenstackVolumeTypesListResponses];

export type OpenstackVolumeTypesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
        tenant?: string;
        tenant_uuid?: string;
    };
    url: '/api/openstack-volume-types/';
};

export type OpenstackVolumeTypesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumeTypesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volume-types/{uuid}/';
};

export type OpenstackVolumeTypesRetrieveResponses = {
    200: OpenStackVolumeType;
};

export type OpenstackVolumeTypesRetrieveResponse = OpenstackVolumeTypesRetrieveResponses[keyof OpenstackVolumeTypesRetrieveResponses];

export type OpenstackVolumeTypesNamesRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openstack-volume-types/names/';
};

export type OpenstackVolumeTypesNamesRetrieveResponses = {
    200: Array<string>;
};

export type OpenstackVolumeTypesNamesRetrieveResponse = OpenstackVolumeTypesNamesRetrieveResponses[keyof OpenstackVolumeTypesNamesRetrieveResponses];

export type OpenstackVolumeTypesNamesCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openstack-volume-types/names/';
};

export type OpenstackVolumeTypesNamesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesListData = {
    body?: never;
    path?: never;
    query?: {
        attach_instance_uuid?: string;
        availability_zone_name?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'action' | 'action_details' | 'availability_zone' | 'availability_zone_name' | 'backend_id' | 'bootable' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device' | 'error_message' | 'error_traceback' | 'extend_enabled' | 'image' | 'image_metadata' | 'image_name' | 'instance' | 'instance_marketplace_uuid' | 'instance_name' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'source_snapshot' | 'state' | 'tenant' | 'tenant_uuid' | 'type' | 'type_name' | 'url' | 'uuid'>;
        instance?: string;
        instance_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        snapshot?: string;
        snapshot_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-volumes/';
};

export type OpenstackVolumesListResponses = {
    200: Array<OpenStackVolume>;
};

export type OpenstackVolumesListResponse = OpenstackVolumesListResponses[keyof OpenstackVolumesListResponses];

export type OpenstackVolumesCountData = {
    body?: never;
    path?: never;
    query?: {
        attach_instance_uuid?: string;
        availability_zone_name?: string;
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        instance?: string;
        instance_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        snapshot?: string;
        snapshot_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        tenant?: string;
        tenant_uuid?: string;
        uuid?: string;
    };
    url: '/api/openstack-volumes/';
};

export type OpenstackVolumesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'action' | 'action_details' | 'availability_zone' | 'availability_zone_name' | 'backend_id' | 'bootable' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'device' | 'error_message' | 'error_traceback' | 'extend_enabled' | 'image' | 'image_metadata' | 'image_name' | 'instance' | 'instance_marketplace_uuid' | 'instance_name' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'metadata' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'source_snapshot' | 'state' | 'tenant' | 'tenant_uuid' | 'type' | 'type_name' | 'url' | 'uuid'>;
    };
    url: '/api/openstack-volumes/{uuid}/';
};

export type OpenstackVolumesRetrieveResponses = {
    200: OpenStackVolume;
};

export type OpenstackVolumesRetrieveResponse = OpenstackVolumesRetrieveResponses[keyof OpenstackVolumesRetrieveResponses];

export type OpenstackVolumesPartialUpdateData = {
    body?: PatchedOpenStackVolumeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/';
};

export type OpenstackVolumesPartialUpdateResponses = {
    200: OpenStackVolume;
};

export type OpenstackVolumesPartialUpdateResponse = OpenstackVolumesPartialUpdateResponses[keyof OpenstackVolumesPartialUpdateResponses];

export type OpenstackVolumesUpdateData = {
    body: OpenStackVolumeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/';
};

export type OpenstackVolumesUpdateResponses = {
    200: OpenStackVolume;
};

export type OpenstackVolumesUpdateResponse = OpenstackVolumesUpdateResponses[keyof OpenstackVolumesUpdateResponses];

export type OpenstackVolumesAttachData = {
    body: VolumeAttachRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/attach/';
};

export type OpenstackVolumesAttachResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesDetachData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/detach/';
};

export type OpenstackVolumesDetachResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesExtendData = {
    body: OpenStackVolumeExtendRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/extend/';
};

export type OpenstackVolumesExtendResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/pull/';
};

export type OpenstackVolumesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesRetypeData = {
    body: OpenStackVolumeRetypeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/retype/';
};

export type OpenstackVolumesRetypeResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OpenstackVolumesSnapshotData = {
    body: OpenStackSnapshotRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/snapshot/';
};

export type OpenstackVolumesSnapshotResponses = {
    201: OpenStackSnapshot;
};

export type OpenstackVolumesSnapshotResponse = OpenstackVolumesSnapshotResponses[keyof OpenstackVolumesSnapshotResponses];

export type OpenstackVolumesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/openstack-volumes/{uuid}/unlink/';
};

export type OpenstackVolumesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OrganizationGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent?: string;
    };
    url: '/api/organization-groups/';
};

export type OrganizationGroupsListResponses = {
    200: Array<OrganizationGroup>;
};

export type OrganizationGroupsListResponse = OrganizationGroupsListResponses[keyof OrganizationGroupsListResponses];

export type OrganizationGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        parent?: string;
    };
    url: '/api/organization-groups/';
};

export type OrganizationGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type OrganizationGroupsCreateData = {
    body: OrganizationGroupRequest;
    path?: never;
    query?: never;
    url: '/api/organization-groups/';
};

export type OrganizationGroupsCreateResponses = {
    201: OrganizationGroup;
};

export type OrganizationGroupsCreateResponse = OrganizationGroupsCreateResponses[keyof OrganizationGroupsCreateResponses];

export type OrganizationGroupsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/organization-groups/{uuid}/';
};

export type OrganizationGroupsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type OrganizationGroupsDestroyResponse = OrganizationGroupsDestroyResponses[keyof OrganizationGroupsDestroyResponses];

export type OrganizationGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/organization-groups/{uuid}/';
};

export type OrganizationGroupsRetrieveResponses = {
    200: OrganizationGroup;
};

export type OrganizationGroupsRetrieveResponse = OrganizationGroupsRetrieveResponses[keyof OrganizationGroupsRetrieveResponses];

export type OrganizationGroupsPartialUpdateData = {
    body?: PatchedOrganizationGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/organization-groups/{uuid}/';
};

export type OrganizationGroupsPartialUpdateResponses = {
    200: OrganizationGroup;
};

export type OrganizationGroupsPartialUpdateResponse = OrganizationGroupsPartialUpdateResponses[keyof OrganizationGroupsPartialUpdateResponses];

export type OrganizationGroupsUpdateData = {
    body: OrganizationGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/organization-groups/{uuid}/';
};

export type OrganizationGroupsUpdateResponses = {
    200: OrganizationGroup;
};

export type OrganizationGroupsUpdateResponse = OrganizationGroupsUpdateResponses[keyof OrganizationGroupsUpdateResponses];

export type OverrideSettingsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/override-settings/';
};

export type OverrideSettingsRetrieveResponses = {
    200: ConstanceSettings;
};

export type OverrideSettingsRetrieveResponse = OverrideSettingsRetrieveResponses[keyof OverrideSettingsRetrieveResponses];

export type OverrideSettingsData = {
    body?: ConstanceSettingsRequest;
    path?: never;
    query?: never;
    url: '/api/override-settings/';
};

export type OverrideSettingsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PaymentProfilesListData = {
    body?: never;
    path?: never;
    query?: {
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-is_active' | '-name' | '-payment_type' | 'is_active' | 'name' | 'payment_type'>;
        organization?: string;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        payment_type?: Array<'fixed_price' | 'invoices' | 'payment_gw_monthly'>;
    };
    url: '/api/payment-profiles/';
};

export type PaymentProfilesListResponses = {
    200: Array<PaymentProfile>;
};

export type PaymentProfilesListResponse = PaymentProfilesListResponses[keyof PaymentProfilesListResponses];

export type PaymentProfilesCountData = {
    body?: never;
    path?: never;
    query?: {
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-is_active' | '-name' | '-payment_type' | 'is_active' | 'name' | 'payment_type'>;
        organization?: string;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        payment_type?: Array<'fixed_price' | 'invoices' | 'payment_gw_monthly'>;
    };
    url: '/api/payment-profiles/';
};

export type PaymentProfilesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PaymentProfilesCreateData = {
    body: PaymentProfileRequest;
    path?: never;
    query?: never;
    url: '/api/payment-profiles/';
};

export type PaymentProfilesCreateResponses = {
    201: PaymentProfile;
};

export type PaymentProfilesCreateResponse = PaymentProfilesCreateResponses[keyof PaymentProfilesCreateResponses];

export type PaymentProfilesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payment-profiles/{uuid}/';
};

export type PaymentProfilesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type PaymentProfilesDestroyResponse = PaymentProfilesDestroyResponses[keyof PaymentProfilesDestroyResponses];

export type PaymentProfilesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payment-profiles/{uuid}/';
};

export type PaymentProfilesRetrieveResponses = {
    200: PaymentProfile;
};

export type PaymentProfilesRetrieveResponse = PaymentProfilesRetrieveResponses[keyof PaymentProfilesRetrieveResponses];

export type PaymentProfilesPartialUpdateData = {
    body?: PatchedPaymentProfileRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payment-profiles/{uuid}/';
};

export type PaymentProfilesPartialUpdateResponses = {
    200: PaymentProfile;
};

export type PaymentProfilesPartialUpdateResponse = PaymentProfilesPartialUpdateResponses[keyof PaymentProfilesPartialUpdateResponses];

export type PaymentProfilesUpdateData = {
    body: PaymentProfileRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payment-profiles/{uuid}/';
};

export type PaymentProfilesUpdateResponses = {
    200: PaymentProfile;
};

export type PaymentProfilesUpdateResponse = PaymentProfilesUpdateResponses[keyof PaymentProfilesUpdateResponses];

export type PaymentProfilesEnableData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payment-profiles/{uuid}/enable/';
};

export type PaymentProfilesEnableResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PaymentsListData = {
    body?: never;
    path?: never;
    query?: {
        date_of_payment?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        profile?: string;
        profile_uuid?: string;
    };
    url: '/api/payments/';
};

export type PaymentsListResponses = {
    200: Array<Payment>;
};

export type PaymentsListResponse = PaymentsListResponses[keyof PaymentsListResponses];

export type PaymentsCountData = {
    body?: never;
    path?: never;
    query?: {
        date_of_payment?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        profile?: string;
        profile_uuid?: string;
    };
    url: '/api/payments/';
};

export type PaymentsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PaymentsCreateData = {
    body: PaymentRequest;
    path?: never;
    query?: never;
    url: '/api/payments/';
};

export type PaymentsCreateResponses = {
    201: Payment;
};

export type PaymentsCreateResponse = PaymentsCreateResponses[keyof PaymentsCreateResponses];

export type PaymentsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/';
};

export type PaymentsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type PaymentsDestroyResponse = PaymentsDestroyResponses[keyof PaymentsDestroyResponses];

export type PaymentsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/';
};

export type PaymentsRetrieveResponses = {
    200: Payment;
};

export type PaymentsRetrieveResponse = PaymentsRetrieveResponses[keyof PaymentsRetrieveResponses];

export type PaymentsPartialUpdateData = {
    body?: PatchedPaymentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/';
};

export type PaymentsPartialUpdateResponses = {
    200: Payment;
};

export type PaymentsPartialUpdateResponse = PaymentsPartialUpdateResponses[keyof PaymentsPartialUpdateResponses];

export type PaymentsUpdateData = {
    body: PaymentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/';
};

export type PaymentsUpdateResponses = {
    200: Payment;
};

export type PaymentsUpdateResponse = PaymentsUpdateResponses[keyof PaymentsUpdateResponses];

export type PaymentsLinkToInvoiceData = {
    body: LinkToInvoiceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/link_to_invoice/';
};

export type PaymentsLinkToInvoiceResponses = {
    200: LinkToInvoice;
};

export type PaymentsLinkToInvoiceResponse = PaymentsLinkToInvoiceResponses[keyof PaymentsLinkToInvoiceResponses];

export type PaymentsUnlinkFromInvoiceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/payments/{uuid}/unlink_from_invoice/';
};

export type PaymentsUnlinkFromInvoiceResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectCreditsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_name?: string;
        customer_slug?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-end_date' | '-expected_consumption' | '-project_name' | '-value' | 'end_date' | 'expected_consumption' | 'project_name' | 'value'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_name?: string;
        project_uuid?: string;
    };
    url: '/api/project-credits/';
};

export type ProjectCreditsListResponses = {
    200: Array<ProjectCredit>;
};

export type ProjectCreditsListResponse = ProjectCreditsListResponses[keyof ProjectCreditsListResponses];

export type ProjectCreditsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_name?: string;
        customer_slug?: string;
        customer_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-end_date' | '-expected_consumption' | '-project_name' | '-value' | 'end_date' | 'expected_consumption' | 'project_name' | 'value'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_name?: string;
        project_uuid?: string;
    };
    url: '/api/project-credits/';
};

export type ProjectCreditsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectCreditsCreateData = {
    body: ProjectCreditRequest;
    path?: never;
    query?: never;
    url: '/api/project-credits/';
};

export type ProjectCreditsCreateResponses = {
    201: ProjectCredit;
};

export type ProjectCreditsCreateResponse = ProjectCreditsCreateResponses[keyof ProjectCreditsCreateResponses];

export type ProjectCreditsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/project-credits/{uuid}/';
};

export type ProjectCreditsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProjectCreditsDestroyResponse = ProjectCreditsDestroyResponses[keyof ProjectCreditsDestroyResponses];

export type ProjectCreditsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/project-credits/{uuid}/';
};

export type ProjectCreditsRetrieveResponses = {
    200: ProjectCredit;
};

export type ProjectCreditsRetrieveResponse = ProjectCreditsRetrieveResponses[keyof ProjectCreditsRetrieveResponses];

export type ProjectCreditsPartialUpdateData = {
    body?: PatchedProjectCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/project-credits/{uuid}/';
};

export type ProjectCreditsPartialUpdateResponses = {
    200: ProjectCredit;
};

export type ProjectCreditsPartialUpdateResponse = ProjectCreditsPartialUpdateResponses[keyof ProjectCreditsPartialUpdateResponses];

export type ProjectCreditsUpdateData = {
    body: ProjectCreditRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/project-credits/{uuid}/';
};

export type ProjectCreditsUpdateResponses = {
    200: ProjectCredit;
};

export type ProjectCreditsUpdateResponse = ProjectCreditsUpdateResponses[keyof ProjectCreditsUpdateResponses];

export type ProjectQuotasListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/project-quotas/';
};

export type ProjectQuotasListResponses = {
    200: Array<ProjectQuotas>;
};

export type ProjectQuotasListResponse = ProjectQuotasListResponses[keyof ProjectQuotasListResponses];

export type ProjectQuotasCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/project-quotas/';
};

export type ProjectQuotasCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectTypesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/project-types/';
};

export type ProjectTypesListResponses = {
    200: Array<ProjectType>;
};

export type ProjectTypesListResponse = ProjectTypesListResponses[keyof ProjectTypesListResponses];

export type ProjectTypesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/project-types/';
};

export type ProjectTypesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectTypesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/project-types/{uuid}/';
};

export type ProjectTypesRetrieveResponses = {
    200: ProjectType;
};

export type ProjectTypesRetrieveResponse = ProjectTypesRetrieveResponses[keyof ProjectTypesRetrieveResponses];

export type ProjectsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Return a list of projects where current user is admin.
         */
        can_admin?: boolean;
        /**
         * Return a list of projects where current user is manager or a customer owner.
         */
        can_manage?: boolean;
        /**
         * Conceal finished projects
         */
        conceal_finished_projects?: boolean;
        /**
         * Created after
         */
        created?: string;
        /**
         * Multiple values may be separated by commas.
         */
        customer?: Array<string>;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        description?: string;
        field?: Array<'backend_id' | 'billing_price_estimate' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'end_date' | 'end_date_requested_by' | 'image' | 'is_industry' | 'marketplace_resource_count' | 'max_service_accounts' | 'name' | 'oecd_fos_2007_code' | 'oecd_fos_2007_label' | 'project_credit' | 'resources_count' | 'slug' | 'start_date' | 'type' | 'type_name' | 'type_uuid' | 'url' | 'uuid'>;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-customer_abbreviation' | '-customer_name' | '-customer_native_name' | '-end_date' | '-estimated_cost' | '-name' | '-start_date' | 'created' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'end_date' | 'estimated_cost' | 'name' | 'start_date'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, UUID, backend ID or resource effective ID
         */
        query?: string;
        slug?: string;
    };
    url: '/api/projects/';
};

export type ProjectsListResponses = {
    200: Array<Project>;
};

export type ProjectsListResponse = ProjectsListResponses[keyof ProjectsListResponses];

export type ProjectsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Return a list of projects where current user is admin.
         */
        can_admin?: boolean;
        /**
         * Return a list of projects where current user is manager or a customer owner.
         */
        can_manage?: boolean;
        /**
         * Conceal finished projects
         */
        conceal_finished_projects?: boolean;
        /**
         * Created after
         */
        created?: string;
        /**
         * Multiple values may be separated by commas.
         */
        customer?: Array<string>;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        description?: string;
        /**
         * Modified after
         */
        modified?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-customer_abbreviation' | '-customer_name' | '-customer_native_name' | '-end_date' | '-estimated_cost' | '-name' | '-start_date' | 'created' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'end_date' | 'estimated_cost' | 'name' | 'start_date'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Filter by name, UUID, backend ID or resource effective ID
         */
        query?: string;
        slug?: string;
    };
    url: '/api/projects/';
};

export type ProjectsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectsCreateData = {
    body: ProjectRequest;
    path?: never;
    query?: never;
    url: '/api/projects/';
};

export type ProjectsCreateResponses = {
    201: Project;
};

export type ProjectsCreateResponse = ProjectsCreateResponses[keyof ProjectsCreateResponses];

export type ProjectsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/';
};

export type ProjectsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProjectsDestroyResponse = ProjectsDestroyResponses[keyof ProjectsDestroyResponses];

export type ProjectsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'billing_price_estimate' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'customer_slug' | 'customer_uuid' | 'description' | 'end_date' | 'end_date_requested_by' | 'image' | 'is_industry' | 'marketplace_resource_count' | 'max_service_accounts' | 'name' | 'oecd_fos_2007_code' | 'oecd_fos_2007_label' | 'project_credit' | 'resources_count' | 'slug' | 'start_date' | 'type' | 'type_name' | 'type_uuid' | 'url' | 'uuid'>;
    };
    url: '/api/projects/{uuid}/';
};

export type ProjectsRetrieveResponses = {
    200: Project;
};

export type ProjectsRetrieveResponse = ProjectsRetrieveResponses[keyof ProjectsRetrieveResponses];

export type ProjectsPartialUpdateData = {
    body?: PatchedProjectRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/';
};

export type ProjectsPartialUpdateResponses = {
    200: Project;
};

export type ProjectsPartialUpdateResponse = ProjectsPartialUpdateResponses[keyof ProjectsPartialUpdateResponses];

export type ProjectsUpdateData = {
    body: ProjectRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/';
};

export type ProjectsUpdateResponses = {
    200: Project;
};

export type ProjectsUpdateResponse = ProjectsUpdateResponses[keyof ProjectsUpdateResponses];

export type ProjectsAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/add_user/';
};

export type ProjectsAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type ProjectsAddUserResponse = ProjectsAddUserResponses[keyof ProjectsAddUserResponses];

export type ProjectsChecklistRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/checklist/';
};

export type ProjectsChecklistRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProjectsChecklistRetrieveResponses = {
    200: ChecklistResponse;
};

export type ProjectsChecklistRetrieveResponse = ProjectsChecklistRetrieveResponses[keyof ProjectsChecklistRetrieveResponses];

export type ProjectsCompletionStatusRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/completion_status/';
};

export type ProjectsCompletionStatusRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProjectsCompletionStatusRetrieveResponses = {
    200: ChecklistCompletion;
};

export type ProjectsCompletionStatusRetrieveResponse = ProjectsCompletionStatusRetrieveResponses[keyof ProjectsCompletionStatusRetrieveResponses];

export type ProjectsDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/delete_user/';
};

export type ProjectsDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectsListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/projects/{uuid}/list_users/';
};

export type ProjectsListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type ProjectsListUsersListResponse = ProjectsListUsersListResponses[keyof ProjectsListUsersListResponses];

export type ProjectsMoveProjectData = {
    body: MoveProjectRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/move_project/';
};

export type ProjectsMoveProjectResponses = {
    200: Project;
};

export type ProjectsMoveProjectResponse = ProjectsMoveProjectResponses[keyof ProjectsMoveProjectResponses];

export type ProjectsOtherUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        civil_number?: string;
        description?: string;
        email?: string;
        full_name?: string;
        is_active?: string;
        job_title?: string;
        native_name?: string;
        organization?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        phone_number?: string;
        registration_method?: string;
        user_keyword?: string;
        username?: string;
    };
    url: '/api/projects/{uuid}/other_users/';
};

export type ProjectsOtherUsersListResponses = {
    200: Array<BasicUser>;
};

export type ProjectsOtherUsersListResponse = ProjectsOtherUsersListResponses[keyof ProjectsOtherUsersListResponses];

export type ProjectsStatsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        for_current_month?: boolean;
    };
    url: '/api/projects/{uuid}/stats/';
};

export type ProjectsStatsRetrieveResponses = {
    200: ComponentsUsageStats;
};

export type ProjectsStatsRetrieveResponse = ProjectsStatsRetrieveResponses[keyof ProjectsStatsRetrieveResponses];

export type ProjectsSubmitAnswersData = {
    body: Array<AnswerSubmitRequest>;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/submit_answers/';
};

export type ProjectsSubmitAnswersErrors = {
    /**
     * Validation error or no checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProjectsSubmitAnswersResponses = {
    200: AnswerSubmitResponse;
};

export type ProjectsSubmitAnswersResponse = ProjectsSubmitAnswersResponses[keyof ProjectsSubmitAnswersResponses];

export type ProjectsSyncUserRolesData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/sync_user_roles/';
};

export type ProjectsSyncUserRolesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProjectsUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/projects/{uuid}/update_user/';
};

export type ProjectsUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type ProjectsUpdateUserResponse = ProjectsUpdateUserResponses[keyof ProjectsUpdateUserResponses];

export type PromotionsCampaignsListData = {
    body?: never;
    path?: never;
    query?: {
        discount_type?: string;
        end_date?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-end_date' | '-start_date' | 'end_date' | 'start_date'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Search by name or coupon code
         */
        query?: string;
        service_provider_uuid?: string;
        start_date?: string;
        state?: Array<'Active' | 'Draft' | 'Terminated'>;
    };
    url: '/api/promotions-campaigns/';
};

export type PromotionsCampaignsListResponses = {
    200: Array<Campaign>;
};

export type PromotionsCampaignsListResponse = PromotionsCampaignsListResponses[keyof PromotionsCampaignsListResponses];

export type PromotionsCampaignsCountData = {
    body?: never;
    path?: never;
    query?: {
        discount_type?: string;
        end_date?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-end_date' | '-start_date' | 'end_date' | 'start_date'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Search by name or coupon code
         */
        query?: string;
        service_provider_uuid?: string;
        start_date?: string;
        state?: Array<'Active' | 'Draft' | 'Terminated'>;
    };
    url: '/api/promotions-campaigns/';
};

export type PromotionsCampaignsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PromotionsCampaignsCreateData = {
    body: CampaignRequest;
    path?: never;
    query?: never;
    url: '/api/promotions-campaigns/';
};

export type PromotionsCampaignsCreateResponses = {
    201: Campaign;
};

export type PromotionsCampaignsCreateResponse = PromotionsCampaignsCreateResponses[keyof PromotionsCampaignsCreateResponses];

export type PromotionsCampaignsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/promotions-campaigns/{uuid}/';
};

export type PromotionsCampaignsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type PromotionsCampaignsDestroyResponse = PromotionsCampaignsDestroyResponses[keyof PromotionsCampaignsDestroyResponses];

export type PromotionsCampaignsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/promotions-campaigns/{uuid}/';
};

export type PromotionsCampaignsRetrieveResponses = {
    200: Campaign;
};

export type PromotionsCampaignsRetrieveResponse = PromotionsCampaignsRetrieveResponses[keyof PromotionsCampaignsRetrieveResponses];

export type PromotionsCampaignsUpdateData = {
    body: CampaignRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/promotions-campaigns/{uuid}/';
};

export type PromotionsCampaignsUpdateResponses = {
    200: Campaign;
};

export type PromotionsCampaignsUpdateResponse = PromotionsCampaignsUpdateResponses[keyof PromotionsCampaignsUpdateResponses];

export type PromotionsCampaignsActivateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/promotions-campaigns/{uuid}/activate/';
};

export type PromotionsCampaignsActivateErrors = {
    /**
     * No response body
     */
    409: unknown;
};

export type PromotionsCampaignsActivateResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PromotionsCampaignsOrdersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/promotions-campaigns/{uuid}/orders/';
};

export type PromotionsCampaignsOrdersListResponses = {
    200: Array<OrderDetails>;
};

export type PromotionsCampaignsOrdersListResponse = PromotionsCampaignsOrdersListResponses[keyof PromotionsCampaignsOrdersListResponses];

export type PromotionsCampaignsResourcesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/promotions-campaigns/{uuid}/resources/';
};

export type PromotionsCampaignsResourcesListResponses = {
    200: Array<Resource>;
};

export type PromotionsCampaignsResourcesListResponse = PromotionsCampaignsResourcesListResponses[keyof PromotionsCampaignsResourcesListResponses];

export type PromotionsCampaignsTerminateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/promotions-campaigns/{uuid}/terminate/';
};

export type PromotionsCampaignsTerminateErrors = {
    /**
     * No response body
     */
    409: unknown;
};

export type PromotionsCampaignsTerminateResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsListData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-round__call__name' | '-round__cutoff_time' | '-round__start_time' | '-state' | 'created' | 'round__call__name' | 'round__cutoff_time' | 'round__start_time' | 'state'>;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        round?: string;
        state?: Array<'accepted' | 'canceled' | 'draft' | 'in_review' | 'rejected' | 'submitted'>;
    };
    url: '/api/proposal-proposals/';
};

export type ProposalProposalsListResponses = {
    200: Array<Proposal>;
};

export type ProposalProposalsListResponse = ProposalProposalsListResponses[keyof ProposalProposalsListResponses];

export type ProposalProposalsCountData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-round__call__name' | '-round__cutoff_time' | '-round__start_time' | '-state' | 'created' | 'round__call__name' | 'round__cutoff_time' | 'round__start_time' | 'state'>;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        round?: string;
        state?: Array<'accepted' | 'canceled' | 'draft' | 'in_review' | 'rejected' | 'submitted'>;
    };
    url: '/api/proposal-proposals/';
};

export type ProposalProposalsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsCreateData = {
    body: ProposalRequest;
    path?: never;
    query?: never;
    url: '/api/proposal-proposals/';
};

export type ProposalProposalsCreateResponses = {
    201: Proposal;
};

export type ProposalProposalsCreateResponse = ProposalProposalsCreateResponses[keyof ProposalProposalsCreateResponses];

export type ProposalProposalsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/';
};

export type ProposalProposalsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProposalsDestroyResponse = ProposalProposalsDestroyResponses[keyof ProposalProposalsDestroyResponses];

export type ProposalProposalsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/';
};

export type ProposalProposalsRetrieveResponses = {
    200: Proposal;
};

export type ProposalProposalsRetrieveResponse = ProposalProposalsRetrieveResponses[keyof ProposalProposalsRetrieveResponses];

export type ProposalProposalsAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/add_user/';
};

export type ProposalProposalsAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type ProposalProposalsAddUserResponse = ProposalProposalsAddUserResponses[keyof ProposalProposalsAddUserResponses];

export type ProposalProposalsApproveData = {
    body?: ProposalApproveRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/approve/';
};

export type ProposalProposalsApproveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsAttachDocumentData = {
    body?: ProposalDocumentationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/attach_document/';
};

export type ProposalProposalsAttachDocumentResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsChecklistRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/checklist/';
};

export type ProposalProposalsChecklistRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProposalProposalsChecklistRetrieveResponses = {
    200: ChecklistResponse;
};

export type ProposalProposalsChecklistRetrieveResponse = ProposalProposalsChecklistRetrieveResponses[keyof ProposalProposalsChecklistRetrieveResponses];

export type ProposalProposalsChecklistReviewRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/checklist_review/';
};

export type ProposalProposalsChecklistReviewRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProposalProposalsChecklistReviewRetrieveResponses = {
    200: ChecklistReviewerResponse;
};

export type ProposalProposalsChecklistReviewRetrieveResponse = ProposalProposalsChecklistReviewRetrieveResponses[keyof ProposalProposalsChecklistReviewRetrieveResponses];

export type ProposalProposalsCompletionReviewStatusRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/completion_review_status/';
};

export type ProposalProposalsCompletionReviewStatusRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProposalProposalsCompletionReviewStatusRetrieveResponses = {
    200: ChecklistCompletionReviewer;
};

export type ProposalProposalsCompletionReviewStatusRetrieveResponse = ProposalProposalsCompletionReviewStatusRetrieveResponses[keyof ProposalProposalsCompletionReviewStatusRetrieveResponses];

export type ProposalProposalsCompletionStatusRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/completion_status/';
};

export type ProposalProposalsCompletionStatusRetrieveErrors = {
    /**
     * No checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProposalProposalsCompletionStatusRetrieveResponses = {
    200: ChecklistCompletion;
};

export type ProposalProposalsCompletionStatusRetrieveResponse = ProposalProposalsCompletionStatusRetrieveResponses[keyof ProposalProposalsCompletionStatusRetrieveResponses];

export type ProposalProposalsDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/delete_user/';
};

export type ProposalProposalsDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/proposal-proposals/{uuid}/list_users/';
};

export type ProposalProposalsListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type ProposalProposalsListUsersListResponse = ProposalProposalsListUsersListResponses[keyof ProposalProposalsListUsersListResponses];

export type ProposalProposalsRejectData = {
    body?: ProposalApproveRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/reject/';
};

export type ProposalProposalsRejectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsResourcesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/proposal-proposals/{uuid}/resources/';
};

export type ProposalProposalsResourcesListResponses = {
    200: Array<RequestedResource>;
};

export type ProposalProposalsResourcesListResponse = ProposalProposalsResourcesListResponses[keyof ProposalProposalsResourcesListResponses];

export type ProposalProposalsResourcesSetData = {
    body?: RequestedResourceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/resources/';
};

export type ProposalProposalsResourcesSetResponses = {
    200: RequestedResource;
};

export type ProposalProposalsResourcesSetResponse = ProposalProposalsResourcesSetResponses[keyof ProposalProposalsResourcesSetResponses];

export type ProposalProposalsResourcesDestroyData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/resources/{obj_uuid}/';
};

export type ProposalProposalsResourcesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProposalsResourcesDestroyResponse = ProposalProposalsResourcesDestroyResponses[keyof ProposalProposalsResourcesDestroyResponses];

export type ProposalProposalsResourcesRetrieveData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/resources/{obj_uuid}/';
};

export type ProposalProposalsResourcesRetrieveResponses = {
    200: RequestedResource;
};

export type ProposalProposalsResourcesRetrieveResponse = ProposalProposalsResourcesRetrieveResponses[keyof ProposalProposalsResourcesRetrieveResponses];

export type ProposalProposalsResourcesPartialUpdateData = {
    body?: PatchedRequestedResourceRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/resources/{obj_uuid}/';
};

export type ProposalProposalsResourcesPartialUpdateResponses = {
    200: RequestedResource;
};

export type ProposalProposalsResourcesPartialUpdateResponse = ProposalProposalsResourcesPartialUpdateResponses[keyof ProposalProposalsResourcesPartialUpdateResponses];

export type ProposalProposalsResourcesUpdateData = {
    body?: RequestedResourceRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/resources/{obj_uuid}/';
};

export type ProposalProposalsResourcesUpdateResponses = {
    200: RequestedResource;
};

export type ProposalProposalsResourcesUpdateResponse = ProposalProposalsResourcesUpdateResponses[keyof ProposalProposalsResourcesUpdateResponses];

export type ProposalProposalsSubmitData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/submit/';
};

export type ProposalProposalsSubmitResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsSubmitAnswersData = {
    body: Array<AnswerSubmitRequest>;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/submit_answers/';
};

export type ProposalProposalsSubmitAnswersErrors = {
    /**
     * Validation error or no checklist configured
     */
    400: unknown;
    /**
     * Object not found
     */
    404: unknown;
};

export type ProposalProposalsSubmitAnswersResponses = {
    200: AnswerSubmitResponse;
};

export type ProposalProposalsSubmitAnswersResponse = ProposalProposalsSubmitAnswersResponses[keyof ProposalProposalsSubmitAnswersResponses];

export type ProposalProposalsUpdateProjectDetailsData = {
    body: ProposalUpdateProjectDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/update_project_details/';
};

export type ProposalProposalsUpdateProjectDetailsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProposalsUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-proposals/{uuid}/update_user/';
};

export type ProposalProposalsUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type ProposalProposalsUpdateUserResponse = ProposalProposalsUpdateUserResponses[keyof ProposalProposalsUpdateUserResponses];

export type ProposalProtectedCallsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        field?: Array<'backend_id' | 'compliance_checklist' | 'compliance_checklist_name' | 'created' | 'created_by' | 'customer_name' | 'customer_uuid' | 'description' | 'documents' | 'end_date' | 'external_url' | 'fixed_duration_in_days' | 'manager' | 'manager_uuid' | 'name' | 'offerings' | 'reference_code' | 'resource_templates' | 'reviewer_identity_visible_to_submitters' | 'reviews_visible_to_submitters' | 'rounds' | 'slug' | 'start_date' | 'state' | 'url' | 'uuid'>;
        has_active_round?: boolean;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-manager__customer__name' | '-name' | 'created' | 'manager__customer__name' | 'name'>;
        offering_uuid?: string;
        offerings_provider_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'active' | 'archived' | 'draft'>;
    };
    url: '/api/proposal-protected-calls/';
};

export type ProposalProtectedCallsListResponses = {
    200: Array<ProtectedCall>;
};

export type ProposalProtectedCallsListResponse = ProposalProtectedCallsListResponses[keyof ProposalProtectedCallsListResponses];

export type ProposalProtectedCallsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        has_active_round?: boolean;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-manager__customer__name' | '-name' | 'created' | 'manager__customer__name' | 'name'>;
        offering_uuid?: string;
        offerings_provider_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'active' | 'archived' | 'draft'>;
    };
    url: '/api/proposal-protected-calls/';
};

export type ProposalProtectedCallsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProtectedCallsCreateData = {
    body: ProtectedCallRequest;
    path?: never;
    query?: never;
    url: '/api/proposal-protected-calls/';
};

export type ProposalProtectedCallsCreateResponses = {
    201: ProtectedCall;
};

export type ProposalProtectedCallsCreateResponse = ProposalProtectedCallsCreateResponses[keyof ProposalProtectedCallsCreateResponses];

export type ProposalProtectedCallsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/';
};

export type ProposalProtectedCallsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProtectedCallsDestroyResponse = ProposalProtectedCallsDestroyResponses[keyof ProposalProtectedCallsDestroyResponses];

export type ProposalProtectedCallsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'compliance_checklist' | 'compliance_checklist_name' | 'created' | 'created_by' | 'customer_name' | 'customer_uuid' | 'description' | 'documents' | 'end_date' | 'external_url' | 'fixed_duration_in_days' | 'manager' | 'manager_uuid' | 'name' | 'offerings' | 'reference_code' | 'resource_templates' | 'reviewer_identity_visible_to_submitters' | 'reviews_visible_to_submitters' | 'rounds' | 'slug' | 'start_date' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/proposal-protected-calls/{uuid}/';
};

export type ProposalProtectedCallsRetrieveResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsRetrieveResponse = ProposalProtectedCallsRetrieveResponses[keyof ProposalProtectedCallsRetrieveResponses];

export type ProposalProtectedCallsPartialUpdateData = {
    body?: PatchedProtectedCallRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/';
};

export type ProposalProtectedCallsPartialUpdateResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsPartialUpdateResponse = ProposalProtectedCallsPartialUpdateResponses[keyof ProposalProtectedCallsPartialUpdateResponses];

export type ProposalProtectedCallsUpdateData = {
    body: ProtectedCallRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/';
};

export type ProposalProtectedCallsUpdateResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsUpdateResponse = ProposalProtectedCallsUpdateResponses[keyof ProposalProtectedCallsUpdateResponses];

export type ProposalProtectedCallsActivateData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/activate/';
};

export type ProposalProtectedCallsActivateResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsActivateResponse = ProposalProtectedCallsActivateResponses[keyof ProposalProtectedCallsActivateResponses];

export type ProposalProtectedCallsAddUserData = {
    body: UserRoleCreateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/add_user/';
};

export type ProposalProtectedCallsAddUserResponses = {
    201: UserRoleExpirationTime;
};

export type ProposalProtectedCallsAddUserResponse = ProposalProtectedCallsAddUserResponses[keyof ProposalProtectedCallsAddUserResponses];

export type ProposalProtectedCallsArchiveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/archive/';
};

export type ProposalProtectedCallsArchiveResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsArchiveResponse = ProposalProtectedCallsArchiveResponses[keyof ProposalProtectedCallsArchiveResponses];

export type ProposalProtectedCallsAttachDocumentsData = {
    body: CallAttachDocumentsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/attach_documents/';
};

export type ProposalProtectedCallsAttachDocumentsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProtectedCallsComplianceOverviewRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/compliance_overview/';
};

export type ProposalProtectedCallsComplianceOverviewRetrieveResponses = {
    200: CallComplianceOverview;
};

export type ProposalProtectedCallsComplianceOverviewRetrieveResponse = ProposalProtectedCallsComplianceOverviewRetrieveResponses[keyof ProposalProtectedCallsComplianceOverviewRetrieveResponses];

export type ProposalProtectedCallsDeleteUserData = {
    body: UserRoleDeleteRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/delete_user/';
};

export type ProposalProtectedCallsDeleteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProtectedCallsDetachDocumentsData = {
    body: CallDetachDocumentsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/detach_documents/';
};

export type ProposalProtectedCallsDetachDocumentsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalProtectedCallsListUsersListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * Fields to include in response
         */
        field?: Array<'created' | 'created_by_full_name' | 'created_by_uuid' | 'expiration_time' | 'role_name' | 'role_uuid' | 'user_email' | 'user_full_name' | 'user_image' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * User full name
         */
        full_name?: string;
        /**
         * User native name
         */
        native_name?: string;
        /**
         * Ordering fields
         */
        o?: Array<'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role UUID or name
         */
        role?: string;
        /**
         * Search string for user
         */
        search_string?: string;
        /**
         * User UUID
         */
        user?: string;
        /**
         * User slug
         */
        user_slug?: string;
        /**
         * User URL
         */
        user_url?: string;
        /**
         * User username
         */
        username?: string;
    };
    url: '/api/proposal-protected-calls/{uuid}/list_users/';
};

export type ProposalProtectedCallsListUsersListResponses = {
    200: Array<UserRoleDetails>;
};

export type ProposalProtectedCallsListUsersListResponse = ProposalProtectedCallsListUsersListResponses[keyof ProposalProtectedCallsListUsersListResponses];

export type ProposalProtectedCallsOfferingsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/proposal-protected-calls/{uuid}/offerings/';
};

export type ProposalProtectedCallsOfferingsListResponses = {
    200: Array<RequestedOffering>;
};

export type ProposalProtectedCallsOfferingsListResponse = ProposalProtectedCallsOfferingsListResponses[keyof ProposalProtectedCallsOfferingsListResponses];

export type ProposalProtectedCallsOfferingsSetData = {
    body: RequestedOfferingRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/offerings/';
};

export type ProposalProtectedCallsOfferingsSetResponses = {
    200: RequestedOffering;
};

export type ProposalProtectedCallsOfferingsSetResponse = ProposalProtectedCallsOfferingsSetResponses[keyof ProposalProtectedCallsOfferingsSetResponses];

export type ProposalProtectedCallsOfferingsDestroyData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/offerings/{obj_uuid}/';
};

export type ProposalProtectedCallsOfferingsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProtectedCallsOfferingsDestroyResponse = ProposalProtectedCallsOfferingsDestroyResponses[keyof ProposalProtectedCallsOfferingsDestroyResponses];

export type ProposalProtectedCallsOfferingsRetrieveData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/offerings/{obj_uuid}/';
};

export type ProposalProtectedCallsOfferingsRetrieveResponses = {
    200: RequestedOffering;
};

export type ProposalProtectedCallsOfferingsRetrieveResponse = ProposalProtectedCallsOfferingsRetrieveResponses[keyof ProposalProtectedCallsOfferingsRetrieveResponses];

export type ProposalProtectedCallsOfferingsPartialUpdateData = {
    body?: PatchedRequestedOfferingRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/offerings/{obj_uuid}/';
};

export type ProposalProtectedCallsOfferingsPartialUpdateResponses = {
    200: RequestedOffering;
};

export type ProposalProtectedCallsOfferingsPartialUpdateResponse = ProposalProtectedCallsOfferingsPartialUpdateResponses[keyof ProposalProtectedCallsOfferingsPartialUpdateResponses];

export type ProposalProtectedCallsOfferingsUpdateData = {
    body: RequestedOfferingRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/offerings/{obj_uuid}/';
};

export type ProposalProtectedCallsOfferingsUpdateResponses = {
    200: RequestedOffering;
};

export type ProposalProtectedCallsOfferingsUpdateResponse = ProposalProtectedCallsOfferingsUpdateResponses[keyof ProposalProtectedCallsOfferingsUpdateResponses];

export type ProposalProtectedCallsProposalsComplianceAnswersListData = {
    body?: never;
    path: {
        /**
         * UUID of the proposal
         */
        proposal_uuid: string;
        uuid: string;
    };
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        has_active_round?: boolean;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-manager__customer__name' | '-name' | 'created' | 'manager__customer__name' | 'name'>;
        offering_uuid?: string;
        offerings_provider_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'active' | 'archived' | 'draft'>;
    };
    url: '/api/proposal-protected-calls/{uuid}/proposals/{proposal_uuid}/compliance-answers/';
};

export type ProposalProtectedCallsProposalsComplianceAnswersListResponses = {
    200: Array<Answer>;
};

export type ProposalProtectedCallsProposalsComplianceAnswersListResponse = ProposalProtectedCallsProposalsComplianceAnswersListResponses[keyof ProposalProtectedCallsProposalsComplianceAnswersListResponses];

export type ProposalProtectedCallsResourceTemplatesListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/';
};

export type ProposalProtectedCallsResourceTemplatesListResponses = {
    200: Array<CallResourceTemplate>;
};

export type ProposalProtectedCallsResourceTemplatesListResponse = ProposalProtectedCallsResourceTemplatesListResponses[keyof ProposalProtectedCallsResourceTemplatesListResponses];

export type ProposalProtectedCallsResourceTemplatesSetData = {
    body: CallResourceTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/';
};

export type ProposalProtectedCallsResourceTemplatesSetResponses = {
    200: CallResourceTemplate;
};

export type ProposalProtectedCallsResourceTemplatesSetResponse = ProposalProtectedCallsResourceTemplatesSetResponses[keyof ProposalProtectedCallsResourceTemplatesSetResponses];

export type ProposalProtectedCallsResourceTemplatesDestroyData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/{obj_uuid}/';
};

export type ProposalProtectedCallsResourceTemplatesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProtectedCallsResourceTemplatesDestroyResponse = ProposalProtectedCallsResourceTemplatesDestroyResponses[keyof ProposalProtectedCallsResourceTemplatesDestroyResponses];

export type ProposalProtectedCallsResourceTemplatesRetrieveData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/{obj_uuid}/';
};

export type ProposalProtectedCallsResourceTemplatesRetrieveResponses = {
    200: CallResourceTemplate;
};

export type ProposalProtectedCallsResourceTemplatesRetrieveResponse = ProposalProtectedCallsResourceTemplatesRetrieveResponses[keyof ProposalProtectedCallsResourceTemplatesRetrieveResponses];

export type ProposalProtectedCallsResourceTemplatesPartialUpdateData = {
    body?: PatchedCallResourceTemplateRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/{obj_uuid}/';
};

export type ProposalProtectedCallsResourceTemplatesPartialUpdateResponses = {
    200: CallResourceTemplate;
};

export type ProposalProtectedCallsResourceTemplatesPartialUpdateResponse = ProposalProtectedCallsResourceTemplatesPartialUpdateResponses[keyof ProposalProtectedCallsResourceTemplatesPartialUpdateResponses];

export type ProposalProtectedCallsResourceTemplatesUpdateData = {
    body: CallResourceTemplateRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/resource_templates/{obj_uuid}/';
};

export type ProposalProtectedCallsResourceTemplatesUpdateResponses = {
    200: CallResourceTemplate;
};

export type ProposalProtectedCallsResourceTemplatesUpdateResponse = ProposalProtectedCallsResourceTemplatesUpdateResponses[keyof ProposalProtectedCallsResourceTemplatesUpdateResponses];

export type ProposalProtectedCallsReviewProposalComplianceData = {
    body: CallComplianceReviewRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/review_proposal_compliance/';
};

export type ProposalProtectedCallsReviewProposalComplianceResponses = {
    200: {
        [key: string]: string;
    };
};

export type ProposalProtectedCallsReviewProposalComplianceResponse = ProposalProtectedCallsReviewProposalComplianceResponses[keyof ProposalProtectedCallsReviewProposalComplianceResponses];

export type ProposalProtectedCallsRoundsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/proposal-protected-calls/{uuid}/rounds/';
};

export type ProposalProtectedCallsRoundsListResponses = {
    200: Array<ProtectedRound>;
};

export type ProposalProtectedCallsRoundsListResponse = ProposalProtectedCallsRoundsListResponses[keyof ProposalProtectedCallsRoundsListResponses];

export type ProposalProtectedCallsRoundsSetData = {
    body: ProtectedRoundRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/';
};

export type ProposalProtectedCallsRoundsSetResponses = {
    200: ProtectedRound;
};

export type ProposalProtectedCallsRoundsSetResponse = ProposalProtectedCallsRoundsSetResponses[keyof ProposalProtectedCallsRoundsSetResponses];

export type ProposalProtectedCallsRoundsDestroyData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/{obj_uuid}/';
};

export type ProposalProtectedCallsRoundsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalProtectedCallsRoundsDestroyResponse = ProposalProtectedCallsRoundsDestroyResponses[keyof ProposalProtectedCallsRoundsDestroyResponses];

export type ProposalProtectedCallsRoundsRetrieveData = {
    body?: never;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/{obj_uuid}/';
};

export type ProposalProtectedCallsRoundsRetrieveResponses = {
    200: ProtectedRound;
};

export type ProposalProtectedCallsRoundsRetrieveResponse = ProposalProtectedCallsRoundsRetrieveResponses[keyof ProposalProtectedCallsRoundsRetrieveResponses];

export type ProposalProtectedCallsRoundsPartialUpdateData = {
    body?: PatchedProtectedRoundRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/{obj_uuid}/';
};

export type ProposalProtectedCallsRoundsPartialUpdateResponses = {
    200: ProtectedRound;
};

export type ProposalProtectedCallsRoundsPartialUpdateResponse = ProposalProtectedCallsRoundsPartialUpdateResponses[keyof ProposalProtectedCallsRoundsPartialUpdateResponses];

export type ProposalProtectedCallsRoundsUpdateData = {
    body: ProtectedRoundRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/{obj_uuid}/';
};

export type ProposalProtectedCallsRoundsUpdateResponses = {
    200: ProtectedRound;
};

export type ProposalProtectedCallsRoundsUpdateResponse = ProposalProtectedCallsRoundsUpdateResponses[keyof ProposalProtectedCallsRoundsUpdateResponses];

export type ProposalProtectedCallsRoundsCloseData = {
    body: ProtectedCallRequest;
    path: {
        obj_uuid: string;
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/rounds/{obj_uuid}/close/';
};

export type ProposalProtectedCallsRoundsCloseResponses = {
    200: ProtectedCall;
};

export type ProposalProtectedCallsRoundsCloseResponse = ProposalProtectedCallsRoundsCloseResponses[keyof ProposalProtectedCallsRoundsCloseResponses];

export type ProposalProtectedCallsUpdateUserData = {
    body: UserRoleUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-protected-calls/{uuid}/update_user/';
};

export type ProposalProtectedCallsUpdateUserResponses = {
    200: UserRoleExpirationTime;
};

export type ProposalProtectedCallsUpdateUserResponse = ProposalProtectedCallsUpdateUserResponses[keyof ProposalProtectedCallsUpdateUserResponses];

export type ProposalPublicCallsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        field?: Array<'backend_id' | 'created' | 'customer_name' | 'customer_uuid' | 'description' | 'documents' | 'end_date' | 'external_url' | 'fixed_duration_in_days' | 'manager' | 'manager_uuid' | 'name' | 'offerings' | 'resource_templates' | 'reviewer_identity_visible_to_submitters' | 'reviews_visible_to_submitters' | 'rounds' | 'slug' | 'start_date' | 'state' | 'url' | 'uuid'>;
        has_active_round?: boolean;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-manager__customer__name' | '-name' | 'created' | 'manager__customer__name' | 'name'>;
        offering_uuid?: string;
        offerings_provider_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'active' | 'archived' | 'draft'>;
    };
    url: '/api/proposal-public-calls/';
};

export type ProposalPublicCallsListResponses = {
    200: Array<PublicCall>;
};

export type ProposalPublicCallsListResponse = ProposalPublicCallsListResponses[keyof ProposalPublicCallsListResponses];

export type ProposalPublicCallsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_keyword?: string;
        customer_uuid?: string;
        has_active_round?: boolean;
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-manager__customer__name' | '-name' | 'created' | 'manager__customer__name' | 'name'>;
        offering_uuid?: string;
        offerings_provider_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'active' | 'archived' | 'draft'>;
    };
    url: '/api/proposal-public-calls/';
};

export type ProposalPublicCallsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalPublicCallsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'created' | 'customer_name' | 'customer_uuid' | 'description' | 'documents' | 'end_date' | 'external_url' | 'fixed_duration_in_days' | 'manager' | 'manager_uuid' | 'name' | 'offerings' | 'resource_templates' | 'reviewer_identity_visible_to_submitters' | 'reviews_visible_to_submitters' | 'rounds' | 'slug' | 'start_date' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/proposal-public-calls/{uuid}/';
};

export type ProposalPublicCallsRetrieveResponses = {
    200: PublicCall;
};

export type ProposalPublicCallsRetrieveResponse = ProposalPublicCallsRetrieveResponses[keyof ProposalPublicCallsRetrieveResponses];

export type ProposalRequestedOfferingsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Call
         */
        call?: string;
        call_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-call__name' | '-created' | '-offering__name' | '-state' | 'call__name' | 'created' | 'offering__name' | 'state'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Provider
         */
        provider_uuid?: string;
        state?: Array<'accepted' | 'canceled' | 'requested'>;
    };
    url: '/api/proposal-requested-offerings/';
};

export type ProposalRequestedOfferingsListResponses = {
    200: Array<ProviderRequestedOffering>;
};

export type ProposalRequestedOfferingsListResponse = ProposalRequestedOfferingsListResponses[keyof ProposalRequestedOfferingsListResponses];

export type ProposalRequestedOfferingsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Call
         */
        call?: string;
        call_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-call__name' | '-created' | '-offering__name' | '-state' | 'call__name' | 'created' | 'offering__name' | 'state'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Provider
         */
        provider_uuid?: string;
        state?: Array<'accepted' | 'canceled' | 'requested'>;
    };
    url: '/api/proposal-requested-offerings/';
};

export type ProposalRequestedOfferingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalRequestedOfferingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-requested-offerings/{uuid}/';
};

export type ProposalRequestedOfferingsRetrieveResponses = {
    200: ProviderRequestedOffering;
};

export type ProposalRequestedOfferingsRetrieveResponse = ProposalRequestedOfferingsRetrieveResponses[keyof ProposalRequestedOfferingsRetrieveResponses];

export type ProposalRequestedOfferingsAcceptData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-requested-offerings/{uuid}/accept/';
};

export type ProposalRequestedOfferingsAcceptResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalRequestedOfferingsCancelData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-requested-offerings/{uuid}/cancel/';
};

export type ProposalRequestedOfferingsCancelResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalRequestedResourcesListData = {
    body?: never;
    path?: never;
    query?: {
        created?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-offering__name' | '-proposal__name' | '-resource__name' | 'created' | 'offering__name' | 'proposal__name' | 'resource__name'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Proposal
         */
        proposal?: string;
        proposal_uuid?: string;
        /**
         * Resource
         */
        resource?: string;
        resource_uuid?: string;
    };
    url: '/api/proposal-requested-resources/';
};

export type ProposalRequestedResourcesListResponses = {
    200: Array<ProviderRequestedResource>;
};

export type ProposalRequestedResourcesListResponse = ProposalRequestedResourcesListResponses[keyof ProposalRequestedResourcesListResponses];

export type ProposalRequestedResourcesCountData = {
    body?: never;
    path?: never;
    query?: {
        created?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-offering__name' | '-proposal__name' | '-resource__name' | 'created' | 'offering__name' | 'proposal__name' | 'resource__name'>;
        /**
         * Offering
         */
        offering?: string;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Proposal
         */
        proposal?: string;
        proposal_uuid?: string;
        /**
         * Resource
         */
        resource?: string;
        resource_uuid?: string;
    };
    url: '/api/proposal-requested-resources/';
};

export type ProposalRequestedResourcesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalRequestedResourcesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-requested-resources/{uuid}/';
};

export type ProposalRequestedResourcesRetrieveResponses = {
    200: ProviderRequestedResource;
};

export type ProposalRequestedResourcesRetrieveResponse = ProposalRequestedResourcesRetrieveResponses[keyof ProposalRequestedResourcesRetrieveResponses];

export type ProposalReviewsListData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-state' | 'created' | 'state'>;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        proposal?: string;
        proposal_name?: string;
        proposal_uuid?: string;
        reviewer_uuid?: string;
        state?: Array<'created' | 'in_review' | 'rejected' | 'submitted'>;
    };
    url: '/api/proposal-reviews/';
};

export type ProposalReviewsListResponses = {
    200: Array<ProposalReview>;
};

export type ProposalReviewsListResponse = ProposalReviewsListResponses[keyof ProposalReviewsListResponses];

export type ProposalReviewsCountData = {
    body?: never;
    path?: never;
    query?: {
        call_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-state' | 'created' | 'state'>;
        organization_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        proposal?: string;
        proposal_name?: string;
        proposal_uuid?: string;
        reviewer_uuid?: string;
        state?: Array<'created' | 'in_review' | 'rejected' | 'submitted'>;
    };
    url: '/api/proposal-reviews/';
};

export type ProposalReviewsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalReviewsCreateData = {
    body: ProposalReviewRequest;
    path?: never;
    query?: never;
    url: '/api/proposal-reviews/';
};

export type ProposalReviewsCreateResponses = {
    201: ProposalReview;
};

export type ProposalReviewsCreateResponse = ProposalReviewsCreateResponses[keyof ProposalReviewsCreateResponses];

export type ProposalReviewsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/';
};

export type ProposalReviewsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProposalReviewsDestroyResponse = ProposalReviewsDestroyResponses[keyof ProposalReviewsDestroyResponses];

export type ProposalReviewsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/';
};

export type ProposalReviewsRetrieveResponses = {
    200: ProposalReview;
};

export type ProposalReviewsRetrieveResponse = ProposalReviewsRetrieveResponses[keyof ProposalReviewsRetrieveResponses];

export type ProposalReviewsPartialUpdateData = {
    body?: PatchedProposalReviewRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/';
};

export type ProposalReviewsPartialUpdateResponses = {
    200: ProposalReview;
};

export type ProposalReviewsPartialUpdateResponse = ProposalReviewsPartialUpdateResponses[keyof ProposalReviewsPartialUpdateResponses];

export type ProposalReviewsUpdateData = {
    body: ProposalReviewRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/';
};

export type ProposalReviewsUpdateResponses = {
    200: ProposalReview;
};

export type ProposalReviewsUpdateResponse = ProposalReviewsUpdateResponses[keyof ProposalReviewsUpdateResponses];

export type ProposalReviewsAcceptData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/accept/';
};

export type ProposalReviewsAcceptResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalReviewsRejectData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/reject/';
};

export type ProposalReviewsRejectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProposalReviewsSubmitData = {
    body?: ReviewSubmitRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/proposal-reviews/{uuid}/submit/';
};

export type ProposalReviewsSubmitResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProviderInvoiceItemsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        invoice_month?: number;
        invoice_year?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-invoice_customer_name' | '-project_name' | '-resource_offering_name' | '-unit_price' | 'invoice_customer_name' | 'project_name' | 'resource_offering_name' | 'unit_price'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
    };
    url: '/api/provider-invoice-items/';
};

export type ProviderInvoiceItemsListResponses = {
    200: Array<InvoiceItem>;
};

export type ProviderInvoiceItemsListResponse = ProviderInvoiceItemsListResponses[keyof ProviderInvoiceItemsListResponses];

export type ProviderInvoiceItemsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        invoice_month?: number;
        invoice_year?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-invoice_customer_name' | '-project_name' | '-resource_offering_name' | '-unit_price' | 'invoice_customer_name' | 'project_name' | 'resource_offering_name' | 'unit_price'>;
        offering_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
    };
    url: '/api/provider-invoice-items/';
};

export type ProviderInvoiceItemsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ProviderInvoiceItemsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this invoice item.
         */
        id: number;
    };
    query?: never;
    url: '/api/provider-invoice-items/{id}/';
};

export type ProviderInvoiceItemsRetrieveResponses = {
    200: InvoiceItem;
};

export type ProviderInvoiceItemsRetrieveResponse = ProviderInvoiceItemsRetrieveResponses[keyof ProviderInvoiceItemsRetrieveResponses];

export type PublicMaintenanceAnnouncementsListData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-scheduled_end' | '-scheduled_start' | 'created' | 'name' | 'scheduled_end' | 'scheduled_start'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scheduled_end_after?: string;
        scheduled_end_before?: string;
        scheduled_start_after?: string;
        scheduled_start_before?: string;
        service_provider_uuid?: string;
        state?: Array<'Cancelled' | 'Completed' | 'Draft' | 'In progress' | 'Scheduled'>;
    };
    url: '/api/public-maintenance-announcements/';
};

export type PublicMaintenanceAnnouncementsListResponses = {
    200: Array<PublicMaintenanceAnnouncement>;
};

export type PublicMaintenanceAnnouncementsListResponse = PublicMaintenanceAnnouncementsListResponses[keyof PublicMaintenanceAnnouncementsListResponses];

export type PublicMaintenanceAnnouncementsCountData = {
    body?: never;
    path?: never;
    query?: {
        maintenance_type?: number;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-name' | '-scheduled_end' | '-scheduled_start' | 'created' | 'name' | 'scheduled_end' | 'scheduled_start'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scheduled_end_after?: string;
        scheduled_end_before?: string;
        scheduled_start_after?: string;
        scheduled_start_before?: string;
        service_provider_uuid?: string;
        state?: Array<'Cancelled' | 'Completed' | 'Draft' | 'In progress' | 'Scheduled'>;
    };
    url: '/api/public-maintenance-announcements/';
};

export type PublicMaintenanceAnnouncementsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type PublicMaintenanceAnnouncementsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/public-maintenance-announcements/{uuid}/';
};

export type PublicMaintenanceAnnouncementsRetrieveResponses = {
    200: PublicMaintenanceAnnouncement;
};

export type PublicMaintenanceAnnouncementsRetrieveResponse = PublicMaintenanceAnnouncementsRetrieveResponses[keyof PublicMaintenanceAnnouncementsRetrieveResponses];

export type QueryData = {
    body: QueryRequest;
    path?: never;
    query?: never;
    url: '/api/query/';
};

export type QueryErrors = {
    /**
     * No response body
     */
    400: unknown;
};

export type QueryResponses = {
    200: Array<unknown>;
};

export type QueryResponse = QueryResponses[keyof QueryResponses];

export type RabbitmqUserStatsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rabbitmq-user-stats/';
};

export type RabbitmqUserStatsListResponses = {
    200: Array<RmqUserStatsItem>;
};

export type RabbitmqUserStatsListResponse = RabbitmqUserStatsListResponses[keyof RabbitmqUserStatsListResponses];

export type RabbitmqVhostStatsListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/rabbitmq-vhost-stats/';
};

export type RabbitmqVhostStatsListResponses = {
    200: Array<RmqVHostStatsItem>;
};

export type RabbitmqVhostStatsListResponse = RabbitmqVhostStatsListResponses[keyof RabbitmqVhostStatsListResponses];

export type RancherAppsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'answers' | 'backend_id' | 'catalog_name' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'external_url' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'rancher_project' | 'rancher_project_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'template' | 'template_name' | 'url' | 'uuid' | 'version'>;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        template_uuid?: string;
        uuid?: string;
    };
    url: '/api/rancher-apps/';
};

export type RancherAppsListResponses = {
    200: Array<RancherApplication>;
};

export type RancherAppsListResponse = RancherAppsListResponses[keyof RancherAppsListResponses];

export type RancherAppsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        template_uuid?: string;
        uuid?: string;
    };
    url: '/api/rancher-apps/';
};

export type RancherAppsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherAppsCreateData = {
    body: RancherApplicationRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-apps/';
};

export type RancherAppsCreateResponses = {
    201: RancherApplication;
};

export type RancherAppsCreateResponse = RancherAppsCreateResponses[keyof RancherAppsCreateResponses];

export type RancherAppsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-apps/{uuid}/';
};

export type RancherAppsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherAppsDestroyResponse = RancherAppsDestroyResponses[keyof RancherAppsDestroyResponses];

export type RancherAppsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'answers' | 'backend_id' | 'catalog_name' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'external_url' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'rancher_project' | 'rancher_project_name' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'template' | 'template_name' | 'url' | 'uuid' | 'version'>;
    };
    url: '/api/rancher-apps/{uuid}/';
};

export type RancherAppsRetrieveResponses = {
    200: RancherApplication;
};

export type RancherAppsRetrieveResponse = RancherAppsRetrieveResponses[keyof RancherAppsRetrieveResponses];

export type RancherAppsPartialUpdateData = {
    body?: PatchedRancherApplicationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-apps/{uuid}/';
};

export type RancherAppsPartialUpdateResponses = {
    200: RancherApplication;
};

export type RancherAppsPartialUpdateResponse = RancherAppsPartialUpdateResponses[keyof RancherAppsPartialUpdateResponses];

export type RancherAppsUpdateData = {
    body: RancherApplicationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-apps/{uuid}/';
};

export type RancherAppsUpdateResponses = {
    200: RancherApplication;
};

export type RancherAppsUpdateResponse = RancherAppsUpdateResponses[keyof RancherAppsUpdateResponses];

export type RancherAppsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-apps/{uuid}/pull/';
};

export type RancherAppsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherAppsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-apps/{uuid}/unlink/';
};

export type RancherAppsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherCatalogsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-catalogs/';
};

export type RancherCatalogsListResponses = {
    200: Array<RancherCatalog>;
};

export type RancherCatalogsListResponse = RancherCatalogsListResponses[keyof RancherCatalogsListResponses];

export type RancherCatalogsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-catalogs/';
};

export type RancherCatalogsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherCatalogsCreateData = {
    body: RancherCatalogCreateRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-catalogs/';
};

export type RancherCatalogsCreateResponses = {
    201: RancherCatalogCreate;
};

export type RancherCatalogsCreateResponse = RancherCatalogsCreateResponses[keyof RancherCatalogsCreateResponses];

export type RancherCatalogsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-catalogs/{uuid}/';
};

export type RancherCatalogsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherCatalogsDestroyResponse = RancherCatalogsDestroyResponses[keyof RancherCatalogsDestroyResponses];

export type RancherCatalogsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-catalogs/{uuid}/';
};

export type RancherCatalogsRetrieveResponses = {
    200: RancherCatalog;
};

export type RancherCatalogsRetrieveResponse = RancherCatalogsRetrieveResponses[keyof RancherCatalogsRetrieveResponses];

export type RancherCatalogsPartialUpdateData = {
    body?: PatchedRancherCatalogRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-catalogs/{uuid}/';
};

export type RancherCatalogsPartialUpdateResponses = {
    200: RancherCatalog;
};

export type RancherCatalogsPartialUpdateResponse = RancherCatalogsPartialUpdateResponses[keyof RancherCatalogsPartialUpdateResponses];

export type RancherCatalogsUpdateData = {
    body: RancherCatalogUpdateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-catalogs/{uuid}/';
};

export type RancherCatalogsUpdateResponses = {
    200: RancherCatalogUpdate;
};

export type RancherCatalogsUpdateResponse = RancherCatalogsUpdateResponses[keyof RancherCatalogsUpdateResponses];

export type RancherCatalogsRefreshData = {
    body: RancherCatalogRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-catalogs/{uuid}/refresh/';
};

export type RancherCatalogsRefreshResponses = {
    200: RancherCatalog;
};

export type RancherCatalogsRefreshResponse = RancherCatalogsRefreshResponses[keyof RancherCatalogsRefreshResponses];

export type RancherClusterSecurityGroupsListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-cluster-security-groups/';
};

export type RancherClusterSecurityGroupsListResponses = {
    200: Array<ClusterSecurityGroup>;
};

export type RancherClusterSecurityGroupsListResponse = RancherClusterSecurityGroupsListResponses[keyof RancherClusterSecurityGroupsListResponses];

export type RancherClusterSecurityGroupsCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-cluster-security-groups/';
};

export type RancherClusterSecurityGroupsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherClusterSecurityGroupsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-cluster-security-groups/{uuid}/';
};

export type RancherClusterSecurityGroupsRetrieveResponses = {
    200: ClusterSecurityGroup;
};

export type RancherClusterSecurityGroupsRetrieveResponse = RancherClusterSecurityGroupsRetrieveResponses[keyof RancherClusterSecurityGroupsRetrieveResponses];

export type RancherClusterSecurityGroupsPartialUpdateData = {
    body?: PatchedClusterSecurityGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-cluster-security-groups/{uuid}/';
};

export type RancherClusterSecurityGroupsPartialUpdateResponses = {
    200: ClusterSecurityGroup;
};

export type RancherClusterSecurityGroupsPartialUpdateResponse = RancherClusterSecurityGroupsPartialUpdateResponses[keyof RancherClusterSecurityGroupsPartialUpdateResponses];

export type RancherClusterSecurityGroupsUpdateData = {
    body: ClusterSecurityGroupRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-cluster-security-groups/{uuid}/';
};

export type RancherClusterSecurityGroupsUpdateResponses = {
    200: ClusterSecurityGroup;
};

export type RancherClusterSecurityGroupsUpdateResponse = RancherClusterSecurityGroupsUpdateResponses[keyof RancherClusterSecurityGroupsUpdateResponses];

export type RancherClusterTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-cluster-templates/';
};

export type RancherClusterTemplatesListResponses = {
    200: Array<RancherClusterTemplate>;
};

export type RancherClusterTemplatesListResponse = RancherClusterTemplatesListResponses[keyof RancherClusterTemplatesListResponses];

export type RancherClusterTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-cluster-templates/';
};

export type RancherClusterTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherClusterTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-cluster-templates/{uuid}/';
};

export type RancherClusterTemplatesRetrieveResponses = {
    200: RancherClusterTemplate;
};

export type RancherClusterTemplatesRetrieveResponse = RancherClusterTemplatesRetrieveResponses[keyof RancherClusterTemplatesRetrieveResponses];

export type RancherClustersListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'capacity' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'install_longhorn' | 'is_limit_based' | 'is_usage_based' | 'kubernetes_version' | 'management_security_group' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'nodes' | 'project' | 'project_name' | 'project_uuid' | 'public_ips' | 'requested' | 'resource_type' | 'router_ips' | 'runtime_state' | 'security_groups' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'ssh_public_key' | 'state' | 'tenant' | 'tenant_uuid' | 'url' | 'uuid' | 'vm_project'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-clusters/';
};

export type RancherClustersListResponses = {
    200: Array<RancherCluster>;
};

export type RancherClustersListResponse = RancherClustersListResponses[keyof RancherClustersListResponses];

export type RancherClustersCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-clusters/';
};

export type RancherClustersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherClustersCreateData = {
    body: RancherClusterRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-clusters/';
};

export type RancherClustersCreateResponses = {
    201: RancherCluster;
};

export type RancherClustersCreateResponse = RancherClustersCreateResponses[keyof RancherClustersCreateResponses];

export type RancherClustersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/';
};

export type RancherClustersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherClustersDestroyResponse = RancherClustersDestroyResponses[keyof RancherClustersDestroyResponses];

export type RancherClustersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'capacity' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'install_longhorn' | 'is_limit_based' | 'is_usage_based' | 'kubernetes_version' | 'management_security_group' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'nodes' | 'project' | 'project_name' | 'project_uuid' | 'public_ips' | 'requested' | 'resource_type' | 'router_ips' | 'runtime_state' | 'security_groups' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'ssh_public_key' | 'state' | 'tenant' | 'tenant_uuid' | 'url' | 'uuid' | 'vm_project'>;
    };
    url: '/api/rancher-clusters/{uuid}/';
};

export type RancherClustersRetrieveResponses = {
    200: RancherCluster;
};

export type RancherClustersRetrieveResponse = RancherClustersRetrieveResponses[keyof RancherClustersRetrieveResponses];

export type RancherClustersPartialUpdateData = {
    body?: PatchedRancherClusterRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/';
};

export type RancherClustersPartialUpdateResponses = {
    200: RancherCluster;
};

export type RancherClustersPartialUpdateResponse = RancherClustersPartialUpdateResponses[keyof RancherClustersPartialUpdateResponses];

export type RancherClustersUpdateData = {
    body: RancherClusterRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/';
};

export type RancherClustersUpdateResponses = {
    200: RancherCluster;
};

export type RancherClustersUpdateResponse = RancherClustersUpdateResponses[keyof RancherClustersUpdateResponses];

export type RancherClustersCreateManagementSecurityGroupData = {
    body: RancherClusterRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/create_management_security_group/';
};

export type RancherClustersCreateManagementSecurityGroupResponses = {
    200: RancherCluster;
};

export type RancherClustersCreateManagementSecurityGroupResponse = RancherClustersCreateManagementSecurityGroupResponses[keyof RancherClustersCreateManagementSecurityGroupResponses];

export type RancherClustersImportYamlData = {
    body: RancherImportYamlRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/import_yaml/';
};

export type RancherClustersImportYamlResponses = {
    200: RancherImportYaml;
};

export type RancherClustersImportYamlResponse = RancherClustersImportYamlResponses[keyof RancherClustersImportYamlResponses];

export type RancherClustersPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/pull/';
};

export type RancherClustersPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherClustersUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-clusters/{uuid}/unlink/';
};

export type RancherClustersUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherHpasListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
        workload_uuid?: string;
    };
    url: '/api/rancher-hpas/';
};

export type RancherHpasListResponses = {
    200: Array<RancherHpa>;
};

export type RancherHpasListResponse = RancherHpasListResponses[keyof RancherHpasListResponses];

export type RancherHpasCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
        workload_uuid?: string;
    };
    url: '/api/rancher-hpas/';
};

export type RancherHpasCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherHpasCreateData = {
    body: RancherHpaRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-hpas/';
};

export type RancherHpasCreateResponses = {
    201: RancherHpa;
};

export type RancherHpasCreateResponse = RancherHpasCreateResponses[keyof RancherHpasCreateResponses];

export type RancherHpasDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/';
};

export type RancherHpasDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherHpasDestroyResponse = RancherHpasDestroyResponses[keyof RancherHpasDestroyResponses];

export type RancherHpasRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/';
};

export type RancherHpasRetrieveResponses = {
    200: RancherHpa;
};

export type RancherHpasRetrieveResponse = RancherHpasRetrieveResponses[keyof RancherHpasRetrieveResponses];

export type RancherHpasPartialUpdateData = {
    body?: PatchedRancherHpaRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/';
};

export type RancherHpasPartialUpdateResponses = {
    200: RancherHpa;
};

export type RancherHpasPartialUpdateResponse = RancherHpasPartialUpdateResponses[keyof RancherHpasPartialUpdateResponses];

export type RancherHpasUpdateData = {
    body: RancherHpaRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/';
};

export type RancherHpasUpdateResponses = {
    200: RancherHpa;
};

export type RancherHpasUpdateResponse = RancherHpasUpdateResponses[keyof RancherHpasUpdateResponses];

export type RancherHpasPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/pull/';
};

export type RancherHpasPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherHpasUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/unlink/';
};

export type RancherHpasUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherHpasYamlRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/yaml/';
};

export type RancherHpasYamlRetrieveResponses = {
    200: RancherHpa;
};

export type RancherHpasYamlRetrieveResponse = RancherHpasYamlRetrieveResponses[keyof RancherHpasYamlRetrieveResponses];

export type RancherHpasYamlUpdateData = {
    body: RancherHpaRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-hpas/{uuid}/yaml/';
};

export type RancherHpasYamlUpdateResponses = {
    200: RancherHpa;
};

export type RancherHpasYamlUpdateResponse = RancherHpasYamlUpdateResponses[keyof RancherHpasYamlUpdateResponses];

export type RancherIngressesListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'rancher_project' | 'rancher_project_name' | 'resource_type' | 'rules' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        rancher_project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-ingresses/';
};

export type RancherIngressesListResponses = {
    200: Array<RancherIngress>;
};

export type RancherIngressesListResponse = RancherIngressesListResponses[keyof RancherIngressesListResponses];

export type RancherIngressesCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        rancher_project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-ingresses/';
};

export type RancherIngressesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherIngressesCreateData = {
    body: RancherIngressRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-ingresses/';
};

export type RancherIngressesCreateResponses = {
    201: RancherIngress;
};

export type RancherIngressesCreateResponse = RancherIngressesCreateResponses[keyof RancherIngressesCreateResponses];

export type RancherIngressesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/';
};

export type RancherIngressesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherIngressesDestroyResponse = RancherIngressesDestroyResponses[keyof RancherIngressesDestroyResponses];

export type RancherIngressesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'rancher_project' | 'rancher_project_name' | 'resource_type' | 'rules' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/rancher-ingresses/{uuid}/';
};

export type RancherIngressesRetrieveResponses = {
    200: RancherIngress;
};

export type RancherIngressesRetrieveResponse = RancherIngressesRetrieveResponses[keyof RancherIngressesRetrieveResponses];

export type RancherIngressesPartialUpdateData = {
    body?: PatchedRancherIngressRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/';
};

export type RancherIngressesPartialUpdateResponses = {
    200: RancherIngress;
};

export type RancherIngressesPartialUpdateResponse = RancherIngressesPartialUpdateResponses[keyof RancherIngressesPartialUpdateResponses];

export type RancherIngressesUpdateData = {
    body: RancherIngressRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/';
};

export type RancherIngressesUpdateResponses = {
    200: RancherIngress;
};

export type RancherIngressesUpdateResponse = RancherIngressesUpdateResponses[keyof RancherIngressesUpdateResponses];

export type RancherIngressesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/pull/';
};

export type RancherIngressesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherIngressesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/unlink/';
};

export type RancherIngressesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherIngressesYamlRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'rancher_project' | 'rancher_project_name' | 'resource_type' | 'rules' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid'>;
    };
    url: '/api/rancher-ingresses/{uuid}/yaml/';
};

export type RancherIngressesYamlRetrieveResponses = {
    200: RancherIngress;
};

export type RancherIngressesYamlRetrieveResponse = RancherIngressesYamlRetrieveResponses[keyof RancherIngressesYamlRetrieveResponses];

export type RancherIngressesYamlUpdateData = {
    body: RancherIngressRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-ingresses/{uuid}/yaml/';
};

export type RancherIngressesYamlUpdateResponses = {
    200: RancherIngress;
};

export type RancherIngressesYamlUpdateResponse = RancherIngressesYamlUpdateResponses[keyof RancherIngressesYamlUpdateResponses];

export type RancherNamespacesListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cluster_name' | '-name' | '-project_name' | 'cluster_name' | 'name' | 'project_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-namespaces/';
};

export type RancherNamespacesListResponses = {
    200: Array<RancherNamespace>;
};

export type RancherNamespacesListResponse = RancherNamespacesListResponses[keyof RancherNamespacesListResponses];

export type RancherNamespacesCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cluster_name' | '-name' | '-project_name' | 'cluster_name' | 'name' | 'project_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-namespaces/';
};

export type RancherNamespacesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherNamespacesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-namespaces/{uuid}/';
};

export type RancherNamespacesRetrieveResponses = {
    200: RancherNamespace;
};

export type RancherNamespacesRetrieveResponse = RancherNamespacesRetrieveResponses[keyof RancherNamespacesRetrieveResponses];

export type RancherNodesListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-nodes/';
};

export type RancherNodesListResponses = {
    200: Array<RancherNode>;
};

export type RancherNodesListResponse = RancherNodesListResponses[keyof RancherNodesListResponses];

export type RancherNodesCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/rancher-nodes/';
};

export type RancherNodesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherNodesCreateData = {
    body: RancherCreateNodeRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-nodes/';
};

export type RancherNodesCreateResponses = {
    201: RancherCreateNode;
};

export type RancherNodesCreateResponse = RancherNodesCreateResponses[keyof RancherNodesCreateResponses];

export type RancherNodesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/';
};

export type RancherNodesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherNodesDestroyResponse = RancherNodesDestroyResponses[keyof RancherNodesDestroyResponses];

export type RancherNodesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/';
};

export type RancherNodesRetrieveResponses = {
    200: RancherNode;
};

export type RancherNodesRetrieveResponse = RancherNodesRetrieveResponses[keyof RancherNodesRetrieveResponses];

export type RancherNodesConsoleRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/console/';
};

export type RancherNodesConsoleRetrieveResponses = {
    200: ConsoleUrl;
};

export type RancherNodesConsoleRetrieveResponse = RancherNodesConsoleRetrieveResponses[keyof RancherNodesConsoleRetrieveResponses];

export type RancherNodesConsoleLogRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        length?: number;
    };
    url: '/api/rancher-nodes/{uuid}/console_log/';
};

export type RancherNodesConsoleLogRetrieveErrors = {
    /**
     * No response body
     */
    404: unknown;
};

export type RancherNodesConsoleLogRetrieveResponses = {
    200: string;
};

export type RancherNodesConsoleLogRetrieveResponse = RancherNodesConsoleLogRetrieveResponses[keyof RancherNodesConsoleLogRetrieveResponses];

export type RancherNodesLinkOpenstackData = {
    body: LinkOpenstackRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/link_openstack/';
};

export type RancherNodesLinkOpenstackResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherNodesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/pull/';
};

export type RancherNodesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherNodesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/unlink/';
};

export type RancherNodesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherNodesUnlinkOpenstackData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-nodes/{uuid}/unlink_openstack/';
};

export type RancherNodesUnlinkOpenstackResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherProjectsListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-projects/';
};

export type RancherProjectsListResponses = {
    200: Array<RancherProject>;
};

export type RancherProjectsListResponse = RancherProjectsListResponses[keyof RancherProjectsListResponses];

export type RancherProjectsCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-projects/';
};

export type RancherProjectsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherProjectsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-projects/{uuid}/';
};

export type RancherProjectsRetrieveResponses = {
    200: RancherProject;
};

export type RancherProjectsRetrieveResponse = RancherProjectsRetrieveResponses[keyof RancherProjectsRetrieveResponses];

export type RancherProjectsSecretsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-projects/{uuid}/secrets/';
};

export type RancherProjectsSecretsRetrieveResponses = {
    200: RancherProject;
};

export type RancherProjectsSecretsRetrieveResponse = RancherProjectsSecretsRetrieveResponses[keyof RancherProjectsSecretsRetrieveResponses];

export type RancherRoleTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-name' | '-scope_type' | 'name' | 'scope_type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope_type?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-role-templates/';
};

export type RancherRoleTemplatesListResponses = {
    200: Array<RoleTemplate>;
};

export type RancherRoleTemplatesListResponse = RancherRoleTemplatesListResponses[keyof RancherRoleTemplatesListResponses];

export type RancherRoleTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-name' | '-scope_type' | 'name' | 'scope_type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        scope_type?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-role-templates/';
};

export type RancherRoleTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherRoleTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-role-templates/{uuid}/';
};

export type RancherRoleTemplatesRetrieveResponses = {
    200: RoleTemplate;
};

export type RancherRoleTemplatesRetrieveResponse = RancherRoleTemplatesRetrieveResponses[keyof RancherRoleTemplatesRetrieveResponses];

export type RancherServicesListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cluster_ip' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'selector' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'target_workloads' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        rancher_project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-services/';
};

export type RancherServicesListResponses = {
    200: Array<RancherService>;
};

export type RancherServicesListResponse = RancherServicesListResponses[keyof RancherServicesListResponses];

export type RancherServicesCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        cluster_uuid?: string;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        rancher_project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/rancher-services/';
};

export type RancherServicesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherServicesCreateData = {
    body: RancherServiceRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-services/';
};

export type RancherServicesCreateResponses = {
    201: RancherService;
};

export type RancherServicesCreateResponse = RancherServicesCreateResponses[keyof RancherServicesCreateResponses];

export type RancherServicesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/';
};

export type RancherServicesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherServicesDestroyResponse = RancherServicesDestroyResponses[keyof RancherServicesDestroyResponses];

export type RancherServicesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cluster_ip' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'selector' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'target_workloads' | 'url' | 'uuid'>;
    };
    url: '/api/rancher-services/{uuid}/';
};

export type RancherServicesRetrieveResponses = {
    200: RancherService;
};

export type RancherServicesRetrieveResponse = RancherServicesRetrieveResponses[keyof RancherServicesRetrieveResponses];

export type RancherServicesPartialUpdateData = {
    body?: PatchedRancherServiceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/';
};

export type RancherServicesPartialUpdateResponses = {
    200: RancherService;
};

export type RancherServicesPartialUpdateResponse = RancherServicesPartialUpdateResponses[keyof RancherServicesPartialUpdateResponses];

export type RancherServicesUpdateData = {
    body: RancherServiceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/';
};

export type RancherServicesUpdateResponses = {
    200: RancherService;
};

export type RancherServicesUpdateResponse = RancherServicesUpdateResponses[keyof RancherServicesUpdateResponses];

export type RancherServicesPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/pull/';
};

export type RancherServicesPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherServicesUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/unlink/';
};

export type RancherServicesUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherServicesYamlRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cluster_ip' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'namespace' | 'namespace_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'runtime_state' | 'selector' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'target_workloads' | 'url' | 'uuid'>;
    };
    url: '/api/rancher-services/{uuid}/yaml/';
};

export type RancherServicesYamlRetrieveResponses = {
    200: RancherService;
};

export type RancherServicesYamlRetrieveResponse = RancherServicesYamlRetrieveResponses[keyof RancherServicesYamlRetrieveResponses];

export type RancherServicesYamlUpdateData = {
    body: RancherServiceRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-services/{uuid}/yaml/';
};

export type RancherServicesYamlUpdateResponses = {
    200: RancherService;
};

export type RancherServicesYamlUpdateResponse = RancherServicesYamlUpdateResponses[keyof RancherServicesYamlUpdateResponses];

export type RancherTemplateVersionsRetrieveData = {
    body?: never;
    path: {
        template_uuid: string;
        version: string;
    };
    query?: never;
    url: '/api/rancher-template-versions/{template_uuid}/{version}/';
};

export type RancherTemplateVersionsRetrieveResponses = {
    200: TemplateVersion;
};

export type RancherTemplateVersionsRetrieveResponse = RancherTemplateVersionsRetrieveResponses[keyof RancherTemplateVersionsRetrieveResponses];

export type RancherTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        catalog_uuid?: string;
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-catalog_name' | '-name' | 'catalog_name' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-templates/';
};

export type RancherTemplatesListResponses = {
    200: Array<RancherTemplate>;
};

export type RancherTemplatesListResponse = RancherTemplatesListResponses[keyof RancherTemplatesListResponses];

export type RancherTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        catalog_uuid?: string;
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-catalog_name' | '-name' | 'catalog_name' | 'name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-templates/';
};

export type RancherTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-templates/{uuid}/';
};

export type RancherTemplatesRetrieveResponses = {
    200: RancherTemplate;
};

export type RancherTemplatesRetrieveResponse = RancherTemplatesRetrieveResponses[keyof RancherTemplatesRetrieveResponses];

export type RancherUsersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Cluster UUID
         */
        cluster_uuid?: string;
        is_active?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings_uuid?: string;
        /**
         * User full name contains
         */
        user_full_name?: string;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/rancher-users/';
};

export type RancherUsersListResponses = {
    200: Array<RancherUser>;
};

export type RancherUsersListResponse = RancherUsersListResponses[keyof RancherUsersListResponses];

export type RancherUsersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Cluster UUID
         */
        cluster_uuid?: string;
        is_active?: boolean;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings_uuid?: string;
        /**
         * User full name contains
         */
        user_full_name?: string;
        user_username?: string;
        user_uuid?: string;
    };
    url: '/api/rancher-users/';
};

export type RancherUsersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherUsersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-users/{uuid}/';
};

export type RancherUsersRetrieveResponses = {
    200: RancherUser;
};

export type RancherUsersRetrieveResponse = RancherUsersRetrieveResponses[keyof RancherUsersRetrieveResponses];

export type RancherWorkloadsListData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cluster_name' | '-name' | '-namespace_name' | '-project_name' | 'cluster_name' | 'name' | 'namespace_name' | 'project_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-workloads/';
};

export type RancherWorkloadsListResponses = {
    200: Array<RancherWorkload>;
};

export type RancherWorkloadsListResponse = RancherWorkloadsListResponses[keyof RancherWorkloadsListResponses];

export type RancherWorkloadsCountData = {
    body?: never;
    path?: never;
    query?: {
        cluster_uuid?: string;
        name?: string;
        name_exact?: string;
        namespace_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-cluster_name' | '-name' | '-namespace_name' | '-project_name' | 'cluster_name' | 'name' | 'namespace_name' | 'project_name'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project_uuid?: string;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/rancher-workloads/';
};

export type RancherWorkloadsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherWorkloadsCreateData = {
    body: RancherWorkloadRequest;
    path?: never;
    query?: never;
    url: '/api/rancher-workloads/';
};

export type RancherWorkloadsCreateResponses = {
    201: RancherWorkload;
};

export type RancherWorkloadsCreateResponse = RancherWorkloadsCreateResponses[keyof RancherWorkloadsCreateResponses];

export type RancherWorkloadsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/';
};

export type RancherWorkloadsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RancherWorkloadsDestroyResponse = RancherWorkloadsDestroyResponses[keyof RancherWorkloadsDestroyResponses];

export type RancherWorkloadsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/';
};

export type RancherWorkloadsRetrieveResponses = {
    200: RancherWorkload;
};

export type RancherWorkloadsRetrieveResponse = RancherWorkloadsRetrieveResponses[keyof RancherWorkloadsRetrieveResponses];

export type RancherWorkloadsPartialUpdateData = {
    body?: PatchedRancherWorkloadRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/';
};

export type RancherWorkloadsPartialUpdateResponses = {
    200: RancherWorkload;
};

export type RancherWorkloadsPartialUpdateResponse = RancherWorkloadsPartialUpdateResponses[keyof RancherWorkloadsPartialUpdateResponses];

export type RancherWorkloadsUpdateData = {
    body: RancherWorkloadRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/';
};

export type RancherWorkloadsUpdateResponses = {
    200: RancherWorkload;
};

export type RancherWorkloadsUpdateResponse = RancherWorkloadsUpdateResponses[keyof RancherWorkloadsUpdateResponses];

export type RancherWorkloadsRedeployData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/redeploy/';
};

export type RancherWorkloadsRedeployResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RancherWorkloadsYamlRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/yaml/';
};

export type RancherWorkloadsYamlRetrieveResponses = {
    200: RancherWorkload;
};

export type RancherWorkloadsYamlRetrieveResponse = RancherWorkloadsYamlRetrieveResponses[keyof RancherWorkloadsYamlRetrieveResponses];

export type RancherWorkloadsYamlUpdateData = {
    body: RancherWorkloadRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/rancher-workloads/{uuid}/yaml/';
};

export type RancherWorkloadsYamlUpdateResponses = {
    200: RancherWorkload;
};

export type RancherWorkloadsYamlUpdateResponse = RancherWorkloadsYamlUpdateResponses[keyof RancherWorkloadsYamlUpdateResponses];

export type RemoteEduteamsData = {
    body: RemoteEduteamsRequestRequest;
    path?: never;
    query?: never;
    url: '/api/remote-eduteams/';
};

export type RemoteEduteamsResponses = {
    200: RemoteEduteamsUuid;
};

export type RemoteEduteamsResponse = RemoteEduteamsResponses[keyof RemoteEduteamsResponses];

export type RemoteWaldurApiCancelTerminationData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/cancel_termination/{uuid}';
};

export type RemoteWaldurApiCancelTerminationResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiImportOfferingData = {
    body: RemoteOfferingCreateRequest;
    path?: never;
    query?: never;
    url: '/api/remote-waldur-api/import_offering/';
};

export type RemoteWaldurApiImportOfferingResponses = {
    200: RemoteOfferingCreateResponse;
};

export type RemoteWaldurApiImportOfferingResponse = RemoteWaldurApiImportOfferingResponses[keyof RemoteWaldurApiImportOfferingResponses];

export type RemoteWaldurApiPullOfferingDetailsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_details/{uuid}/';
};

export type RemoteWaldurApiPullOfferingDetailsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingInvoicesData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_invoices/{uuid}/';
};

export type RemoteWaldurApiPullOfferingInvoicesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingOrdersData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_orders/{uuid}/';
};

export type RemoteWaldurApiPullOfferingOrdersResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingResourcesData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_resources/{uuid}/';
};

export type RemoteWaldurApiPullOfferingResourcesResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingRobotAccountsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_robot_accounts/{uuid}/';
};

export type RemoteWaldurApiPullOfferingRobotAccountsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingUsageData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_usage/{uuid}/';
};

export type RemoteWaldurApiPullOfferingUsageResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOfferingUsersData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_offering_users/{uuid}/';
};

export type RemoteWaldurApiPullOfferingUsersResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPullOrderData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/pull_order/{uuid}';
};

export type RemoteWaldurApiPullOrderResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiPushProjectDataData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/push_project_data/{uuid}/';
};

export type RemoteWaldurApiPushProjectDataResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiRemoteCategoriesData = {
    body: RemoteCredentialsRequest;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/remote-waldur-api/remote_categories/';
};

export type RemoteWaldurApiRemoteCategoriesResponses = {
    200: Array<MarketplaceCategory>;
};

export type RemoteWaldurApiRemoteCategoriesResponse = RemoteWaldurApiRemoteCategoriesResponses[keyof RemoteWaldurApiRemoteCategoriesResponses];

export type RemoteWaldurApiRemoteCustomersData = {
    body: RemoteCredentialsRequest;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/remote-waldur-api/remote_customers/';
};

export type RemoteWaldurApiRemoteCustomersResponses = {
    200: Array<RemoteCustomer>;
};

export type RemoteWaldurApiRemoteCustomersResponse = RemoteWaldurApiRemoteCustomersResponses[keyof RemoteWaldurApiRemoteCustomersResponses];

export type RemoteWaldurApiSharedOfferingsData = {
    body: RemoteCredentialsRequest;
    path?: never;
    query?: {
        customer_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/remote-waldur-api/shared_offerings/';
};

export type RemoteWaldurApiSharedOfferingsResponses = {
    200: Array<RemoteOffering>;
};

export type RemoteWaldurApiSharedOfferingsResponse = RemoteWaldurApiSharedOfferingsResponses[keyof RemoteWaldurApiSharedOfferingsResponses];

export type RemoteWaldurApiSyncResourceData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/sync_resource/{uuid}/';
};

export type RemoteWaldurApiSyncResourceResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RemoteWaldurApiSyncResourceProjectPermissionsData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/remote-waldur-api/sync_resource_project_permissions/{uuid}/';
};

export type RemoteWaldurApiSyncResourceProjectPermissionsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RolesListData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        field?: Array<'content_type' | 'description' | 'description_ar' | 'description_cs' | 'description_da' | 'description_de' | 'description_en' | 'description_es' | 'description_et' | 'description_fr' | 'description_it' | 'description_lt' | 'description_lv' | 'description_nb' | 'description_ru' | 'description_sv' | 'is_active' | 'is_system_role' | 'name' | 'permissions' | 'users_count' | 'uuid'>;
        is_active?: boolean;
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/roles/';
};

export type RolesListResponses = {
    200: Array<RoleDetails>;
};

export type RolesListResponse = RolesListResponses[keyof RolesListResponses];

export type RolesCountData = {
    body?: never;
    path?: never;
    query?: {
        description?: string;
        is_active?: boolean;
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/roles/';
};

export type RolesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RolesCreateData = {
    body: RoleModifyRequest;
    path?: never;
    query?: never;
    url: '/api/roles/';
};

export type RolesCreateResponses = {
    201: RoleDetails;
};

export type RolesCreateResponse = RolesCreateResponses[keyof RolesCreateResponses];

export type RolesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/';
};

export type RolesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type RolesDestroyResponse = RolesDestroyResponses[keyof RolesDestroyResponses];

export type RolesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'content_type' | 'description' | 'description_ar' | 'description_cs' | 'description_da' | 'description_de' | 'description_en' | 'description_es' | 'description_et' | 'description_fr' | 'description_it' | 'description_lt' | 'description_lv' | 'description_nb' | 'description_ru' | 'description_sv' | 'is_active' | 'is_system_role' | 'name' | 'permissions' | 'users_count' | 'uuid'>;
    };
    url: '/api/roles/{uuid}/';
};

export type RolesRetrieveResponses = {
    200: RoleDetails;
};

export type RolesRetrieveResponse = RolesRetrieveResponses[keyof RolesRetrieveResponses];

export type RolesPartialUpdateData = {
    body?: PatchedRoleDetailsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/';
};

export type RolesPartialUpdateResponses = {
    200: RoleDetails;
};

export type RolesPartialUpdateResponse = RolesPartialUpdateResponses[keyof RolesPartialUpdateResponses];

export type RolesUpdateData = {
    body: RoleModifyRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/';
};

export type RolesUpdateResponses = {
    200: RoleDetails;
};

export type RolesUpdateResponse = RolesUpdateResponses[keyof RolesUpdateResponses];

export type RolesDisableData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/disable/';
};

export type RolesDisableResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RolesEnableData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/enable/';
};

export type RolesEnableResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type RolesUpdateDescriptionsUpdateData = {
    body?: RoleDescriptionRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/roles/{uuid}/update_descriptions/';
};

export type RolesUpdateDescriptionsUpdateResponses = {
    200: RoleDescription;
};

export type RolesUpdateDescriptionsUpdateResponse = RolesUpdateDescriptionsUpdateResponses[keyof RolesUpdateDescriptionsUpdateResponses];

export type ServiceSettingsListData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        field?: Array<'customer' | 'customer_name' | 'customer_native_name' | 'error_message' | 'name' | 'options' | 'scope' | 'scope_uuid' | 'shared' | 'state' | 'terms_of_services' | 'type' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        shared?: boolean;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        type?: string;
    };
    url: '/api/service-settings/';
};

export type ServiceSettingsListResponses = {
    200: Array<ServiceSettings>;
};

export type ServiceSettingsListResponse = ServiceSettingsListResponses[keyof ServiceSettingsListResponses];

export type ServiceSettingsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer?: string;
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * Which field to use when ordering the results.
         */
        o?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        shared?: boolean;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        type?: string;
    };
    url: '/api/service-settings/';
};

export type ServiceSettingsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type ServiceSettingsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'customer' | 'customer_name' | 'customer_native_name' | 'error_message' | 'name' | 'options' | 'scope' | 'scope_uuid' | 'shared' | 'state' | 'terms_of_services' | 'type' | 'url' | 'uuid'>;
    };
    url: '/api/service-settings/{uuid}/';
};

export type ServiceSettingsRetrieveResponses = {
    200: ServiceSettings;
};

export type ServiceSettingsRetrieveResponse = ServiceSettingsRetrieveResponses[keyof ServiceSettingsRetrieveResponses];

export type SlurmAllocationUserUsageListData = {
    body?: never;
    path?: never;
    query?: {
        allocation?: string;
        allocation_uuid?: string;
        month?: number;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: string;
        user_uuid?: string;
        year?: number;
    };
    url: '/api/slurm-allocation-user-usage/';
};

export type SlurmAllocationUserUsageListResponses = {
    200: Array<SlurmAllocationUserUsage>;
};

export type SlurmAllocationUserUsageListResponse = SlurmAllocationUserUsageListResponses[keyof SlurmAllocationUserUsageListResponses];

export type SlurmAllocationUserUsageCountData = {
    body?: never;
    path?: never;
    query?: {
        allocation?: string;
        allocation_uuid?: string;
        month?: number;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: string;
        user_uuid?: string;
        year?: number;
    };
    url: '/api/slurm-allocation-user-usage/';
};

export type SlurmAllocationUserUsageCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmAllocationUserUsageRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this allocation user usage.
         */
        id: number;
    };
    query?: never;
    url: '/api/slurm-allocation-user-usage/{id}/';
};

export type SlurmAllocationUserUsageRetrieveResponses = {
    200: SlurmAllocationUserUsage;
};

export type SlurmAllocationUserUsageRetrieveResponse = SlurmAllocationUserUsageRetrieveResponses[keyof SlurmAllocationUserUsageRetrieveResponses];

export type SlurmAllocationsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cpu_limit' | 'cpu_usage' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'gateway' | 'gpu_limit' | 'gpu_usage' | 'is_active' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram_limit' | 'ram_usage' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'username' | 'uuid'>;
        is_active?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/slurm-allocations/';
};

export type SlurmAllocationsListResponses = {
    200: Array<SlurmAllocation>;
};

export type SlurmAllocationsListResponse = SlurmAllocationsListResponses[keyof SlurmAllocationsListResponses];

export type SlurmAllocationsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        is_active?: boolean;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/slurm-allocations/';
};

export type SlurmAllocationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmAllocationsCreateData = {
    body: SlurmAllocationRequest;
    path?: never;
    query?: never;
    url: '/api/slurm-allocations/';
};

export type SlurmAllocationsCreateResponses = {
    201: SlurmAllocation;
};

export type SlurmAllocationsCreateResponse = SlurmAllocationsCreateResponses[keyof SlurmAllocationsCreateResponses];

export type SlurmAllocationsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/';
};

export type SlurmAllocationsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SlurmAllocationsDestroyResponse = SlurmAllocationsDestroyResponses[keyof SlurmAllocationsDestroyResponses];

export type SlurmAllocationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cpu_limit' | 'cpu_usage' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'gateway' | 'gpu_limit' | 'gpu_usage' | 'is_active' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'ram_limit' | 'ram_usage' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/slurm-allocations/{uuid}/';
};

export type SlurmAllocationsRetrieveResponses = {
    200: SlurmAllocation;
};

export type SlurmAllocationsRetrieveResponse = SlurmAllocationsRetrieveResponses[keyof SlurmAllocationsRetrieveResponses];

export type SlurmAllocationsPartialUpdateData = {
    body?: PatchedSlurmAllocationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/';
};

export type SlurmAllocationsPartialUpdateResponses = {
    200: SlurmAllocation;
};

export type SlurmAllocationsPartialUpdateResponse = SlurmAllocationsPartialUpdateResponses[keyof SlurmAllocationsPartialUpdateResponses];

export type SlurmAllocationsUpdateData = {
    body: SlurmAllocationRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/';
};

export type SlurmAllocationsUpdateResponses = {
    200: SlurmAllocation;
};

export type SlurmAllocationsUpdateResponse = SlurmAllocationsUpdateResponses[keyof SlurmAllocationsUpdateResponses];

export type SlurmAllocationsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/pull/';
};

export type SlurmAllocationsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmAllocationsSetLimitsData = {
    body: SlurmAllocationSetLimitsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/set_limits/';
};

export type SlurmAllocationsSetLimitsResponses = {
    200: SlurmAllocationSetLimits;
};

export type SlurmAllocationsSetLimitsResponse = SlurmAllocationsSetLimitsResponses[keyof SlurmAllocationsSetLimitsResponses];

export type SlurmAllocationsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-allocations/{uuid}/unlink/';
};

export type SlurmAllocationsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmAssociationsListData = {
    body?: never;
    path?: never;
    query?: {
        allocation?: string;
        allocation_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/slurm-associations/';
};

export type SlurmAssociationsListResponses = {
    200: Array<SlurmAssociation>;
};

export type SlurmAssociationsListResponse = SlurmAssociationsListResponses[keyof SlurmAssociationsListResponses];

export type SlurmAssociationsCountData = {
    body?: never;
    path?: never;
    query?: {
        allocation?: string;
        allocation_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/slurm-associations/';
};

export type SlurmAssociationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmAssociationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-associations/{uuid}/';
};

export type SlurmAssociationsRetrieveResponses = {
    200: SlurmAssociation;
};

export type SlurmAssociationsRetrieveResponse = SlurmAssociationsRetrieveResponses[keyof SlurmAssociationsRetrieveResponses];

export type SlurmJobsListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'file' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'report' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'user' | 'user_username' | 'user_uuid' | 'uuid'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/slurm-jobs/';
};

export type SlurmJobsListResponses = {
    200: Array<FirecrestJob>;
};

export type SlurmJobsListResponse = SlurmJobsListResponses[keyof SlurmJobsListResponses];

export type SlurmJobsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/slurm-jobs/';
};

export type SlurmJobsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmJobsCreateData = {
    body: FirecrestJobRequest;
    path?: never;
    query?: never;
    url: '/api/slurm-jobs/';
};

export type SlurmJobsCreateResponses = {
    201: FirecrestJob;
};

export type SlurmJobsCreateResponse = SlurmJobsCreateResponses[keyof SlurmJobsCreateResponses];

export type SlurmJobsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-jobs/{uuid}/';
};

export type SlurmJobsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SlurmJobsDestroyResponse = SlurmJobsDestroyResponses[keyof SlurmJobsDestroyResponses];

export type SlurmJobsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'file' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'report' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'user' | 'user_username' | 'user_uuid' | 'uuid'>;
    };
    url: '/api/slurm-jobs/{uuid}/';
};

export type SlurmJobsRetrieveResponses = {
    200: FirecrestJob;
};

export type SlurmJobsRetrieveResponse = SlurmJobsRetrieveResponses[keyof SlurmJobsRetrieveResponses];

export type SlurmJobsPartialUpdateData = {
    body?: PatchedFirecrestJobRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-jobs/{uuid}/';
};

export type SlurmJobsPartialUpdateResponses = {
    200: FirecrestJob;
};

export type SlurmJobsPartialUpdateResponse = SlurmJobsPartialUpdateResponses[keyof SlurmJobsPartialUpdateResponses];

export type SlurmJobsUpdateData = {
    body: FirecrestJobRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-jobs/{uuid}/';
};

export type SlurmJobsUpdateResponses = {
    200: FirecrestJob;
};

export type SlurmJobsUpdateResponse = SlurmJobsUpdateResponses[keyof SlurmJobsUpdateResponses];

export type SlurmJobsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-jobs/{uuid}/pull/';
};

export type SlurmJobsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SlurmJobsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/slurm-jobs/{uuid}/unlink/';
};

export type SlurmJobsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportAttachmentsListData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'backend_id' | 'created' | 'destroy_is_available' | 'file' | 'file_name' | 'file_size' | 'issue' | 'issue_key' | 'mime_type' | 'url' | 'uuid'>;
        issue?: string;
        issue_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-attachments/';
};

export type SupportAttachmentsListResponses = {
    200: Array<Attachment>;
};

export type SupportAttachmentsListResponse = SupportAttachmentsListResponses[keyof SupportAttachmentsListResponses];

export type SupportAttachmentsCountData = {
    body?: never;
    path?: never;
    query?: {
        issue?: string;
        issue_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-attachments/';
};

export type SupportAttachmentsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportAttachmentsCreateData = {
    body: AttachmentRequest;
    path?: never;
    query?: never;
    url: '/api/support-attachments/';
};

export type SupportAttachmentsCreateResponses = {
    201: Attachment;
};

export type SupportAttachmentsCreateResponse = SupportAttachmentsCreateResponses[keyof SupportAttachmentsCreateResponses];

export type SupportAttachmentsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-attachments/{uuid}/';
};

export type SupportAttachmentsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SupportAttachmentsDestroyResponse = SupportAttachmentsDestroyResponses[keyof SupportAttachmentsDestroyResponses];

export type SupportAttachmentsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'backend_id' | 'created' | 'destroy_is_available' | 'file' | 'file_name' | 'file_size' | 'issue' | 'issue_key' | 'mime_type' | 'url' | 'uuid'>;
    };
    url: '/api/support-attachments/{uuid}/';
};

export type SupportAttachmentsRetrieveResponses = {
    200: Attachment;
};

export type SupportAttachmentsRetrieveResponse = SupportAttachmentsRetrieveResponses[keyof SupportAttachmentsRetrieveResponses];

export type SupportCommentsListData = {
    body?: never;
    path?: never;
    query?: {
        author_name?: string;
        author_user?: string;
        description?: string;
        is_public?: boolean;
        issue?: string;
        issue_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-modified' | 'created' | 'modified'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Remote ID is set.
         */
        remote_id_is_set?: boolean;
    };
    url: '/api/support-comments/';
};

export type SupportCommentsListResponses = {
    200: Array<Comment>;
};

export type SupportCommentsListResponse = SupportCommentsListResponses[keyof SupportCommentsListResponses];

export type SupportCommentsCountData = {
    body?: never;
    path?: never;
    query?: {
        author_name?: string;
        author_user?: string;
        description?: string;
        is_public?: boolean;
        issue?: string;
        issue_uuid?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-modified' | 'created' | 'modified'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Remote ID is set.
         */
        remote_id_is_set?: boolean;
    };
    url: '/api/support-comments/';
};

export type SupportCommentsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportCommentsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-comments/{uuid}/';
};

export type SupportCommentsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SupportCommentsDestroyResponse = SupportCommentsDestroyResponses[keyof SupportCommentsDestroyResponses];

export type SupportCommentsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-comments/{uuid}/';
};

export type SupportCommentsRetrieveResponses = {
    200: Comment;
};

export type SupportCommentsRetrieveResponse = SupportCommentsRetrieveResponses[keyof SupportCommentsRetrieveResponses];

export type SupportCommentsPartialUpdateData = {
    body?: PatchedCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-comments/{uuid}/';
};

export type SupportCommentsPartialUpdateResponses = {
    200: Comment;
};

export type SupportCommentsPartialUpdateResponse = SupportCommentsPartialUpdateResponses[keyof SupportCommentsPartialUpdateResponses];

export type SupportCommentsUpdateData = {
    body: CommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-comments/{uuid}/';
};

export type SupportCommentsUpdateResponses = {
    200: Comment;
};

export type SupportCommentsUpdateResponse = SupportCommentsUpdateResponses[keyof SupportCommentsUpdateResponses];

export type SupportFeedbackAverageReportRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/support-feedback-average-report/';
};

export type SupportFeedbackAverageReportRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportFeedbackReportRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/support-feedback-report/';
};

export type SupportFeedbackReportRetrieveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportFeedbacksListData = {
    body?: never;
    path?: never;
    query?: {
        created_after?: string;
        created_before?: string;
        evaluation?: number;
        issue?: string;
        issue_key?: string;
        issue_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: string;
        /**
         * User full name contains
         */
        user_full_name?: string;
        user_uuid?: string;
    };
    url: '/api/support-feedbacks/';
};

export type SupportFeedbacksListResponses = {
    200: Array<Feedback>;
};

export type SupportFeedbacksListResponse = SupportFeedbacksListResponses[keyof SupportFeedbacksListResponses];

export type SupportFeedbacksCountData = {
    body?: never;
    path?: never;
    query?: {
        created_after?: string;
        created_before?: string;
        evaluation?: number;
        issue?: string;
        issue_key?: string;
        issue_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: string;
        /**
         * User full name contains
         */
        user_full_name?: string;
        user_uuid?: string;
    };
    url: '/api/support-feedbacks/';
};

export type SupportFeedbacksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportFeedbacksCreateData = {
    body: CreateFeedbackRequest;
    path?: never;
    query?: never;
    url: '/api/support-feedbacks/';
};

export type SupportFeedbacksCreateResponses = {
    201: CreateFeedback;
};

export type SupportFeedbacksCreateResponse = SupportFeedbacksCreateResponses[keyof SupportFeedbacksCreateResponses];

export type SupportFeedbacksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-feedbacks/{uuid}/';
};

export type SupportFeedbacksRetrieveResponses = {
    200: Feedback;
};

export type SupportFeedbacksRetrieveResponse = SupportFeedbacksRetrieveResponses[keyof SupportFeedbacksRetrieveResponses];

export type SupportIssuesListData = {
    body?: never;
    path?: never;
    query?: {
        assignee?: string;
        assignee_name?: string;
        caller?: string;
        /**
         * Caller full name contains
         */
        caller_full_name?: string;
        customer?: string;
        customer_uuid?: string;
        key?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-assignee_name' | '-caller_first_name' | '-caller_last_name' | '-created' | '-customer_name' | '-key' | '-modified' | '-priority' | '-project_name' | '-remote_id' | '-reporter_name' | '-status' | '-summary' | '-type' | 'assignee_name' | 'caller_first_name' | 'caller_last_name' | 'created' | 'customer_name' | 'key' | 'modified' | 'priority' | 'project_name' | 'remote_id' | 'reporter_name' | 'status' | 'summary' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        /**
         * Summary or key contains
         */
        query?: string;
        remote_id?: string;
        reporter?: string;
        reporter_name?: string;
        resolution_year_month?: string;
        /**
         * Resource external IP
         */
        resource_external_ip?: string;
        /**
         * Resource internal IP
         */
        resource_internal_ip?: string;
        /**
         * Resource UUID
         */
        resource_uuid?: string;
        status?: string;
        summary?: string;
        type?: string;
    };
    url: '/api/support-issues/';
};

export type SupportIssuesListResponses = {
    200: Array<Issue>;
};

export type SupportIssuesListResponse = SupportIssuesListResponses[keyof SupportIssuesListResponses];

export type SupportIssuesCountData = {
    body?: never;
    path?: never;
    query?: {
        assignee?: string;
        assignee_name?: string;
        caller?: string;
        /**
         * Caller full name contains
         */
        caller_full_name?: string;
        customer?: string;
        customer_uuid?: string;
        key?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-assignee_name' | '-caller_first_name' | '-caller_last_name' | '-created' | '-customer_name' | '-key' | '-modified' | '-priority' | '-project_name' | '-remote_id' | '-reporter_name' | '-status' | '-summary' | '-type' | 'assignee_name' | 'caller_first_name' | 'caller_last_name' | 'created' | 'customer_name' | 'key' | 'modified' | 'priority' | 'project_name' | 'remote_id' | 'reporter_name' | 'status' | 'summary' | 'type'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_uuid?: string;
        /**
         * Summary or key contains
         */
        query?: string;
        remote_id?: string;
        reporter?: string;
        reporter_name?: string;
        resolution_year_month?: string;
        /**
         * Resource external IP
         */
        resource_external_ip?: string;
        /**
         * Resource internal IP
         */
        resource_internal_ip?: string;
        /**
         * Resource UUID
         */
        resource_uuid?: string;
        status?: string;
        summary?: string;
        type?: string;
    };
    url: '/api/support-issues/';
};

export type SupportIssuesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportIssuesCreateData = {
    body: IssueRequest;
    path?: never;
    query?: never;
    url: '/api/support-issues/';
};

export type SupportIssuesCreateResponses = {
    201: Issue;
};

export type SupportIssuesCreateResponse = SupportIssuesCreateResponses[keyof SupportIssuesCreateResponses];

export type SupportIssuesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/';
};

export type SupportIssuesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SupportIssuesDestroyResponse = SupportIssuesDestroyResponses[keyof SupportIssuesDestroyResponses];

export type SupportIssuesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/';
};

export type SupportIssuesRetrieveResponses = {
    200: Issue;
};

export type SupportIssuesRetrieveResponse = SupportIssuesRetrieveResponses[keyof SupportIssuesRetrieveResponses];

export type SupportIssuesPartialUpdateData = {
    body?: PatchedIssueRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/';
};

export type SupportIssuesPartialUpdateResponses = {
    200: Issue;
};

export type SupportIssuesPartialUpdateResponse = SupportIssuesPartialUpdateResponses[keyof SupportIssuesPartialUpdateResponses];

export type SupportIssuesUpdateData = {
    body: IssueRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/';
};

export type SupportIssuesUpdateResponses = {
    200: Issue;
};

export type SupportIssuesUpdateResponse = SupportIssuesUpdateResponses[keyof SupportIssuesUpdateResponses];

export type SupportIssuesCommentData = {
    body: CommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/comment/';
};

export type SupportIssuesCommentResponses = {
    200: Comment;
};

export type SupportIssuesCommentResponse = SupportIssuesCommentResponses[keyof SupportIssuesCommentResponses];

export type SupportIssuesSyncData = {
    body: IssueRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-issues/{uuid}/sync/';
};

export type SupportIssuesSyncResponses = {
    200: Issue;
};

export type SupportIssuesSyncResponse = SupportIssuesSyncResponses[keyof SupportIssuesSyncResponses];

export type SupportJiraWebhookData = {
    body: WebHookReceiverRequest;
    path?: never;
    query?: never;
    url: '/api/support-jira-webhook/';
};

export type SupportJiraWebhookResponses = {
    200: WebHookReceiver;
};

export type SupportJiraWebhookResponse = SupportJiraWebhookResponses[keyof SupportJiraWebhookResponses];

export type SupportPrioritiesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-priorities/';
};

export type SupportPrioritiesListResponses = {
    200: Array<Priority>;
};

export type SupportPrioritiesListResponse = SupportPrioritiesListResponses[keyof SupportPrioritiesListResponses];

export type SupportPrioritiesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-priorities/';
};

export type SupportPrioritiesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportPrioritiesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-priorities/{uuid}/';
};

export type SupportPrioritiesRetrieveResponses = {
    200: Priority;
};

export type SupportPrioritiesRetrieveResponse = SupportPrioritiesRetrieveResponses[keyof SupportPrioritiesRetrieveResponses];

export type SupportSmaxWebhookData = {
    body: SmaxWebHookReceiverRequest;
    path?: never;
    query?: never;
    url: '/api/support-smax-webhook/';
};

export type SupportSmaxWebhookResponses = {
    200: SmaxWebHookReceiver;
};

export type SupportSmaxWebhookResponse = SupportSmaxWebhookResponses[keyof SupportSmaxWebhookResponses];

export type SupportStatisticsRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/support-statistics/';
};

export type SupportStatisticsRetrieveResponses = {
    200: SupportStats;
};

export type SupportStatisticsRetrieveResponse = SupportStatisticsRetrieveResponses[keyof SupportStatisticsRetrieveResponses];

export type SupportTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-templates/';
};

export type SupportTemplatesListResponses = {
    200: Array<Template>;
};

export type SupportTemplatesListResponse = SupportTemplatesListResponses[keyof SupportTemplatesListResponses];

export type SupportTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/support-templates/';
};

export type SupportTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportTemplatesCreateData = {
    body: TemplateRequest;
    path?: never;
    query?: never;
    url: '/api/support-templates/';
};

export type SupportTemplatesCreateResponses = {
    201: Template;
};

export type SupportTemplatesCreateResponse = SupportTemplatesCreateResponses[keyof SupportTemplatesCreateResponses];

export type SupportTemplatesDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/';
};

export type SupportTemplatesDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type SupportTemplatesDestroyResponse = SupportTemplatesDestroyResponses[keyof SupportTemplatesDestroyResponses];

export type SupportTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/';
};

export type SupportTemplatesRetrieveResponses = {
    200: Template;
};

export type SupportTemplatesRetrieveResponse = SupportTemplatesRetrieveResponses[keyof SupportTemplatesRetrieveResponses];

export type SupportTemplatesPartialUpdateData = {
    body?: PatchedTemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/';
};

export type SupportTemplatesPartialUpdateResponses = {
    200: Template;
};

export type SupportTemplatesPartialUpdateResponse = SupportTemplatesPartialUpdateResponses[keyof SupportTemplatesPartialUpdateResponses];

export type SupportTemplatesUpdateData = {
    body: TemplateRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/';
};

export type SupportTemplatesUpdateResponses = {
    200: Template;
};

export type SupportTemplatesUpdateResponse = SupportTemplatesUpdateResponses[keyof SupportTemplatesUpdateResponses];

export type SupportTemplatesCreateAttachmentsData = {
    body: CreateAttachmentsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/create_attachments/';
};

export type SupportTemplatesCreateAttachmentsErrors = {
    /**
     * No response body
     */
    400: unknown;
};

export type SupportTemplatesCreateAttachmentsResponses = {
    /**
     * No response body
     */
    201: unknown;
};

export type SupportTemplatesDeleteAttachmentsData = {
    body: DeleteAttachmentsRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-templates/{uuid}/delete_attachments/';
};

export type SupportTemplatesDeleteAttachmentsResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportUsersListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: number;
    };
    url: '/api/support-users/';
};

export type SupportUsersListResponses = {
    200: Array<SupportUser>;
};

export type SupportUsersListResponse = SupportUsersListResponses[keyof SupportUsersListResponses];

export type SupportUsersCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        name?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        user?: number;
    };
    url: '/api/support-users/';
};

export type SupportUsersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SupportUsersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/support-users/{uuid}/';
};

export type SupportUsersRetrieveResponses = {
    200: SupportUser;
};

export type SupportUsersRetrieveResponse = SupportUsersRetrieveResponses[keyof SupportUsersRetrieveResponses];

export type SupportZammadWebhookData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/support-zammad-webhook/';
};

export type SupportZammadWebhookResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type SyncIssuesRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/sync-issues/';
};

export type SyncIssuesRetrieveErrors = {
    /**
     * No response body
     */
    403: unknown;
};

export type SyncIssuesRetrieveResponses = {
    /**
     * No response body
     */
    202: unknown;
};

export type SyncIssuesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/sync-issues/';
};

export type SyncIssuesErrors = {
    /**
     * No response body
     */
    403: unknown;
};

export type SyncIssuesResponses = {
    /**
     * No response body
     */
    202: unknown;
};

export type UserAgreementsListData = {
    body?: never;
    path?: never;
    query?: {
        agreement_type?: 'PP' | 'TOS';
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/user-agreements/';
};

export type UserAgreementsListResponses = {
    200: Array<UserAgreement>;
};

export type UserAgreementsListResponse = UserAgreementsListResponses[keyof UserAgreementsListResponses];

export type UserAgreementsCountData = {
    body?: never;
    path?: never;
    query?: {
        agreement_type?: 'PP' | 'TOS';
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/user-agreements/';
};

export type UserAgreementsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserAgreementsCreateData = {
    body: UserAgreementRequest;
    path?: never;
    query?: never;
    url: '/api/user-agreements/';
};

export type UserAgreementsCreateResponses = {
    201: UserAgreement;
};

export type UserAgreementsCreateResponse = UserAgreementsCreateResponses[keyof UserAgreementsCreateResponses];

export type UserAgreementsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-agreements/{uuid}/';
};

export type UserAgreementsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type UserAgreementsDestroyResponse = UserAgreementsDestroyResponses[keyof UserAgreementsDestroyResponses];

export type UserAgreementsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-agreements/{uuid}/';
};

export type UserAgreementsRetrieveResponses = {
    200: UserAgreement;
};

export type UserAgreementsRetrieveResponse = UserAgreementsRetrieveResponses[keyof UserAgreementsRetrieveResponses];

export type UserAgreementsPartialUpdateData = {
    body?: PatchedUserAgreementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-agreements/{uuid}/';
};

export type UserAgreementsPartialUpdateResponses = {
    200: UserAgreement;
};

export type UserAgreementsPartialUpdateResponse = UserAgreementsPartialUpdateResponses[keyof UserAgreementsPartialUpdateResponses];

export type UserAgreementsUpdateData = {
    body: UserAgreementRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-agreements/{uuid}/';
};

export type UserAgreementsUpdateResponses = {
    200: UserAgreement;
};

export type UserAgreementsUpdateResponse = UserAgreementsUpdateResponses[keyof UserAgreementsUpdateResponses];

export type UserGroupInvitationsListData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_name?: string;
        role_uuid?: string;
        scope_type?: string;
    };
    url: '/api/user-group-invitations/';
};

export type UserGroupInvitationsListResponses = {
    200: Array<GroupInvitation>;
};

export type UserGroupInvitationsListResponse = UserGroupInvitationsListResponses[keyof UserGroupInvitationsListResponses];

export type UserGroupInvitationsCountData = {
    body?: never;
    path?: never;
    query?: {
        customer_uuid?: string;
        is_active?: boolean;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | 'created'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_name?: string;
        role_uuid?: string;
        scope_type?: string;
    };
    url: '/api/user-group-invitations/';
};

export type UserGroupInvitationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserGroupInvitationsCreateData = {
    body: GroupInvitationRequest;
    path?: never;
    query?: never;
    url: '/api/user-group-invitations/';
};

export type UserGroupInvitationsCreateResponses = {
    201: GroupInvitation;
};

export type UserGroupInvitationsCreateResponse = UserGroupInvitationsCreateResponses[keyof UserGroupInvitationsCreateResponses];

export type UserGroupInvitationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-group-invitations/{uuid}/';
};

export type UserGroupInvitationsRetrieveResponses = {
    200: GroupInvitation;
};

export type UserGroupInvitationsRetrieveResponse = UserGroupInvitationsRetrieveResponses[keyof UserGroupInvitationsRetrieveResponses];

export type UserGroupInvitationsCancelData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-group-invitations/{uuid}/cancel/';
};

export type UserGroupInvitationsCancelResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserGroupInvitationsProjectsListData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
    };
    url: '/api/user-group-invitations/{uuid}/projects/';
};

export type UserGroupInvitationsProjectsListResponses = {
    200: Array<NestedProject>;
};

export type UserGroupInvitationsProjectsListResponse = UserGroupInvitationsProjectsListResponses[keyof UserGroupInvitationsProjectsListResponses];

export type UserGroupInvitationsSubmitRequestData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-group-invitations/{uuid}/submit_request/';
};

export type UserGroupInvitationsSubmitRequestResponses = {
    200: GroupInvitation;
};

export type UserGroupInvitationsSubmitRequestResponse = UserGroupInvitationsSubmitRequestResponses[keyof UserGroupInvitationsSubmitRequestResponses];

export type UserInvitationsListData = {
    body?: never;
    path?: never;
    query?: {
        civil_number?: string;
        customer_uuid?: string;
        email?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-created_by' | '-email' | '-state' | 'created' | 'created_by' | 'email' | 'state'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_name?: string;
        role_uuid?: string;
        scope_type?: string;
        state?: Array<'accepted' | 'canceled' | 'expired' | 'pending' | 'project' | 'rejected' | 'requested'>;
    };
    url: '/api/user-invitations/';
};

export type UserInvitationsListResponses = {
    200: Array<Invitation>;
};

export type UserInvitationsListResponse = UserInvitationsListResponses[keyof UserInvitationsListResponses];

export type UserInvitationsCountData = {
    body?: never;
    path?: never;
    query?: {
        civil_number?: string;
        customer_uuid?: string;
        email?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-created_by' | '-email' | '-state' | 'created' | 'created_by' | 'email' | 'state'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        role_name?: string;
        role_uuid?: string;
        scope_type?: string;
        state?: Array<'accepted' | 'canceled' | 'expired' | 'pending' | 'project' | 'rejected' | 'requested'>;
    };
    url: '/api/user-invitations/';
};

export type UserInvitationsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsCreateData = {
    body: InvitationRequest;
    path?: never;
    query?: never;
    url: '/api/user-invitations/';
};

export type UserInvitationsCreateResponses = {
    201: Invitation;
};

export type UserInvitationsCreateResponse = UserInvitationsCreateResponses[keyof UserInvitationsCreateResponses];

export type UserInvitationsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/';
};

export type UserInvitationsRetrieveResponses = {
    200: Invitation;
};

export type UserInvitationsRetrieveResponse = UserInvitationsRetrieveResponses[keyof UserInvitationsRetrieveResponses];

export type UserInvitationsAcceptData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/accept/';
};

export type UserInvitationsAcceptResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsCancelData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/cancel/';
};

export type UserInvitationsCancelResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsCheckData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/check/';
};

export type UserInvitationsCheckResponses = {
    200: InvitationCheck;
};

export type UserInvitationsCheckResponse = UserInvitationsCheckResponses[keyof UserInvitationsCheckResponses];

export type UserInvitationsDeleteData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/delete/';
};

export type UserInvitationsDeleteResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsDetailsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/details/';
};

export type UserInvitationsDetailsRetrieveResponses = {
    200: VisibleInvitationDetails;
};

export type UserInvitationsDetailsRetrieveResponse = UserInvitationsDetailsRetrieveResponses[keyof UserInvitationsDetailsRetrieveResponses];

export type UserInvitationsSendData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-invitations/{uuid}/send/';
};

export type UserInvitationsSendResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsApproveData = {
    body: TokenRequest;
    path?: never;
    query?: never;
    url: '/api/user-invitations/approve/';
};

export type UserInvitationsApproveResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserInvitationsRejectData = {
    body: TokenRequest;
    path?: never;
    query?: never;
    url: '/api/user-invitations/reject/';
};

export type UserInvitationsRejectResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserPermissionRequestsListData = {
    body?: never;
    path?: never;
    query?: {
        created_by?: string;
        customer_uuid?: string;
        invitation?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-state' | 'created' | 'state'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'approved' | 'canceled' | 'draft' | 'pending' | 'rejected'>;
    };
    url: '/api/user-permission-requests/';
};

export type UserPermissionRequestsListResponses = {
    200: Array<PermissionRequest>;
};

export type UserPermissionRequestsListResponse = UserPermissionRequestsListResponses[keyof UserPermissionRequestsListResponses];

export type UserPermissionRequestsCountData = {
    body?: never;
    path?: never;
    query?: {
        created_by?: string;
        customer_uuid?: string;
        invitation?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-state' | 'created' | 'state'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        state?: Array<'approved' | 'canceled' | 'draft' | 'pending' | 'rejected'>;
    };
    url: '/api/user-permission-requests/';
};

export type UserPermissionRequestsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserPermissionRequestsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-permission-requests/{uuid}/';
};

export type UserPermissionRequestsRetrieveResponses = {
    200: PermissionRequest;
};

export type UserPermissionRequestsRetrieveResponse = UserPermissionRequestsRetrieveResponses[keyof UserPermissionRequestsRetrieveResponses];

export type UserPermissionRequestsApproveData = {
    body?: ReviewCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-permission-requests/{uuid}/approve/';
};

export type UserPermissionRequestsApproveResponses = {
    200: ReviewComment;
};

export type UserPermissionRequestsApproveResponse = UserPermissionRequestsApproveResponses[keyof UserPermissionRequestsApproveResponses];

export type UserPermissionRequestsRejectData = {
    body?: ReviewCommentRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-permission-requests/{uuid}/reject/';
};

export type UserPermissionRequestsRejectResponses = {
    200: ReviewComment;
};

export type UserPermissionRequestsRejectResponse = UserPermissionRequestsRejectResponses[keyof UserPermissionRequestsRejectResponses];

export type UserPermissionsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        expiration_time?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/user-permissions/';
};

export type UserPermissionsListResponses = {
    200: Array<Permission>;
};

export type UserPermissionsListResponse = UserPermissionsListResponses[keyof UserPermissionsListResponses];

export type UserPermissionsCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Created after
         */
        created?: string;
        expiration_time?: string;
        /**
         * User full name contains
         */
        full_name?: string;
        /**
         * Modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-created' | '-email' | '-expiration_time' | '-full_name' | '-native_name' | '-role' | '-username' | 'created' | 'email' | 'expiration_time' | 'full_name' | 'native_name' | 'role' | 'username'>;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        /**
         * Role name contains
         */
        role_name?: string;
        /**
         * Role UUID
         */
        role_uuid?: string;
        /**
         * Scope name
         */
        scope_name?: string;
        /**
         * Scope type
         */
        scope_type?: string;
        /**
         * Scope UUID
         */
        scope_uuid?: string;
        user?: string;
        /**
         * User slug contains
         */
        user_slug?: string;
        user_url?: string;
        username?: string;
    };
    url: '/api/user-permissions/';
};

export type UserPermissionsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UserPermissionsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/user-permissions/{uuid}/';
};

export type UserPermissionsRetrieveResponses = {
    200: Permission;
};

export type UserPermissionsRetrieveResponse = UserPermissionsRetrieveResponses[keyof UserPermissionsRetrieveResponses];

export type UsersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Agreement date after
         */
        agreement_date?: string;
        civil_number?: string;
        customer_uuid?: string;
        /**
         * Date joined after
         */
        date_joined?: string;
        description?: string;
        email?: string;
        field?: Array<'affiliations' | 'agree_with_policy' | 'agreement_date' | 'civil_number' | 'date_joined' | 'description' | 'email' | 'first_name' | 'full_name' | 'has_active_session' | 'identity_provider_fields' | 'identity_provider_label' | 'identity_provider_management_url' | 'identity_provider_name' | 'identity_source' | 'image' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'last_name' | 'native_name' | 'notifications_enabled' | 'organization' | 'permissions' | 'phone_number' | 'preferred_language' | 'registration_method' | 'requested_email' | 'slug' | 'token' | 'token_expires_at' | 'token_lifetime' | 'url' | 'username' | 'uuid'>;
        /**
         * Full name
         */
        full_name?: string;
        is_active?: boolean;
        is_staff?: boolean;
        is_support?: boolean;
        job_title?: string;
        /**
         * Date modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-description' | '-email' | '-full_name' | '-is_active' | '-is_staff' | '-is_support' | '-job_title' | '-native_name' | '-organization' | '-phone_number' | '-registration_method' | '-username' | 'description' | 'email' | 'full_name' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'native_name' | 'organization' | 'phone_number' | 'registration_method' | 'username'>;
        organization?: string;
        /**
         * Organization roles
         */
        organization_roles?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        phone_number?: string;
        /**
         * Project roles
         */
        project_roles?: string;
        project_uuid?: string;
        /**
         * Filter by first name, last name, civil number, username or email
         */
        query?: string;
        registration_method?: string;
        /**
         * User keyword
         */
        user_keyword?: string;
        username?: string;
        /**
         * Comma-separated usernames
         */
        username_list?: string;
    };
    url: '/api/users/';
};

export type UsersListResponses = {
    200: Array<User>;
};

export type UsersListResponse = UsersListResponses[keyof UsersListResponses];

export type UsersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Agreement date after
         */
        agreement_date?: string;
        civil_number?: string;
        customer_uuid?: string;
        /**
         * Date joined after
         */
        date_joined?: string;
        description?: string;
        email?: string;
        /**
         * Full name
         */
        full_name?: string;
        is_active?: boolean;
        is_staff?: boolean;
        is_support?: boolean;
        job_title?: string;
        /**
         * Date modified after
         */
        modified?: string;
        native_name?: string;
        /**
         * Ordering
         *
         *
         */
        o?: Array<'-description' | '-email' | '-full_name' | '-is_active' | '-is_staff' | '-is_support' | '-job_title' | '-native_name' | '-organization' | '-phone_number' | '-registration_method' | '-username' | 'description' | 'email' | 'full_name' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'native_name' | 'organization' | 'phone_number' | 'registration_method' | 'username'>;
        organization?: string;
        /**
         * Organization roles
         */
        organization_roles?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        phone_number?: string;
        /**
         * Project roles
         */
        project_roles?: string;
        project_uuid?: string;
        /**
         * Filter by first name, last name, civil number, username or email
         */
        query?: string;
        registration_method?: string;
        /**
         * User keyword
         */
        user_keyword?: string;
        username?: string;
        /**
         * Comma-separated usernames
         */
        username_list?: string;
    };
    url: '/api/users/';
};

export type UsersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersCreateData = {
    body: UserRequest;
    path?: never;
    query?: never;
    url: '/api/users/';
};

export type UsersCreateResponses = {
    201: User;
};

export type UsersCreateResponse = UsersCreateResponses[keyof UsersCreateResponses];

export type UsersDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/';
};

export type UsersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type UsersDestroyResponse = UsersDestroyResponses[keyof UsersDestroyResponses];

export type UsersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'affiliations' | 'agree_with_policy' | 'agreement_date' | 'civil_number' | 'date_joined' | 'description' | 'email' | 'first_name' | 'full_name' | 'has_active_session' | 'identity_provider_fields' | 'identity_provider_label' | 'identity_provider_management_url' | 'identity_provider_name' | 'identity_source' | 'image' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'last_name' | 'native_name' | 'notifications_enabled' | 'organization' | 'permissions' | 'phone_number' | 'preferred_language' | 'registration_method' | 'requested_email' | 'slug' | 'token' | 'token_expires_at' | 'token_lifetime' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/users/{uuid}/';
};

export type UsersRetrieveResponses = {
    200: User;
};

export type UsersRetrieveResponse = UsersRetrieveResponses[keyof UsersRetrieveResponses];

export type UsersPartialUpdateData = {
    body?: PatchedUserRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/';
};

export type UsersPartialUpdateResponses = {
    200: User;
};

export type UsersPartialUpdateResponse = UsersPartialUpdateResponses[keyof UsersPartialUpdateResponses];

export type UsersUpdateData = {
    body: UserRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/';
};

export type UsersUpdateResponses = {
    200: User;
};

export type UsersUpdateResponse = UsersUpdateResponses[keyof UsersUpdateResponses];

export type UsersCancelChangeEmailData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/cancel_change_email/';
};

export type UsersCancelChangeEmailResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersChangeEmailData = {
    body: UserEmailChangeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/change_email/';
};

export type UsersChangeEmailResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersChangePasswordData = {
    body: PasswordChangeRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/change_password/';
};

export type UsersChangePasswordResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersPullRemoteUserData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/pull_remote_user/';
};

export type UsersPullRemoteUserResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersRefreshTokenData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/refresh_token/';
};

export type UsersRefreshTokenResponses = {
    200: UserAuthToken;
};

export type UsersRefreshTokenResponse = UsersRefreshTokenResponses[keyof UsersRefreshTokenResponses];

export type UsersTokenRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/users/{uuid}/token/';
};

export type UsersTokenRetrieveResponses = {
    200: UserAuthToken;
};

export type UsersTokenRetrieveResponse = UsersTokenRetrieveResponses[keyof UsersTokenRetrieveResponses];

export type UsersConfirmEmailData = {
    body: ConfirmEmailRequestRequest;
    path?: never;
    query?: never;
    url: '/api/users/confirm_email/';
};

export type UsersConfirmEmailResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type UsersMeRetrieveData = {
    body?: never;
    path?: never;
    query?: {
        field?: Array<'affiliations' | 'agree_with_policy' | 'agreement_date' | 'civil_number' | 'date_joined' | 'description' | 'email' | 'first_name' | 'full_name' | 'has_active_session' | 'identity_provider_fields' | 'identity_provider_label' | 'identity_provider_management_url' | 'identity_provider_name' | 'identity_source' | 'image' | 'is_active' | 'is_staff' | 'is_support' | 'job_title' | 'last_name' | 'native_name' | 'notifications_enabled' | 'organization' | 'permissions' | 'phone_number' | 'preferred_language' | 'registration_method' | 'requested_email' | 'slug' | 'token' | 'token_expires_at' | 'token_lifetime' | 'url' | 'username' | 'uuid'>;
    };
    url: '/api/users/me/';
};

export type UsersMeRetrieveResponses = {
    200: User;
};

export type UsersMeRetrieveResponse = UsersMeRetrieveResponses[keyof UsersMeRetrieveResponses];

export type UsersMeCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me/';
};

export type UsersMeCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VersionRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/version/';
};

export type VersionRetrieveResponses = {
    200: Version;
};

export type VersionRetrieveResponse = VersionRetrieveResponses[keyof VersionRetrieveResponses];

export type VmwareClustersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-clusters/';
};

export type VmwareClustersListResponses = {
    200: Array<VmwareCluster>;
};

export type VmwareClustersListResponse = VmwareClustersListResponses[keyof VmwareClustersListResponses];

export type VmwareClustersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-clusters/';
};

export type VmwareClustersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareClustersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-clusters/{uuid}/';
};

export type VmwareClustersRetrieveResponses = {
    200: VmwareCluster;
};

export type VmwareClustersRetrieveResponse = VmwareClustersRetrieveResponses[keyof VmwareClustersRetrieveResponses];

export type VmwareDatastoresListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-datastores/';
};

export type VmwareDatastoresListResponses = {
    200: Array<VmwareDatastore>;
};

export type VmwareDatastoresListResponse = VmwareDatastoresListResponses[keyof VmwareDatastoresListResponses];

export type VmwareDatastoresCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-datastores/';
};

export type VmwareDatastoresCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareDatastoresRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-datastores/{uuid}/';
};

export type VmwareDatastoresRetrieveResponses = {
    200: VmwareDatastore;
};

export type VmwareDatastoresRetrieveResponse = VmwareDatastoresRetrieveResponses[keyof VmwareDatastoresRetrieveResponses];

export type VmwareDisksListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'state' | 'url' | 'uuid' | 'vm' | 'vm_name' | 'vm_uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
        vm?: string;
        vm_uuid?: string;
    };
    url: '/api/vmware-disks/';
};

export type VmwareDisksListResponses = {
    200: Array<VmwareDisk>;
};

export type VmwareDisksListResponse = VmwareDisksListResponses[keyof VmwareDisksListResponses];

export type VmwareDisksCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
        vm?: string;
        vm_uuid?: string;
    };
    url: '/api/vmware-disks/';
};

export type VmwareDisksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareDisksDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-disks/{uuid}/';
};

export type VmwareDisksDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type VmwareDisksDestroyResponse = VmwareDisksDestroyResponses[keyof VmwareDisksDestroyResponses];

export type VmwareDisksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'size' | 'state' | 'url' | 'uuid' | 'vm' | 'vm_name' | 'vm_uuid'>;
    };
    url: '/api/vmware-disks/{uuid}/';
};

export type VmwareDisksRetrieveResponses = {
    200: VmwareDisk;
};

export type VmwareDisksRetrieveResponse = VmwareDisksRetrieveResponses[keyof VmwareDisksRetrieveResponses];

export type VmwareDisksExtendData = {
    body: VmwareDiskExtendRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-disks/{uuid}/extend/';
};

export type VmwareDisksExtendResponses = {
    200: VmwareDiskExtend;
};

export type VmwareDisksExtendResponse = VmwareDisksExtendResponses[keyof VmwareDisksExtendResponses];

export type VmwareDisksPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-disks/{uuid}/pull/';
};

export type VmwareDisksPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareDisksUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-disks/{uuid}/unlink/';
};

export type VmwareDisksUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareFoldersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-folders/';
};

export type VmwareFoldersListResponses = {
    200: Array<VmwareFolder>;
};

export type VmwareFoldersListResponse = VmwareFoldersListResponses[keyof VmwareFoldersListResponses];

export type VmwareFoldersCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-folders/';
};

export type VmwareFoldersCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareFoldersRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-folders/{uuid}/';
};

export type VmwareFoldersRetrieveResponses = {
    200: VmwareFolder;
};

export type VmwareFoldersRetrieveResponse = VmwareFoldersRetrieveResponses[keyof VmwareFoldersRetrieveResponses];

export type VmwareLimitsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-limits/{uuid}/';
};

export type VmwareLimitsRetrieveResponses = {
    200: VmwareLimit;
};

export type VmwareLimitsRetrieveResponse = VmwareLimitsRetrieveResponses[keyof VmwareLimitsRetrieveResponses];

export type VmwareNetworksListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_pair_uuid?: string;
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-networks/';
};

export type VmwareNetworksListResponses = {
    200: Array<VmwareNetwork>;
};

export type VmwareNetworksListResponse = VmwareNetworksListResponses[keyof VmwareNetworksListResponses];

export type VmwareNetworksCountData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Customer UUID
         */
        customer_pair_uuid?: string;
        /**
         * Customer UUID
         */
        customer_uuid?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-networks/';
};

export type VmwareNetworksCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareNetworksRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-networks/{uuid}/';
};

export type VmwareNetworksRetrieveResponses = {
    200: VmwareNetwork;
};

export type VmwareNetworksRetrieveResponse = VmwareNetworksRetrieveResponses[keyof VmwareNetworksRetrieveResponses];

export type VmwarePortsListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'mac_address' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid' | 'vm' | 'vm_name' | 'vm_uuid'>;
        name?: string;
        name_exact?: string;
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
        vm?: string;
        vm_uuid?: string;
    };
    url: '/api/vmware-ports/';
};

export type VmwarePortsListResponses = {
    200: Array<VmwarePort>;
};

export type VmwarePortsListResponse = VmwarePortsListResponses[keyof VmwarePortsListResponses];

export type VmwarePortsCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        network?: string;
        network_uuid?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
        vm?: string;
        vm_uuid?: string;
    };
    url: '/api/vmware-ports/';
};

export type VmwarePortsCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwarePortsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-ports/{uuid}/';
};

export type VmwarePortsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type VmwarePortsDestroyResponse = VmwarePortsDestroyResponses[keyof VmwarePortsDestroyResponses];

export type VmwarePortsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'description' | 'error_message' | 'error_traceback' | 'is_limit_based' | 'is_usage_based' | 'mac_address' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'network' | 'network_name' | 'project' | 'project_name' | 'project_uuid' | 'resource_type' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'url' | 'uuid' | 'vm' | 'vm_name' | 'vm_uuid'>;
    };
    url: '/api/vmware-ports/{uuid}/';
};

export type VmwarePortsRetrieveResponses = {
    200: VmwarePort;
};

export type VmwarePortsRetrieveResponse = VmwarePortsRetrieveResponses[keyof VmwarePortsRetrieveResponses];

export type VmwarePortsPullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-ports/{uuid}/pull/';
};

export type VmwarePortsPullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwarePortsUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-ports/{uuid}/unlink/';
};

export type VmwarePortsUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareTemplatesListData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-templates/';
};

export type VmwareTemplatesListResponses = {
    200: Array<VmwareTemplate>;
};

export type VmwareTemplatesListResponse = VmwareTemplatesListResponses[keyof VmwareTemplatesListResponses];

export type VmwareTemplatesCountData = {
    body?: never;
    path?: never;
    query?: {
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        settings?: string;
        settings_uuid?: string;
    };
    url: '/api/vmware-templates/';
};

export type VmwareTemplatesCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareTemplatesRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-templates/{uuid}/';
};

export type VmwareTemplatesRetrieveResponses = {
    200: VmwareTemplate;
};

export type VmwareTemplatesRetrieveResponse = VmwareTemplatesRetrieveResponses[keyof VmwareTemplatesRetrieveResponses];

export type VmwareVirtualMachineListData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        field?: Array<'access_url' | 'backend_id' | 'cluster' | 'cluster_name' | 'cores' | 'cores_per_socket' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'datastore' | 'datastore_name' | 'description' | 'disk' | 'disks' | 'error_message' | 'error_traceback' | 'folder' | 'folder_name' | 'guest_os' | 'guest_os_name' | 'guest_power_state' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'networks' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'template' | 'template_name' | 'tools_installed' | 'tools_state' | 'url' | 'uuid'>;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/vmware-virtual-machine/';
};

export type VmwareVirtualMachineListResponses = {
    200: Array<VmwareVirtualMachine>;
};

export type VmwareVirtualMachineListResponse = VmwareVirtualMachineListResponses[keyof VmwareVirtualMachineListResponses];

export type VmwareVirtualMachineCountData = {
    body?: never;
    path?: never;
    query?: {
        backend_id?: string;
        /**
         * Can manage
         */
        can_manage?: boolean;
        customer?: string;
        customer_abbreviation?: string;
        customer_name?: string;
        customer_native_name?: string;
        customer_uuid?: string;
        description?: string;
        external_ip?: string;
        name?: string;
        name_exact?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * Number of results to return per page.
         */
        page_size?: number;
        project?: string;
        project_name?: string;
        project_uuid?: string;
        runtime_state?: string;
        service_settings_name?: string;
        service_settings_uuid?: string;
        state?: Array<'CREATING' | 'CREATION_SCHEDULED' | 'DELETING' | 'DELETION_SCHEDULED' | 'ERRED' | 'OK' | 'UPDATE_SCHEDULED' | 'UPDATING'>;
        uuid?: string;
    };
    url: '/api/vmware-virtual-machine/';
};

export type VmwareVirtualMachineCountResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineCreateData = {
    body: VmwareVirtualMachineRequest;
    path?: never;
    query?: never;
    url: '/api/vmware-virtual-machine/';
};

export type VmwareVirtualMachineCreateResponses = {
    201: VmwareVirtualMachine;
};

export type VmwareVirtualMachineCreateResponse = VmwareVirtualMachineCreateResponses[keyof VmwareVirtualMachineCreateResponses];

export type VmwareVirtualMachineDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/';
};

export type VmwareVirtualMachineDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type VmwareVirtualMachineDestroyResponse = VmwareVirtualMachineDestroyResponses[keyof VmwareVirtualMachineDestroyResponses];

export type VmwareVirtualMachineRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: {
        field?: Array<'access_url' | 'backend_id' | 'cluster' | 'cluster_name' | 'cores' | 'cores_per_socket' | 'created' | 'customer' | 'customer_abbreviation' | 'customer_name' | 'customer_native_name' | 'datastore' | 'datastore_name' | 'description' | 'disk' | 'disks' | 'error_message' | 'error_traceback' | 'folder' | 'folder_name' | 'guest_os' | 'guest_os_name' | 'guest_power_state' | 'is_limit_based' | 'is_usage_based' | 'marketplace_category_name' | 'marketplace_category_uuid' | 'marketplace_offering_name' | 'marketplace_offering_plugin_options' | 'marketplace_offering_uuid' | 'marketplace_plan_uuid' | 'marketplace_resource_state' | 'marketplace_resource_uuid' | 'modified' | 'name' | 'networks' | 'ports' | 'project' | 'project_name' | 'project_uuid' | 'ram' | 'resource_type' | 'runtime_state' | 'service_name' | 'service_settings' | 'service_settings_error_message' | 'service_settings_state' | 'service_settings_uuid' | 'state' | 'template' | 'template_name' | 'tools_installed' | 'tools_state' | 'url' | 'uuid'>;
    };
    url: '/api/vmware-virtual-machine/{uuid}/';
};

export type VmwareVirtualMachineRetrieveResponses = {
    200: VmwareVirtualMachine;
};

export type VmwareVirtualMachineRetrieveResponse = VmwareVirtualMachineRetrieveResponses[keyof VmwareVirtualMachineRetrieveResponses];

export type VmwareVirtualMachinePartialUpdateData = {
    body?: PatchedVmwareVirtualMachineRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/';
};

export type VmwareVirtualMachinePartialUpdateResponses = {
    200: VmwareVirtualMachine;
};

export type VmwareVirtualMachinePartialUpdateResponse = VmwareVirtualMachinePartialUpdateResponses[keyof VmwareVirtualMachinePartialUpdateResponses];

export type VmwareVirtualMachineUpdateData = {
    body: VmwareVirtualMachineRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/';
};

export type VmwareVirtualMachineUpdateResponses = {
    200: VmwareVirtualMachine;
};

export type VmwareVirtualMachineUpdateResponse = VmwareVirtualMachineUpdateResponses[keyof VmwareVirtualMachineUpdateResponses];

export type VmwareVirtualMachineConsoleRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/console/';
};

export type VmwareVirtualMachineConsoleRetrieveResponses = {
    200: ConsoleUrl;
};

export type VmwareVirtualMachineConsoleRetrieveResponse = VmwareVirtualMachineConsoleRetrieveResponses[keyof VmwareVirtualMachineConsoleRetrieveResponses];

export type VmwareVirtualMachineCreateDiskData = {
    body: VmwareDiskRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/create_disk/';
};

export type VmwareVirtualMachineCreateDiskResponses = {
    200: VmwareDisk;
};

export type VmwareVirtualMachineCreateDiskResponse = VmwareVirtualMachineCreateDiskResponses[keyof VmwareVirtualMachineCreateDiskResponses];

export type VmwareVirtualMachineCreatePortData = {
    body: VmwarePortRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/create_port/';
};

export type VmwareVirtualMachineCreatePortResponses = {
    200: VmwarePort;
};

export type VmwareVirtualMachineCreatePortResponse = VmwareVirtualMachineCreatePortResponses[keyof VmwareVirtualMachineCreatePortResponses];

export type VmwareVirtualMachinePullData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/pull/';
};

export type VmwareVirtualMachinePullResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineRebootGuestData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/reboot_guest/';
};

export type VmwareVirtualMachineRebootGuestResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineResetData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/reset/';
};

export type VmwareVirtualMachineResetResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineShutdownGuestData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/shutdown_guest/';
};

export type VmwareVirtualMachineShutdownGuestResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineStartData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/start/';
};

export type VmwareVirtualMachineStartResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineStopData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/stop/';
};

export type VmwareVirtualMachineStopResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineSuspendData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/suspend/';
};

export type VmwareVirtualMachineSuspendResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineUnlinkData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/unlink/';
};

export type VmwareVirtualMachineUnlinkResponses = {
    /**
     * No response body
     */
    200: unknown;
};

export type VmwareVirtualMachineWebConsoleRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/vmware-virtual-machine/{uuid}/web_console/';
};

export type VmwareVirtualMachineWebConsoleRetrieveResponses = {
    200: ConsoleUrl;
};

export type VmwareVirtualMachineWebConsoleRetrieveResponse = VmwareVirtualMachineWebConsoleRetrieveResponses[keyof VmwareVirtualMachineWebConsoleRetrieveResponses];

export type ClientOptions = {
    baseUrl: `${string}://waldur-openapi-schema.yaml` | (string & {});
};